{"ast":null,"code":"import _objectSpread from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useEffect}from'react';import{Redirect}from'react-router-dom';import{useAppDispatch}from'state/hooks';import{ApplicationModal,setOpenModal}from'../../state/application/actions';// Redirects to swap but only replace the pathname\nimport{jsx as _jsx}from\"react/jsx-runtime\";export function RedirectPathToSwapOnly(_ref){var location=_ref.location;return/*#__PURE__*/_jsx(Redirect,{to:_objectSpread(_objectSpread({},location),{},{pathname:'/swap'})});}// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props){var search=props.location.search,outputCurrency=props.match.params.outputCurrency;return/*#__PURE__*/_jsx(Redirect,{to:_objectSpread(_objectSpread({},props.location),{},{pathname:'/swap',search:search&&search.length>1?\"\".concat(search,\"&outputCurrency=\").concat(outputCurrency):\"?outputCurrency=\".concat(outputCurrency)})});}export function OpenClaimAddressModalAndRedirectToSwap(props){var dispatch=useAppDispatch();useEffect(function(){dispatch(setOpenModal(ApplicationModal.ADDRESS_CLAIM));},[dispatch]);return/*#__PURE__*/_jsx(RedirectPathToSwapOnly,_objectSpread({},props));}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/pages/Swap/redirects.tsx"],"names":["useEffect","Redirect","useAppDispatch","ApplicationModal","setOpenModal","RedirectPathToSwapOnly","location","pathname","RedirectToSwap","props","search","outputCurrency","match","params","length","OpenClaimAddressModalAndRedirectToSwap","dispatch","ADDRESS_CLAIM"],"mappings":"uLAAA,OAASA,SAAT,KAA0B,OAA1B,CAEA,OAASC,QAAT,KAA8C,kBAA9C,CACA,OAASC,cAAT,KAA+B,aAA/B,CACA,OAASC,gBAAT,CAA2BC,YAA3B,KAA+C,iCAA/C,CAEA;2CACA,MAAO,SAASC,CAAAA,sBAAT,MAAmE,IAAjCC,CAAAA,QAAiC,MAAjCA,QAAiC,CACxE,mBAAO,KAAC,QAAD,EAAU,EAAE,gCAAOA,QAAP,MAAiBC,QAAQ,CAAE,OAA3B,EAAZ,EAAP,CACD,CAED;AACA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAAgF,CACrF,GACcC,CAAAA,MADd,CAKID,KALJ,CACEH,QADF,CACcI,MADd,CAGcC,cAHd,CAKIF,KALJ,CAEEG,KAFF,CAGIC,MAHJ,CAGcF,cAHd,CAOA,mBACE,KAAC,QAAD,EACE,EAAE,gCACGF,KAAK,CAACH,QADT,MAEAC,QAAQ,CAAE,OAFV,CAGAG,MAAM,CACJA,MAAM,EAAIA,MAAM,CAACI,MAAP,CAAgB,CAA1B,WACOJ,MADP,4BACgCC,cADhC,4BAEuBA,cAFvB,CAJF,EADJ,EADF,CAYD,CAED,MAAO,SAASI,CAAAA,sCAAT,CAAgDN,KAAhD,CAA4E,CACjF,GAAMO,CAAAA,QAAQ,CAAGd,cAAc,EAA/B,CACAF,SAAS,CAAC,UAAM,CACdgB,QAAQ,CAACZ,YAAY,CAACD,gBAAgB,CAACc,aAAlB,CAAb,CAAR,CACD,CAFQ,CAEN,CAACD,QAAD,CAFM,CAAT,CAGA,mBAAO,KAAC,sBAAD,kBAA4BP,KAA5B,EAAP,CACD","sourcesContent":["import { useEffect } from 'react'\n\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport { useAppDispatch } from 'state/hooks'\nimport { ApplicationModal, setOpenModal } from '../../state/application/actions'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...props.location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n\nexport function OpenClaimAddressModalAndRedirectToSwap(props: RouteComponentProps) {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(setOpenModal(ApplicationModal.ADDRESS_CLAIM))\n  }, [dispatch])\n  return <RedirectPathToSwapOnly {...props} />\n}\n"]},"metadata":{},"sourceType":"module"}