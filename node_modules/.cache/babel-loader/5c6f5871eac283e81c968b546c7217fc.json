{"ast":null,"code":"import{L1_CHAIN_IDS}from'../constants/chains';export function constructSameAddressMap(address){var additionalNetworks=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return L1_CHAIN_IDS.concat(additionalNetworks).reduce(function(memo,chainId){memo[chainId]=address;return memo;},{});}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/utils/constructSameAddressMap.ts"],"names":["L1_CHAIN_IDS","constructSameAddressMap","address","additionalNetworks","concat","reduce","memo","chainId"],"mappings":"AAAA,OAASA,YAAT,KAA+C,qBAA/C,CAEA,MAAO,SAASC,CAAAA,uBAAT,CACLC,OADK,CAGqB,IAD1BC,CAAAA,kBAC0B,2DADe,EACf,CAC1B,MAAQH,CAAAA,YAAD,CACJI,MADI,CACGD,kBADH,EAEJE,MAFI,CAE6B,SAACC,IAAD,CAAOC,OAAP,CAAmB,CACnDD,IAAI,CAACC,OAAD,CAAJ,CAAgBL,OAAhB,CACA,MAAOI,CAAAA,IAAP,CACD,CALI,CAKF,EALE,CAAP,CAMD","sourcesContent":["import { L1_CHAIN_IDS, SupportedChainId } from '../constants/chains'\n\nexport function constructSameAddressMap<T extends string>(\n  address: T,\n  additionalNetworks: SupportedChainId[] = []\n): { [chainId: number]: T } {\n  return (L1_CHAIN_IDS as readonly SupportedChainId[])\n    .concat(additionalNetworks)\n    .reduce<{ [chainId: number]: T }>((memo, chainId) => {\n      memo[chainId] = address\n      return memo\n    }, {})\n}\n"]},"metadata":{},"sourceType":"module"}