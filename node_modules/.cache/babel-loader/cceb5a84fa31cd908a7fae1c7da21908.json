{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TXs = void 0;\n\nvar methods_1 = require(\"../communication/methods\");\n\nvar TXs = /*#__PURE__*/function () {\n  function TXs(communicator) {\n    _classCallCheck(this, TXs);\n\n    this.communicator = communicator;\n  }\n\n  _createClass(TXs, [{\n    key: \"getBySafeTxHash\",\n    value: function () {\n      var _getBySafeTxHash = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(safeTxHash) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (safeTxHash) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('Invalid safeTxHash');\n\n              case 2:\n                _context.next = 4;\n                return this.communicator.send(methods_1.Methods.getTxBySafeTxHash, {\n                  safeTxHash: safeTxHash\n                });\n\n              case 4:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.data);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getBySafeTxHash(_x) {\n        return _getBySafeTxHash.apply(this, arguments);\n      }\n\n      return getBySafeTxHash;\n    }()\n  }, {\n    key: \"send\",\n    value: function () {\n      var _send = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n        var txs, params, messagePayload, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                txs = _ref.txs, params = _ref.params;\n\n                if (!(!txs || !txs.length)) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                throw new Error('No transactions were passed');\n\n              case 3:\n                messagePayload = {\n                  txs: txs,\n                  params: params\n                };\n                _context2.next = 6;\n                return this.communicator.send(methods_1.Methods.sendTransactions, messagePayload);\n\n              case 6:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response.data);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function send(_x2) {\n        return _send.apply(this, arguments);\n      }\n\n      return send;\n    }()\n  }]);\n\n  return TXs;\n}();\n\nexports.TXs = TXs;","map":{"version":3,"sources":["../../../src/txs/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;IASM,G;AAGJ,eAAY,YAAZ,EAAsC;AAAA;;AACpC,SAAK,YAAL,GAAoB,YAApB;AACD;;;;;sFAED,iBAAsB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACO,UADP;AAAA;AAAA;AAAA;;AAAA,sBAEU,IAAI,KAAJ,CAAU,oBAAV,CAFV;;AAAA;AAAA;AAAA,uBAKyB,KAAK,YAAL,CAAkB,IAAlB,CAIrB,SAAA,CAAA,OAAA,CAAQ,iBAJa,EAIM;AAAE,kBAAA,UAAU,EAAV;AAAF,iBAJN,CALzB;;AAAA;AAKQ,gBAAA,QALR;AAAA,iDAWS,QAAQ,CAAC,IAXlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;2EAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa,gBAAA,GAAb,QAAa,GAAb,EAAkB,MAAlB,QAAkB,MAAlB;;AAAA,sBACM,CAAC,GAAD,IAAQ,CAAC,GAAG,CAAC,MADnB;AAAA;AAAA;AAAA;;AAAA,sBAEU,IAAI,KAAJ,CAAU,6BAAV,CAFV;;AAAA;AAKQ,gBAAA,cALR,GAKyB;AACrB,kBAAA,GAAG,EAAH,GADqB;AAErB,kBAAA,MAAM,EAAN;AAFqB,iBALzB;AAAA;AAAA,uBAUyB,KAAK,YAAL,CAAkB,IAAlB,CAIrB,SAAA,CAAA,OAAA,CAAQ,gBAJa,EAIK,cAJL,CAVzB;;AAAA;AAUQ,gBAAA,QAVR;AAAA,kDAgBS,QAAQ,CAAC,IAhBlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAoBO,OAAA,CAAA,GAAA,GAAA,GAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TXs = void 0;\nconst methods_1 = require(\"../communication/methods\");\nclass TXs {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getBySafeTxHash(safeTxHash) {\n        if (!safeTxHash) {\n            throw new Error('Invalid safeTxHash');\n        }\n        const response = await this.communicator.send(methods_1.Methods.getTxBySafeTxHash, { safeTxHash });\n        return response.data;\n    }\n    async send({ txs, params }) {\n        if (!txs || !txs.length) {\n            throw new Error('No transactions were passed');\n        }\n        const messagePayload = {\n            txs,\n            params,\n        };\n        const response = await this.communicator.send(methods_1.Methods.sendTransactions, messagePayload);\n        return response.data;\n    }\n}\nexports.TXs = TXs;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}