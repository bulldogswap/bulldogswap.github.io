{"ast":null,"code":"import _slicedToArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled from\"styled-components\";import{Trans}from\"@lingui/react\";import JSBI from'jsbi';import{CurrencyAmount}from'@uniswap/sdk-core';import{isAddress}from'ethers/lib/utils';import{useEffect,useState}from'react';import{Text}from'rebass';import Circle from\"../../assets/images/blue-loader.svg\";import tokenLogo from'../../assets/images/token-logo.png';import{useActiveWeb3React}from'../../hooks/web3';import{ApplicationModal}from'../../state/application/actions';import{useModalOpen,useToggleSelfClaimModal}from'../../state/application/hooks';import{useClaimCallback,useUserClaimData,useUserUnclaimedAmount}from'../../state/claim/hooks';import{useUserHasSubmittedClaim}from'../../state/transactions/hooks';import{CloseIcon,CustomLightSpinner,ExternalLink,TYPE,UniTokenAnimated}from'../../theme';import{ExplorerDataType,getExplorerLink}from'../../utils/getExplorerLink';import{ButtonPrimary}from'../Button';import{AutoColumn,ColumnCenter}from'../Column';import Confetti from'../Confetti';import{Break,CardBGImage,CardBGImageSmaller,CardNoise,CardSection,DataCard}from'../earn/styled';import Modal from'../Modal';import{RowBetween}from'../Row';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ContentWrapper=_styled(AutoColumn).withConfig({componentId:\"sc-gtants-0\"})([\"width:100%;\"]);var ModalUpper=_styled(DataCard).withConfig({componentId:\"sc-gtants-1\"})([\"box-shadow:0px 4px 10px rgba(0,0,0,0.1);background:radial-gradient(76.02% 75.41% at 1.84% 0%,#ff007a 0%,#021d43 100%);\"]);var ConfirmOrLoadingWrapper=_styled.div.withConfig({componentId:\"sc-gtants-2\"})([\"width:100%;padding:24px;position:relative;background:\",\";\"],function(_ref){var activeBG=_ref.activeBG;return activeBG&&'radial-gradient(76.02% 75.41% at 1.84% 0%, rgba(255, 0, 122, 0.2) 0%, rgba(33, 114, 229, 0.2) 100%), #FFFFFF;';});var ConfirmedIcon=_styled(ColumnCenter).withConfig({componentId:\"sc-gtants-3\"})([\"padding:60px 0;\"]);var SOCKS_AMOUNT=1000;var USER_AMOUNT=400;export default function ClaimModal(){var _userClaimData$flags,_userClaimData$flags2,_groupSeparator,_userClaimData$flags3,_userClaimData$flags4,_userClaimData$flags5,_groupSeparator2;var isOpen=useModalOpen(ApplicationModal.SELF_CLAIM);var toggleClaimModal=useToggleSelfClaimModal();var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId;// used for UI loading states\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),attempting=_useState2[0],setAttempting=_useState2[1];// get user claim data\nvar userClaimData=useUserClaimData(account);// monitor the status of the claim from contracts and txns\nvar _useClaimCallback=useClaimCallback(account),claimCallback=_useClaimCallback.claimCallback;var unclaimedAmount=useUserUnclaimedAmount(account);var _useUserHasSubmittedC=useUserHasSubmittedClaim(account!==null&&account!==void 0?account:undefined),claimSubmitted=_useUserHasSubmittedC.claimSubmitted,claimTxn=_useUserHasSubmittedC.claimTxn;var claimConfirmed=Boolean(claimTxn===null||claimTxn===void 0?void 0:claimTxn.receipt);function onClaim(){setAttempting(true);claimCallback()// reset modal and log error\n.catch(function(error){setAttempting(false);console.log(error);});}// once confirmed txn is found, if modal is closed open, mark as not attempting regradless\nuseEffect(function(){if(claimConfirmed&&claimSubmitted&&attempting){setAttempting(false);if(!isOpen){toggleClaimModal();}}},[attempting,claimConfirmed,claimSubmitted,isOpen,toggleClaimModal]);var nonLPAmount=JSBI.multiply(JSBI.BigInt(((userClaimData===null||userClaimData===void 0?void 0:(_userClaimData$flags=userClaimData.flags)===null||_userClaimData$flags===void 0?void 0:_userClaimData$flags.isSOCKS)?SOCKS_AMOUNT:0)+((userClaimData===null||userClaimData===void 0?void 0:(_userClaimData$flags2=userClaimData.flags)===null||_userClaimData$flags2===void 0?void 0:_userClaimData$flags2.isUser)?USER_AMOUNT:0)),JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(18)));return/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onDismiss:toggleClaimModal,maxHeight:90,children:[/*#__PURE__*/_jsx(Confetti,{start:Boolean(isOpen&&claimConfirmed)}),!attempting&&!claimConfirmed&&/*#__PURE__*/_jsxs(ContentWrapper,{gap:\"lg\",children:[/*#__PURE__*/_jsxs(ModalUpper,{children:[/*#__PURE__*/_jsx(CardBGImage,{}),/*#__PURE__*/_jsx(CardNoise,{}),/*#__PURE__*/_jsxs(CardSection,{gap:\"md\",children:[/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(TYPE.white,{fontWeight:500,children:/*#__PURE__*/_jsx(Trans,{id:\"Claim UNI\"})}),/*#__PURE__*/_jsx(CloseIcon,{onClick:toggleClaimModal,style:{zIndex:99},color:\"white\"})]}),/*#__PURE__*/_jsx(TYPE.white,{fontWeight:700,fontSize:36,children:/*#__PURE__*/_jsx(Trans,{id:\"{0} UNI\",values:{0:unclaimedAmount===null||unclaimedAmount===void 0?void 0:unclaimedAmount.toFixed(0,(_groupSeparator={groupSeparator:','})!==null&&_groupSeparator!==void 0?_groupSeparator:'-')}})})]}),/*#__PURE__*/_jsx(Break,{}),/*#__PURE__*/_jsxs(CardSection,{gap:\"sm\",children:[(userClaimData===null||userClaimData===void 0?void 0:(_userClaimData$flags3=userClaimData.flags)===null||_userClaimData$flags3===void 0?void 0:_userClaimData$flags3.isSOCKS)&&/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(TYPE.subHeader,{color:\"white\",children:\"SOCKS\"}),/*#__PURE__*/_jsx(TYPE.subHeader,{color:\"white\",children:/*#__PURE__*/_jsx(Trans,{id:\"{SOCKS_AMOUNT} UNI\",values:{SOCKS_AMOUNT:SOCKS_AMOUNT}})})]}),(userClaimData===null||userClaimData===void 0?void 0:(_userClaimData$flags4=userClaimData.flags)===null||_userClaimData$flags4===void 0?void 0:_userClaimData$flags4.isLP)&&unclaimedAmount&&JSBI.greaterThanOrEqual(unclaimedAmount.quotient,nonLPAmount)&&/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(TYPE.subHeader,{color:\"white\",children:/*#__PURE__*/_jsx(Trans,{id:\"Liquidity\"})}),/*#__PURE__*/_jsx(TYPE.subHeader,{color:\"white\",children:/*#__PURE__*/_jsx(Trans,{id:\"{0} UNI\",values:{0:unclaimedAmount.subtract(CurrencyAmount.fromRawAmount(unclaimedAmount.currency,nonLPAmount)).toFixed(0,{groupSeparator:','})}})})]}),(userClaimData===null||userClaimData===void 0?void 0:(_userClaimData$flags5=userClaimData.flags)===null||_userClaimData$flags5===void 0?void 0:_userClaimData$flags5.isUser)&&/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(TYPE.subHeader,{color:\"white\",children:/*#__PURE__*/_jsx(Trans,{id:\"User\"})}),/*#__PURE__*/_jsx(TYPE.subHeader,{color:\"white\",children:/*#__PURE__*/_jsx(Trans,{id:\"{USER_AMOUNT} UNI\",values:{USER_AMOUNT:USER_AMOUNT}})})]})]})]}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",style:{padding:'1rem',paddingTop:'0'},justify:\"center\",children:[/*#__PURE__*/_jsx(TYPE.subHeader,{fontWeight:500,children:/*#__PURE__*/_jsx(Trans,{id:\"As a member of the Uniswap community you may claim UNI to be used for voting and governance.<0/><1/><2>Read more about UNI</2>\",components:{0:/*#__PURE__*/_jsx(\"br\",{}),1:/*#__PURE__*/_jsx(\"br\",{}),2:/*#__PURE__*/_jsx(ExternalLink,{href:\"https://uniswap.org/blog/uni\"})}})}),/*#__PURE__*/_jsx(ButtonPrimary,{disabled:!isAddress(account!==null&&account!==void 0?account:''),padding:\"16px 16px\",width:\"100%\",$borderRadius:\"12px\",mt:\"1rem\",onClick:onClaim,children:/*#__PURE__*/_jsx(Trans,{id:\"Claim UNI\"})})]})]}),(attempting||claimConfirmed)&&/*#__PURE__*/_jsxs(ConfirmOrLoadingWrapper,{activeBG:true,children:[/*#__PURE__*/_jsx(CardNoise,{}),/*#__PURE__*/_jsx(CardBGImageSmaller,{desaturate:true}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(CloseIcon,{onClick:toggleClaimModal,style:{zIndex:99},stroke:\"black\"})]}),/*#__PURE__*/_jsx(ConfirmedIcon,{children:!claimConfirmed?/*#__PURE__*/_jsx(CustomLightSpinner,{src:Circle,alt:\"loader\",size:'90px'}):/*#__PURE__*/_jsx(UniTokenAnimated,{width:\"72px\",src:tokenLogo,alt:\"UNI\"})}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"100px\",justify:'center',children:[/*#__PURE__*/_jsxs(AutoColumn,{gap:\"12px\",justify:'center',children:[/*#__PURE__*/_jsx(TYPE.largeHeader,{fontWeight:600,color:\"black\",children:claimConfirmed?'Claimed!':'Claiming'}),!claimConfirmed&&/*#__PURE__*/_jsx(Text,{fontSize:36,color:'#ff007a',fontWeight:800,children:/*#__PURE__*/_jsx(Trans,{id:\"{0} UNI\",values:{0:unclaimedAmount===null||unclaimedAmount===void 0?void 0:unclaimedAmount.toFixed(0,(_groupSeparator2={groupSeparator:','})!==null&&_groupSeparator2!==void 0?_groupSeparator2:'-')}})})]}),claimConfirmed&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(TYPE.subHeader,{fontWeight:500,color:\"black\",children:/*#__PURE__*/_jsx(Trans,{id:\"<0>\\uD83C\\uDF89 </0>Welcome to team Unicorn :) <1>\\uD83C\\uDF89</1>\",components:{0:/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"party-hat\"}),1:/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"party-hat\"})}})})}),attempting&&!claimSubmitted&&/*#__PURE__*/_jsx(TYPE.subHeader,{color:\"black\",children:/*#__PURE__*/_jsx(Trans,{id:\"Confirm this transaction in your wallet\"})}),attempting&&claimSubmitted&&!claimConfirmed&&chainId&&(claimTxn===null||claimTxn===void 0?void 0:claimTxn.hash)&&/*#__PURE__*/_jsx(ExternalLink,{href:getExplorerLink(chainId,claimTxn===null||claimTxn===void 0?void 0:claimTxn.hash,ExplorerDataType.TRANSACTION),style:{zIndex:99},children:/*#__PURE__*/_jsx(Trans,{id:\"View transaction on Explorer\"})})]})]})]});}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/components/claim/ClaimModal.tsx"],"names":["JSBI","CurrencyAmount","isAddress","useEffect","useState","Text","tokenLogo","useActiveWeb3React","ApplicationModal","useModalOpen","useToggleSelfClaimModal","useClaimCallback","useUserClaimData","useUserUnclaimedAmount","useUserHasSubmittedClaim","CloseIcon","CustomLightSpinner","ExternalLink","TYPE","UniTokenAnimated","ExplorerDataType","getExplorerLink","ButtonPrimary","AutoColumn","ColumnCenter","Confetti","Break","CardBGImage","CardBGImageSmaller","CardNoise","CardSection","DataCard","Modal","RowBetween","ContentWrapper","styled","ModalUpper","ConfirmOrLoadingWrapper","div","activeBG","ConfirmedIcon","SOCKS_AMOUNT","USER_AMOUNT","ClaimModal","isOpen","SELF_CLAIM","toggleClaimModal","account","chainId","attempting","setAttempting","userClaimData","claimCallback","unclaimedAmount","undefined","claimSubmitted","claimTxn","claimConfirmed","Boolean","receipt","onClaim","catch","error","console","log","nonLPAmount","multiply","BigInt","flags","isSOCKS","isUser","exponentiate","zIndex","toFixed","groupSeparator","isLP","greaterThanOrEqual","quotient","subtract","fromRawAmount","currency","padding","paddingTop","Circle","hash","TRANSACTION"],"mappings":"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","sourcesContent":["import JSBI from 'jsbi'\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { isAddress } from 'ethers/lib/utils'\nimport { useEffect, useState } from 'react'\nimport { Text } from 'rebass'\nimport styled from 'styled-components/macro'\nimport Circle from '../../assets/images/blue-loader.svg'\nimport tokenLogo from '../../assets/images/token-logo.png'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useToggleSelfClaimModal } from '../../state/application/hooks'\nimport { useClaimCallback, useUserClaimData, useUserUnclaimedAmount } from '../../state/claim/hooks'\nimport { useUserHasSubmittedClaim } from '../../state/transactions/hooks'\nimport { CloseIcon, CustomLightSpinner, ExternalLink, TYPE, UniTokenAnimated } from '../../theme'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { ButtonPrimary } from '../Button'\nimport { AutoColumn, ColumnCenter } from '../Column'\nimport Confetti from '../Confetti'\nimport { Break, CardBGImage, CardBGImageSmaller, CardNoise, CardSection, DataCard } from '../earn/styled'\nimport { Trans } from '@lingui/macro'\n\nimport Modal from '../Modal'\nimport { RowBetween } from '../Row'\n\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n`\n\nconst ModalUpper = styled(DataCard)`\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n`\n\nconst ConfirmOrLoadingWrapper = styled.div<{ activeBG: boolean }>`\n  width: 100%;\n  padding: 24px;\n  position: relative;\n  background: ${({ activeBG }) =>\n    activeBG &&\n    'radial-gradient(76.02% 75.41% at 1.84% 0%, rgba(255, 0, 122, 0.2) 0%, rgba(33, 114, 229, 0.2) 100%), #FFFFFF;'};\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 60px 0;\n`\n\nconst SOCKS_AMOUNT = 1000\nconst USER_AMOUNT = 400\n\nexport default function ClaimModal() {\n  const isOpen = useModalOpen(ApplicationModal.SELF_CLAIM)\n  const toggleClaimModal = useToggleSelfClaimModal()\n\n  const { account, chainId } = useActiveWeb3React()\n\n  // used for UI loading states\n  const [attempting, setAttempting] = useState<boolean>(false)\n\n  // get user claim data\n  const userClaimData = useUserClaimData(account)\n\n  // monitor the status of the claim from contracts and txns\n  const { claimCallback } = useClaimCallback(account)\n  const unclaimedAmount: CurrencyAmount<Token> | undefined = useUserUnclaimedAmount(account)\n  const { claimSubmitted, claimTxn } = useUserHasSubmittedClaim(account ?? undefined)\n  const claimConfirmed = Boolean(claimTxn?.receipt)\n\n  function onClaim() {\n    setAttempting(true)\n    claimCallback()\n      // reset modal and log error\n      .catch((error) => {\n        setAttempting(false)\n        console.log(error)\n      })\n  }\n\n  // once confirmed txn is found, if modal is closed open, mark as not attempting regradless\n  useEffect(() => {\n    if (claimConfirmed && claimSubmitted && attempting) {\n      setAttempting(false)\n      if (!isOpen) {\n        toggleClaimModal()\n      }\n    }\n  }, [attempting, claimConfirmed, claimSubmitted, isOpen, toggleClaimModal])\n\n  const nonLPAmount = JSBI.multiply(\n    JSBI.BigInt((userClaimData?.flags?.isSOCKS ? SOCKS_AMOUNT : 0) + (userClaimData?.flags?.isUser ? USER_AMOUNT : 0)),\n    JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))\n  )\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={toggleClaimModal} maxHeight={90}>\n      <Confetti start={Boolean(isOpen && claimConfirmed)} />\n      {!attempting && !claimConfirmed && (\n        <ContentWrapper gap=\"lg\">\n          <ModalUpper>\n            <CardBGImage />\n            <CardNoise />\n            <CardSection gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={500}>\n                  <Trans>Claim UNI</Trans>\n                </TYPE.white>\n                <CloseIcon onClick={toggleClaimModal} style={{ zIndex: 99 }} color=\"white\" />\n              </RowBetween>\n              <TYPE.white fontWeight={700} fontSize={36}>\n                <Trans>{unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI</Trans>\n              </TYPE.white>\n            </CardSection>\n            <Break />\n            <CardSection gap=\"sm\">\n              {userClaimData?.flags?.isSOCKS && (\n                <RowBetween>\n                  <TYPE.subHeader color=\"white\">SOCKS</TYPE.subHeader>\n                  <TYPE.subHeader color=\"white\">\n                    <Trans>{SOCKS_AMOUNT} UNI</Trans>\n                  </TYPE.subHeader>\n                </RowBetween>\n              )}\n              {userClaimData?.flags?.isLP &&\n                unclaimedAmount &&\n                JSBI.greaterThanOrEqual(unclaimedAmount.quotient, nonLPAmount) && (\n                  <RowBetween>\n                    <TYPE.subHeader color=\"white\">\n                      <Trans>Liquidity</Trans>\n                    </TYPE.subHeader>\n                    <TYPE.subHeader color=\"white\">\n                      <Trans>\n                        {unclaimedAmount\n                          .subtract(CurrencyAmount.fromRawAmount(unclaimedAmount.currency, nonLPAmount))\n                          .toFixed(0, { groupSeparator: ',' })}{' '}\n                        UNI\n                      </Trans>\n                    </TYPE.subHeader>\n                  </RowBetween>\n                )}\n              {userClaimData?.flags?.isUser && (\n                <RowBetween>\n                  <TYPE.subHeader color=\"white\">\n                    <Trans>User</Trans>\n                  </TYPE.subHeader>\n                  <TYPE.subHeader color=\"white\">\n                    <Trans>{USER_AMOUNT} UNI</Trans>\n                  </TYPE.subHeader>\n                </RowBetween>\n              )}\n            </CardSection>\n          </ModalUpper>\n          <AutoColumn gap=\"md\" style={{ padding: '1rem', paddingTop: '0' }} justify=\"center\">\n            <TYPE.subHeader fontWeight={500}>\n              <Trans>\n                As a member of the Uniswap community you may claim UNI to be used for voting and governance.\n                <br />\n                <br />\n                <ExternalLink href=\"https://uniswap.org/blog/uni\">Read more about UNI</ExternalLink>\n              </Trans>\n            </TYPE.subHeader>\n            <ButtonPrimary\n              disabled={!isAddress(account ?? '')}\n              padding=\"16px 16px\"\n              width=\"100%\"\n              $borderRadius=\"12px\"\n              mt=\"1rem\"\n              onClick={onClaim}\n            >\n              <Trans>Claim UNI</Trans>\n            </ButtonPrimary>\n          </AutoColumn>\n        </ContentWrapper>\n      )}\n      {(attempting || claimConfirmed) && (\n        <ConfirmOrLoadingWrapper activeBG={true}>\n          <CardNoise />\n          <CardBGImageSmaller desaturate />\n          <RowBetween>\n            <div />\n            <CloseIcon onClick={toggleClaimModal} style={{ zIndex: 99 }} stroke=\"black\" />\n          </RowBetween>\n          <ConfirmedIcon>\n            {!claimConfirmed ? (\n              <CustomLightSpinner src={Circle} alt=\"loader\" size={'90px'} />\n            ) : (\n              <UniTokenAnimated width=\"72px\" src={tokenLogo} alt=\"UNI\" />\n            )}\n          </ConfirmedIcon>\n          <AutoColumn gap=\"100px\" justify={'center'}>\n            <AutoColumn gap=\"12px\" justify={'center'}>\n              <TYPE.largeHeader fontWeight={600} color=\"black\">\n                {claimConfirmed ? 'Claimed!' : 'Claiming'}\n              </TYPE.largeHeader>\n              {!claimConfirmed && (\n                <Text fontSize={36} color={'#ff007a'} fontWeight={800}>\n                  <Trans>{unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI</Trans>\n                </Text>\n              )}\n            </AutoColumn>\n            {claimConfirmed && (\n              <>\n                <TYPE.subHeader fontWeight={500} color=\"black\">\n                  <Trans>\n                    <span role=\"img\" aria-label=\"party-hat\">\n                      🎉{' '}\n                    </span>\n                    Welcome to team Unicorn :){' '}\n                    <span role=\"img\" aria-label=\"party-hat\">\n                      🎉\n                    </span>\n                  </Trans>\n                </TYPE.subHeader>\n              </>\n            )}\n            {attempting && !claimSubmitted && (\n              <TYPE.subHeader color=\"black\">\n                <Trans>Confirm this transaction in your wallet</Trans>\n              </TYPE.subHeader>\n            )}\n            {attempting && claimSubmitted && !claimConfirmed && chainId && claimTxn?.hash && (\n              <ExternalLink\n                href={getExplorerLink(chainId, claimTxn?.hash, ExplorerDataType.TRANSACTION)}\n                style={{ zIndex: 99 }}\n              >\n                <Trans>View transaction on Explorer</Trans>\n              </ExternalLink>\n            )}\n          </AutoColumn>\n        </ConfirmOrLoadingWrapper>\n      )}\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}