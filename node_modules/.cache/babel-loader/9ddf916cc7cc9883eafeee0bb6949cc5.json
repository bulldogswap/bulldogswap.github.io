{"ast":null,"code":"import _objectDestructuringEmpty from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";import{ThemeContext as _ThemeContext}from\"styled-components\";import{Trade as V2Trade}from'@uniswap/v2-sdk';import{Fragment,memo,useContext}from'react';import{ChevronRight}from'react-feather';import{Flex}from'rebass';import{TYPE}from'../../theme';import{unwrappedToken}from'utils/unwrappedToken';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function LabeledArrow(_ref){_objectDestructuringEmpty(_ref);var theme=useContext(_ThemeContext);// todo: render the fee in the label\nreturn/*#__PURE__*/_jsx(ChevronRight,{size:14,color:theme.text2});}export default/*#__PURE__*/memo(function SwapRoute(_ref2){var trade=_ref2.trade;var tokenPath=trade instanceof V2Trade?trade.route.path:trade.route.tokenPath;var theme=useContext(_ThemeContext);return/*#__PURE__*/_jsx(Flex,{flexWrap:\"wrap\",width:\"100%\",justifyContent:\"flex-start\",alignItems:\"center\",children:tokenPath.map(function(token,i,path){var isLastItem=i===path.length-1;var currency=unwrappedToken(token);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Flex,{alignItems:\"end\",children:/*#__PURE__*/_jsx(TYPE.black,{color:theme.text1,ml:\"0.145rem\",mr:\"0.145rem\",children:currency.symbol})}),isLastItem?null:trade instanceof V2Trade?/*#__PURE__*/_jsx(ChevronRight,{size:14,color:theme.text2}):/*#__PURE__*/_jsx(LabeledArrow,{fee:trade.route.pools[i].fee})]},i);})});});","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/components/swap/SwapRoute.tsx"],"names":["Trade","V2Trade","Fragment","memo","useContext","ChevronRight","Flex","TYPE","unwrappedToken","LabeledArrow","theme","ThemeContext","text2","SwapRoute","trade","tokenPath","route","path","map","token","i","isLastItem","length","currency","text1","symbol","pools","fee"],"mappings":"2QACA,OAASA,KAAK,GAAIC,CAAAA,OAAlB,KAAiC,iBAAjC,CAEA,OAASC,QAAT,CAAmBC,IAAnB,CAAyBC,UAAzB,KAA2C,OAA3C,CACA,OAASC,YAAT,KAA6B,eAA7B,CACA,OAASC,IAAT,KAAqB,QAArB,CAEA,OAASC,IAAT,KAAqB,aAArB,CACA,OAASC,cAAT,KAA+B,sBAA/B,C,wFAEA,QAASC,CAAAA,YAAT,MAA8C,iCAC5C,GAAMC,CAAAA,KAAK,CAAGN,UAAU,CAACO,aAAD,CAAxB,CAEA;AACA,mBAAO,KAAC,YAAD,EAAc,IAAI,CAAE,EAApB,CAAwB,KAAK,CAAED,KAAK,CAACE,KAArC,EAAP,CACD,CAED,2BAAeT,IAAI,CAAC,QAASU,CAAAA,SAAT,OAIjB,IAHDC,CAAAA,KAGC,OAHDA,KAGC,CACD,GAAMC,CAAAA,SAAS,CAAGD,KAAK,WAAYb,CAAAA,OAAjB,CAA2Ba,KAAK,CAACE,KAAN,CAAYC,IAAvC,CAA8CH,KAAK,CAACE,KAAN,CAAYD,SAA5E,CACA,GAAML,CAAAA,KAAK,CAAGN,UAAU,CAACO,aAAD,CAAxB,CACA,mBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,MAA5B,CAAmC,cAAc,CAAC,YAAlD,CAA+D,UAAU,CAAC,QAA1E,UACGI,SAAS,CAACG,GAAV,CAAc,SAACC,KAAD,CAAQC,CAAR,CAAWH,IAAX,CAAoB,CACjC,GAAMI,CAAAA,UAAmB,CAAGD,CAAC,GAAKH,IAAI,CAACK,MAAL,CAAc,CAAhD,CACA,GAAMC,CAAAA,QAAQ,CAAGf,cAAc,CAACW,KAAD,CAA/B,CACA,mBACE,MAAC,QAAD,yBACE,KAAC,IAAD,EAAM,UAAU,CAAC,KAAjB,uBACE,KAAC,IAAD,CAAM,KAAN,EAAY,KAAK,CAAET,KAAK,CAACc,KAAzB,CAAgC,EAAE,CAAC,UAAnC,CAA8C,EAAE,CAAC,UAAjD,UACGD,QAAQ,CAACE,MADZ,EADF,EADF,CAMGJ,UAAU,CAAG,IAAH,CAAUP,KAAK,WAAYb,CAAAA,OAAjB,cACnB,KAAC,YAAD,EAAc,IAAI,CAAE,EAApB,CAAwB,KAAK,CAAES,KAAK,CAACE,KAArC,EADmB,cAGnB,KAAC,YAAD,EAAc,GAAG,CAAEE,KAAK,CAACE,KAAN,CAAYU,KAAZ,CAAkBN,CAAlB,EAAqBO,GAAxC,EATJ,GAAeP,CAAf,CADF,CAcD,CAjBA,CADH,EADF,CAsBD,CA7BkB,CAAnB","sourcesContent":["import { Currency, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { Trade as V3Trade, FeeAmount } from '@uniswap/v3-sdk'\nimport { Fragment, memo, useContext } from 'react'\nimport { ChevronRight } from 'react-feather'\nimport { Flex } from 'rebass'\nimport { ThemeContext } from 'styled-components/macro'\nimport { TYPE } from '../../theme'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nfunction LabeledArrow({}: { fee: FeeAmount }) {\n  const theme = useContext(ThemeContext)\n\n  // todo: render the fee in the label\n  return <ChevronRight size={14} color={theme.text2} />\n}\n\nexport default memo(function SwapRoute({\n  trade,\n}: {\n  trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType>\n}) {\n  const tokenPath = trade instanceof V2Trade ? trade.route.path : trade.route.tokenPath\n  const theme = useContext(ThemeContext)\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-start\" alignItems=\"center\">\n      {tokenPath.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <TYPE.black color={theme.text1} ml=\"0.145rem\" mr=\"0.145rem\">\n                {currency.symbol}\n              </TYPE.black>\n            </Flex>\n            {isLastItem ? null : trade instanceof V2Trade ? (\n              <ChevronRight size={14} color={theme.text2} />\n            ) : (\n              <LabeledArrow fee={trade.route.pools[i].fee} />\n            )}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}