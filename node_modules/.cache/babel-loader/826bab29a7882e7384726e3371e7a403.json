{"ast":null,"code":"import _slicedToArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Position}from'@uniswap/v3-sdk';import{usePool}from'hooks/usePools';import{useCurrency}from'./Tokens';export function useDerivedPositionInfo(positionDetails){var currency0=useCurrency(positionDetails===null||positionDetails===void 0?void 0:positionDetails.token0);var currency1=useCurrency(positionDetails===null||positionDetails===void 0?void 0:positionDetails.token1);// construct pool data\nvar _usePool=usePool(currency0!==null&&currency0!==void 0?currency0:undefined,currency1!==null&&currency1!==void 0?currency1:undefined,positionDetails===null||positionDetails===void 0?void 0:positionDetails.fee),_usePool2=_slicedToArray(_usePool,2),pool=_usePool2[1];var position=undefined;if(pool&&positionDetails){position=new Position({pool:pool,liquidity:positionDetails.liquidity.toString(),tickLower:positionDetails.tickLower,tickUpper:positionDetails.tickUpper});}return{position:position,pool:pool!==null&&pool!==void 0?pool:undefined};}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/useDerivedPositionInfo.ts"],"names":["Position","usePool","useCurrency","useDerivedPositionInfo","positionDetails","currency0","token0","currency1","token1","undefined","fee","pool","position","liquidity","toString","tickLower","tickUpper"],"mappings":"wLAAA,OAAeA,QAAf,KAA+B,iBAA/B,CACA,OAASC,OAAT,KAAwB,gBAAxB,CAEA,OAASC,WAAT,KAA4B,UAA5B,CAEA,MAAO,SAASC,CAAAA,sBAAT,CAAgCC,eAAhC,CAGL,CACA,GAAMC,CAAAA,SAAS,CAAGH,WAAW,CAACE,eAAD,SAACA,eAAD,iBAACA,eAAe,CAAEE,MAAlB,CAA7B,CACA,GAAMC,CAAAA,SAAS,CAAGL,WAAW,CAACE,eAAD,SAACA,eAAD,iBAACA,eAAe,CAAEI,MAAlB,CAA7B,CAEA;AACA,aAAiBP,OAAO,CAACI,SAAD,SAACA,SAAD,UAACA,SAAD,CAAcI,SAAd,CAAyBF,SAAzB,SAAyBA,SAAzB,UAAyBA,SAAzB,CAAsCE,SAAtC,CAAiDL,eAAjD,SAAiDA,eAAjD,iBAAiDA,eAAe,CAAEM,GAAlE,CAAxB,sCAASC,IAAT,cAEA,GAAIC,CAAAA,QAAQ,CAAGH,SAAf,CACA,GAAIE,IAAI,EAAIP,eAAZ,CAA6B,CAC3BQ,QAAQ,CAAG,GAAIZ,CAAAA,QAAJ,CAAa,CACtBW,IAAI,CAAJA,IADsB,CAEtBE,SAAS,CAAET,eAAe,CAACS,SAAhB,CAA0BC,QAA1B,EAFW,CAGtBC,SAAS,CAAEX,eAAe,CAACW,SAHL,CAItBC,SAAS,CAAEZ,eAAe,CAACY,SAJL,CAAb,CAAX,CAMD,CAED,MAAO,CACLJ,QAAQ,CAARA,QADK,CAELD,IAAI,CAAEA,IAAF,SAAEA,IAAF,UAAEA,IAAF,CAAUF,SAFT,CAAP,CAID","sourcesContent":["import { Pool, Position } from '@uniswap/v3-sdk'\nimport { usePool } from 'hooks/usePools'\nimport { PositionDetails } from 'types/position'\nimport { useCurrency } from './Tokens'\n\nexport function useDerivedPositionInfo(positionDetails: PositionDetails | undefined): {\n  position: Position | undefined\n  pool: Pool | undefined\n} {\n  const currency0 = useCurrency(positionDetails?.token0)\n  const currency1 = useCurrency(positionDetails?.token1)\n\n  // construct pool data\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, positionDetails?.fee)\n\n  let position = undefined\n  if (pool && positionDetails) {\n    position = new Position({\n      pool,\n      liquidity: positionDetails.liquidity.toString(),\n      tickLower: positionDetails.tickLower,\n      tickUpper: positionDetails.tickUpper,\n    })\n  }\n\n  return {\n    position,\n    pool: pool ?? undefined,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}