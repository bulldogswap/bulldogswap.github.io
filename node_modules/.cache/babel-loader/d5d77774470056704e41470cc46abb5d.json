{"ast":null,"code":"import'inter-ui';import'@reach/dialog/styles.css';import{createWeb3ReactRoot,Web3ReactProvider}from'@web3-react/core';import{StrictMode}from'react';import{isMobile}from'react-device-detect';import ReactDOM from'react-dom';import ReactGA from'react-ga';import{Provider}from'react-redux';import{HashRouter}from'react-router-dom';import Blocklist from'./components/Blocklist';import{NetworkContextName}from'./constants/misc';import{LanguageProvider}from'./i18n';import App from'./pages/App';import store from'./state';import*as serviceWorkerRegistration from'./serviceWorkerRegistration';import ApplicationUpdater from'./state/application/updater';import ListsUpdater from'./state/lists/updater';import MulticallUpdater from'./state/multicall/updater';import LogsUpdater from'./state/logs/updater';import TransactionUpdater from'./state/transactions/updater';import UserUpdater from'./state/user/updater';import ThemeProvider,{ThemedGlobalStyle}from'./theme';import RadialGradientByChainUpdater from'./theme/RadialGradientByChainUpdater';import getLibrary from'./utils/getLibrary';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Web3ProviderNetwork=createWeb3ReactRoot(NetworkContextName);if(!!window.ethereum){window.ethereum.autoRefreshOnNetworkChange=false;}var GOOGLE_ANALYTICS_ID=process.env.REACT_APP_GOOGLE_ANALYTICS_ID;if(typeof GOOGLE_ANALYTICS_ID==='string'){ReactGA.initialize(GOOGLE_ANALYTICS_ID,{gaOptions:{storage:'none',storeGac:false}});ReactGA.set({anonymizeIp:true,customBrowserType:!isMobile?'desktop':'web3'in window||'ethereum'in window?'mobileWeb3':'mobileRegular'});}else{ReactGA.initialize('test',{testMode:true,debug:true});}function Updaters(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(RadialGradientByChainUpdater,{}),/*#__PURE__*/_jsx(ListsUpdater,{}),/*#__PURE__*/_jsx(UserUpdater,{}),/*#__PURE__*/_jsx(ApplicationUpdater,{}),/*#__PURE__*/_jsx(TransactionUpdater,{}),/*#__PURE__*/_jsx(MulticallUpdater,{}),/*#__PURE__*/_jsx(LogsUpdater,{})]});}ReactDOM.render(/*#__PURE__*/_jsx(StrictMode,{children:/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(HashRouter,{children:/*#__PURE__*/_jsx(LanguageProvider,{children:/*#__PURE__*/_jsx(Web3ReactProvider,{getLibrary:getLibrary,children:/*#__PURE__*/_jsx(Web3ProviderNetwork,{getLibrary:getLibrary,children:/*#__PURE__*/_jsxs(Blocklist,{children:[/*#__PURE__*/_jsx(Updaters,{}),/*#__PURE__*/_jsxs(ThemeProvider,{children:[/*#__PURE__*/_jsx(ThemedGlobalStyle,{}),/*#__PURE__*/_jsx(App,{})]})]})})})})})})}),document.getElementById('root'));serviceWorkerRegistration.unregister();","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/index.tsx"],"names":["createWeb3ReactRoot","Web3ReactProvider","StrictMode","isMobile","ReactDOM","ReactGA","Provider","HashRouter","Blocklist","NetworkContextName","LanguageProvider","App","store","serviceWorkerRegistration","ApplicationUpdater","ListsUpdater","MulticallUpdater","LogsUpdater","TransactionUpdater","UserUpdater","ThemeProvider","ThemedGlobalStyle","RadialGradientByChainUpdater","getLibrary","Web3ProviderNetwork","window","ethereum","autoRefreshOnNetworkChange","GOOGLE_ANALYTICS_ID","process","env","REACT_APP_GOOGLE_ANALYTICS_ID","initialize","gaOptions","storage","storeGac","set","anonymizeIp","customBrowserType","testMode","debug","Updaters","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import 'inter-ui'\nimport '@reach/dialog/styles.css'\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\nimport { StrictMode } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport ReactDOM from 'react-dom'\nimport ReactGA from 'react-ga'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport Blocklist from './components/Blocklist'\nimport { NetworkContextName } from './constants/misc'\nimport { LanguageProvider } from './i18n'\nimport App from './pages/App'\nimport store from './state'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport LogsUpdater from './state/logs/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport UserUpdater from './state/user/updater'\nimport ThemeProvider, { ThemedGlobalStyle } from './theme'\nimport RadialGradientByChainUpdater from './theme/RadialGradientByChainUpdater'\nimport getLibrary from './utils/getLibrary'\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\n\nif (!!window.ethereum) {\n  window.ethereum.autoRefreshOnNetworkChange = false\n}\n\nconst GOOGLE_ANALYTICS_ID: string | undefined = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID, {\n    gaOptions: {\n      storage: 'none',\n      storeGac: false,\n    },\n  })\n  ReactGA.set({\n    anonymizeIp: true,\n    customBrowserType: !isMobile\n      ? 'desktop'\n      : 'web3' in window || 'ethereum' in window\n      ? 'mobileWeb3'\n      : 'mobileRegular',\n  })\n} else {\n  ReactGA.initialize('test', { testMode: true, debug: true })\n}\n\nfunction Updaters() {\n  return (\n    <>\n      <RadialGradientByChainUpdater />\n      <ListsUpdater />\n      <UserUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n      <LogsUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <LanguageProvider>\n          <Web3ReactProvider getLibrary={getLibrary}>\n            <Web3ProviderNetwork getLibrary={getLibrary}>\n              <Blocklist>\n                <Updaters />\n                <ThemeProvider>\n                  <ThemedGlobalStyle />\n                  <App />\n                </ThemeProvider>\n              </Blocklist>\n            </Web3ProviderNetwork>\n          </Web3ReactProvider>\n        </LanguageProvider>\n      </HashRouter>\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorkerRegistration.unregister()\n"]},"metadata":{},"sourceType":"module"}