{"ast":null,"code":"import _slicedToArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{i18n}from\"@lingui/core\";import{useCallback,useMemo}from'react';import{Field,typeInput}from'./actions';import{Percent,Price,CurrencyAmount}from'@uniswap/sdk-core';import JSBI from'jsbi';import{PairState,useV2Pair}from'../../hooks/useV2Pairs';import{useTotalSupply}from'../../hooks/useTotalSupply';import{useActiveWeb3React}from'../../hooks/web3';import{tryParseAmount}from'../swap/hooks';import{useCurrencyBalances}from'../wallet/hooks';import{useAppDispatch,useAppSelector}from'state/hooks';var ZERO=JSBI.BigInt(0);export function useMintState(){return useAppSelector(function(state){return state.mint;});}export function useMintActionHandlers(noLiquidity){var dispatch=useAppDispatch();var onFieldAInput=useCallback(function(typedValue){dispatch(typeInput({field:Field.CURRENCY_A,typedValue:typedValue,noLiquidity:noLiquidity===true}));},[dispatch,noLiquidity]);var onFieldBInput=useCallback(function(typedValue){dispatch(typeInput({field:Field.CURRENCY_B,typedValue:typedValue,noLiquidity:noLiquidity===true}));},[dispatch,noLiquidity]);return{onFieldAInput:onFieldAInput,onFieldBInput:onFieldBInput};}export function useDerivedMintInfo(currencyA,currencyB){var _currencyBalances,_currencyBalances$Fie,_currencyBalances$Fie2;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var _useMintState=useMintState(),independentField=_useMintState.independentField,typedValue=_useMintState.typedValue,otherTypedValue=_useMintState.otherTypedValue;var dependentField=independentField===Field.CURRENCY_A?Field.CURRENCY_B:Field.CURRENCY_A;// tokens\nvar currencies=useMemo(function(){var _ref;return _ref={},_defineProperty(_ref,Field.CURRENCY_A,currencyA!==null&&currencyA!==void 0?currencyA:undefined),_defineProperty(_ref,Field.CURRENCY_B,currencyB!==null&&currencyB!==void 0?currencyB:undefined),_ref;},[currencyA,currencyB]);// pair\nvar _useV2Pair=useV2Pair(currencies[Field.CURRENCY_A],currencies[Field.CURRENCY_B]),_useV2Pair2=_slicedToArray(_useV2Pair,2),pairState=_useV2Pair2[0],pair=_useV2Pair2[1];var totalSupply=useTotalSupply(pair===null||pair===void 0?void 0:pair.liquidityToken);var noLiquidity=pairState===PairState.NOT_EXISTS||Boolean(totalSupply&&JSBI.equal(totalSupply.quotient,ZERO))||Boolean(pairState===PairState.EXISTS&&pair&&JSBI.equal(pair.reserve0.quotient,ZERO)&&JSBI.equal(pair.reserve1.quotient,ZERO));// balances\nvar balances=useCurrencyBalances(account!==null&&account!==void 0?account:undefined,[currencies[Field.CURRENCY_A],currencies[Field.CURRENCY_B]]);var currencyBalances=(_currencyBalances={},_defineProperty(_currencyBalances,Field.CURRENCY_A,balances[0]),_defineProperty(_currencyBalances,Field.CURRENCY_B,balances[1]),_currencyBalances);// amounts\nvar independentAmount=tryParseAmount(typedValue,currencies[independentField]);var dependentAmount=useMemo(function(){if(noLiquidity){if(otherTypedValue&&currencies[dependentField]){return tryParseAmount(otherTypedValue,currencies[dependentField]);}return undefined;}else if(independentAmount){// we wrap the currencies just to get the price in terms of the other token\nvar wrappedIndependentAmount=independentAmount===null||independentAmount===void 0?void 0:independentAmount.wrapped;var tokenA=currencyA===null||currencyA===void 0?void 0:currencyA.wrapped,tokenB=currencyB===null||currencyB===void 0?void 0:currencyB.wrapped;if(tokenA&&tokenB&&wrappedIndependentAmount&&pair){var dependentCurrency=dependentField===Field.CURRENCY_B?currencyB:currencyA;var dependentTokenAmount=dependentField===Field.CURRENCY_B?pair.priceOf(tokenA).quote(wrappedIndependentAmount):pair.priceOf(tokenB).quote(wrappedIndependentAmount);return(dependentCurrency===null||dependentCurrency===void 0?void 0:dependentCurrency.isNative)?CurrencyAmount.fromRawAmount(dependentCurrency,dependentTokenAmount.quotient):dependentTokenAmount;}return undefined;}else{return undefined;}},[noLiquidity,otherTypedValue,currencies,dependentField,independentAmount,currencyA,currencyB,pair]);var parsedAmounts=useMemo(function(){var _ref2;return _ref2={},_defineProperty(_ref2,Field.CURRENCY_A,independentField===Field.CURRENCY_A?independentAmount:dependentAmount),_defineProperty(_ref2,Field.CURRENCY_B,independentField===Field.CURRENCY_A?dependentAmount:independentAmount),_ref2;},[dependentAmount,independentAmount,independentField]);var price=useMemo(function(){if(noLiquidity){var _currencyAAmount=parsedAmounts[Field.CURRENCY_A],_currencyBAmount=parsedAmounts[Field.CURRENCY_B];if((_currencyAAmount===null||_currencyAAmount===void 0?void 0:_currencyAAmount.greaterThan(0))&&(_currencyBAmount===null||_currencyBAmount===void 0?void 0:_currencyBAmount.greaterThan(0))){var value=_currencyBAmount.divide(_currencyAAmount);return new Price(_currencyAAmount.currency,_currencyBAmount.currency,value.denominator,value.numerator);}return undefined;}else{var wrappedCurrencyA=currencyA===null||currencyA===void 0?void 0:currencyA.wrapped;return pair&&wrappedCurrencyA?pair.priceOf(wrappedCurrencyA):undefined;}},[currencyA,noLiquidity,pair,parsedAmounts]);// liquidity minted\nvar liquidityMinted=useMemo(function(){var currencyAAmount=parsedAmounts[Field.CURRENCY_A],currencyBAmount=parsedAmounts[Field.CURRENCY_B];var tokenAmountA=currencyAAmount===null||currencyAAmount===void 0?void 0:currencyAAmount.wrapped,tokenAmountB=currencyBAmount===null||currencyBAmount===void 0?void 0:currencyBAmount.wrapped;if(pair&&totalSupply&&tokenAmountA&&tokenAmountB){try{return pair.getLiquidityMinted(totalSupply,tokenAmountA,tokenAmountB);}catch(error){console.error(error);return undefined;}}else{return undefined;}},[parsedAmounts,pair,totalSupply]);var poolTokenPercentage=useMemo(function(){if(liquidityMinted&&totalSupply){return new Percent(liquidityMinted.quotient,totalSupply.add(liquidityMinted).quotient);}else{return undefined;}},[liquidityMinted,totalSupply]);var error;if(!account){error=/*i18n*/i18n._(\"Connect Wallet\");}if(pairState===PairState.INVALID){var _error;error=(_error=error)!==null&&_error!==void 0?_error:/*i18n*/i18n._(\"Invalid pair\");}if(!parsedAmounts[Field.CURRENCY_A]||!parsedAmounts[Field.CURRENCY_B]){var _error2;error=(_error2=error)!==null&&_error2!==void 0?_error2:/*i18n*/i18n._(\"Enter an amount\");}var currencyAAmount=parsedAmounts[Field.CURRENCY_A],currencyBAmount=parsedAmounts[Field.CURRENCY_B];if(currencyAAmount&&(currencyBalances===null||currencyBalances===void 0?void 0:(_currencyBalances$Fie=currencyBalances[Field.CURRENCY_A])===null||_currencyBalances$Fie===void 0?void 0:_currencyBalances$Fie.lessThan(currencyAAmount))){var _currencies$Field$CUR;error=/*i18n*/i18n._(\"Insufficient {0} balance\",{0:(_currencies$Field$CUR=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR===void 0?void 0:_currencies$Field$CUR.symbol});}if(currencyBAmount&&(currencyBalances===null||currencyBalances===void 0?void 0:(_currencyBalances$Fie2=currencyBalances[Field.CURRENCY_B])===null||_currencyBalances$Fie2===void 0?void 0:_currencyBalances$Fie2.lessThan(currencyBAmount))){var _currencies$Field$CUR2;error=/*i18n*/i18n._(\"Insufficient {0} balance\",{0:(_currencies$Field$CUR2=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR2===void 0?void 0:_currencies$Field$CUR2.symbol});}return{dependentField:dependentField,currencies:currencies,pair:pair,pairState:pairState,currencyBalances:currencyBalances,parsedAmounts:parsedAmounts,price:price,noLiquidity:noLiquidity,liquidityMinted:liquidityMinted,poolTokenPercentage:poolTokenPercentage,error:error};}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/state/mint/hooks.ts"],"names":["useCallback","useMemo","Field","typeInput","Percent","Price","CurrencyAmount","JSBI","PairState","useV2Pair","useTotalSupply","useActiveWeb3React","tryParseAmount","useCurrencyBalances","useAppDispatch","useAppSelector","ZERO","BigInt","useMintState","state","mint","useMintActionHandlers","noLiquidity","dispatch","onFieldAInput","typedValue","field","CURRENCY_A","onFieldBInput","CURRENCY_B","useDerivedMintInfo","currencyA","currencyB","account","independentField","otherTypedValue","dependentField","currencies","undefined","pairState","pair","totalSupply","liquidityToken","NOT_EXISTS","Boolean","equal","quotient","EXISTS","reserve0","reserve1","balances","currencyBalances","independentAmount","dependentAmount","wrappedIndependentAmount","wrapped","tokenA","tokenB","dependentCurrency","dependentTokenAmount","priceOf","quote","isNative","fromRawAmount","parsedAmounts","price","currencyAAmount","currencyBAmount","greaterThan","value","divide","currency","denominator","numerator","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","error","console","poolTokenPercentage","add","INVALID","lessThan","symbol"],"mappings":"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","sourcesContent":["import { t } from '@lingui/macro'\nimport { useCallback, useMemo } from 'react'\nimport { AppState } from '../index'\nimport { Field, typeInput } from './actions'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { Currency, Token, Percent, Price, CurrencyAmount } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport { PairState, useV2Pair } from '../../hooks/useV2Pairs'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\n\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useAppSelector((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  price?: Price<Currency, Currency>\n  noLiquidity?: boolean\n  liquidityMinted?: CurrencyAmount<Token>\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB]\n  )\n\n  // pair\n  const [pairState, pair] = useV2Pair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(totalSupply && JSBI.equal(totalSupply.quotient, ZERO)) ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.quotient, ZERO) &&\n        JSBI.equal(pair.reserve1.quotient, ZERO)\n    )\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseAmount(\n    typedValue,\n    currencies[independentField]\n  )\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    } else if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = independentAmount?.wrapped\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency?.isNative\n          ? CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n          : dependentTokenAmount\n      }\n      return undefined\n    } else {\n      return undefined\n    }\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(() => {\n    return {\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }\n  }, [dependentAmount, independentAmount, independentField])\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount?.greaterThan(0) && currencyBAmount?.greaterThan(0)) {\n        const value = currencyBAmount.divide(currencyAAmount)\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, value.denominator, value.numerator)\n      }\n      return undefined\n    } else {\n      const wrappedCurrencyA = currencyA?.wrapped\n      return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n    }\n  }, [currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [currencyAAmount?.wrapped, currencyBAmount?.wrapped]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      try {\n        return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n      } catch (error) {\n        console.error(error)\n        return undefined\n      }\n    } else {\n      return undefined\n    }\n  }, [parsedAmounts, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient)\n    } else {\n      return undefined\n    }\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = t`Connect Wallet`\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? t`Invalid pair`\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? t`Enter an amount`\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = t`Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = t`Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}