{"ast":null,"code":"import{SupportedChainId}from'../constants/chains';/**\n * Returns the input chain ID if chain is supported. If not, return undefined\n * @param chainId a chain ID, which will be returned if it is a supported chain ID\n */export function supportedChainId(chainId){if(chainId in SupportedChainId){return chainId;}return undefined;}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/utils/supportedChainId.ts"],"names":["SupportedChainId","supportedChainId","chainId","undefined"],"mappings":"AAAA,OAASA,gBAAT,KAAiC,qBAAjC,CAEA;AACA;AACA;AACA,GACA,MAAO,SAASC,CAAAA,gBAAT,CAA0BC,OAA1B,CAA+D,CACpE,GAAIA,OAAO,GAAIF,CAAAA,gBAAf,CAAiC,CAC/B,MAAOE,CAAAA,OAAP,CACD,CACD,MAAOC,CAAAA,SAAP,CACD","sourcesContent":["import { SupportedChainId } from '../constants/chains'\n\n/**\n * Returns the input chain ID if chain is supported. If not, return undefined\n * @param chainId a chain ID, which will be returned if it is a supported chain ID\n */\nexport function supportedChainId(chainId: number): number | undefined {\n  if (chainId in SupportedChainId) {\n    return chainId\n  }\n  return undefined\n}\n"]},"metadata":{},"sourceType":"module"}