{"ast":null,"code":"import{createReducer,nanoid}from'@reduxjs/toolkit';import{addPopup,removePopup,updateBlockNumber,setOpenModal,updateChainId}from'./actions';var initialState={chainId:null,blockNumber:{},popupList:[],openModal:null};export default createReducer(initialState,function(builder){return builder.addCase(updateChainId,function(state,action){var chainId=action.payload.chainId;state.chainId=chainId;}).addCase(updateBlockNumber,function(state,action){var _action$payload=action.payload,chainId=_action$payload.chainId,blockNumber=_action$payload.blockNumber;if(typeof state.blockNumber[chainId]!=='number'){state.blockNumber[chainId]=blockNumber;}else{state.blockNumber[chainId]=Math.max(blockNumber,state.blockNumber[chainId]);}}).addCase(setOpenModal,function(state,action){state.openModal=action.payload;}).addCase(addPopup,function(state,_ref){var _ref$payload=_ref.payload,content=_ref$payload.content,key=_ref$payload.key,_ref$payload$removeAf=_ref$payload.removeAfterMs,removeAfterMs=_ref$payload$removeAf===void 0?25000:_ref$payload$removeAf;state.popupList=(key?state.popupList.filter(function(popup){return popup.key!==key;}):state.popupList).concat([{key:key||nanoid(),show:true,content:content,removeAfterMs:removeAfterMs}]);}).addCase(removePopup,function(state,_ref2){var key=_ref2.payload.key;state.popupList.forEach(function(p){if(p.key===key){p.show=false;}});});});","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/state/application/reducer.ts"],"names":["createReducer","nanoid","addPopup","removePopup","updateBlockNumber","setOpenModal","updateChainId","initialState","chainId","blockNumber","popupList","openModal","builder","addCase","state","action","payload","Math","max","content","key","removeAfterMs","filter","popup","concat","show","forEach","p"],"mappings":"AAAA,OAASA,aAAT,CAAwBC,MAAxB,KAAsC,kBAAtC,CACA,OACEC,QADF,CAGEC,WAHF,CAIEC,iBAJF,CAMEC,YANF,CAOEC,aAPF,KAQO,WARP,CAoBA,GAAMC,CAAAA,YAA8B,CAAG,CACrCC,OAAO,CAAE,IAD4B,CAErCC,WAAW,CAAE,EAFwB,CAGrCC,SAAS,CAAE,EAH0B,CAIrCC,SAAS,CAAE,IAJ0B,CAAvC,CAOA,cAAeX,CAAAA,aAAa,CAACO,YAAD,CAAe,SAACK,OAAD,QACzCA,CAAAA,OAAO,CACJC,OADH,CACWP,aADX,CAC0B,SAACQ,KAAD,CAAQC,MAAR,CAAmB,CACzC,GAAQP,CAAAA,OAAR,CAAoBO,MAAM,CAACC,OAA3B,CAAQR,OAAR,CACAM,KAAK,CAACN,OAAN,CAAgBA,OAAhB,CACD,CAJH,EAKGK,OALH,CAKWT,iBALX,CAK8B,SAACU,KAAD,CAAQC,MAAR,CAAmB,CAC7C,oBAAiCA,MAAM,CAACC,OAAxC,CAAQR,OAAR,iBAAQA,OAAR,CAAiBC,WAAjB,iBAAiBA,WAAjB,CACA,GAAI,MAAOK,CAAAA,KAAK,CAACL,WAAN,CAAkBD,OAAlB,CAAP,GAAsC,QAA1C,CAAoD,CAClDM,KAAK,CAACL,WAAN,CAAkBD,OAAlB,EAA6BC,WAA7B,CACD,CAFD,IAEO,CACLK,KAAK,CAACL,WAAN,CAAkBD,OAAlB,EAA6BS,IAAI,CAACC,GAAL,CAAST,WAAT,CAAsBK,KAAK,CAACL,WAAN,CAAkBD,OAAlB,CAAtB,CAA7B,CACD,CACF,CAZH,EAaGK,OAbH,CAaWR,YAbX,CAayB,SAACS,KAAD,CAAQC,MAAR,CAAmB,CACxCD,KAAK,CAACH,SAAN,CAAkBI,MAAM,CAACC,OAAzB,CACD,CAfH,EAgBGH,OAhBH,CAgBWX,QAhBX,CAgBqB,SAACY,KAAD,MAAiE,uBAAvDE,OAAuD,CAA5CG,OAA4C,cAA5CA,OAA4C,CAAnCC,GAAmC,cAAnCA,GAAmC,oCAA9BC,aAA8B,CAA9BA,aAA8B,gCAAd,KAAc,uBAClFP,KAAK,CAACJ,SAAN,CAAkB,CAACU,GAAG,CAAGN,KAAK,CAACJ,SAAN,CAAgBY,MAAhB,CAAuB,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACH,GAAN,GAAcA,GAAzB,EAAvB,CAAH,CAA0DN,KAAK,CAACJ,SAApE,EAA+Ec,MAA/E,CAAsF,CACtG,CACEJ,GAAG,CAAEA,GAAG,EAAInB,MAAM,EADpB,CAEEwB,IAAI,CAAE,IAFR,CAGEN,OAAO,CAAPA,OAHF,CAIEE,aAAa,CAAbA,aAJF,CADsG,CAAtF,CAAlB,CAQD,CAzBH,EA0BGR,OA1BH,CA0BWV,WA1BX,CA0BwB,SAACW,KAAD,OAAiC,IAAZM,CAAAA,GAAY,OAAvBJ,OAAuB,CAAZI,GAAY,CACrDN,KAAK,CAACJ,SAAN,CAAgBgB,OAAhB,CAAwB,SAACC,CAAD,CAAO,CAC7B,GAAIA,CAAC,CAACP,GAAF,GAAUA,GAAd,CAAmB,CACjBO,CAAC,CAACF,IAAF,CAAS,KAAT,CACD,CACF,CAJD,EAKD,CAhCH,CADyC,EAAf,CAA5B","sourcesContent":["import { createReducer, nanoid } from '@reduxjs/toolkit'\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  updateBlockNumber,\n  ApplicationModal,\n  setOpenModal,\n  updateChainId,\n} from './actions'\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n  // used by RTK-Query to build dynamic subgraph urls\n  readonly chainId: number | null\n  readonly blockNumber: { readonly [chainId: number]: number }\n  readonly popupList: PopupList\n  readonly openModal: ApplicationModal | null\n}\n\nconst initialState: ApplicationState = {\n  chainId: null,\n  blockNumber: {},\n  popupList: [],\n  openModal: null,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateChainId, (state, action) => {\n      const { chainId } = action.payload\n      state.chainId = chainId\n    })\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n    .addCase(setOpenModal, (state, action) => {\n      state.openModal = action.payload\n    })\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 25000 } }) => {\n      state.popupList = (key ? state.popupList.filter((popup) => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs,\n        },\n      ])\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach((p) => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    })\n)\n"]},"metadata":{},"sourceType":"module"}