{"ast":null,"code":"import _slicedToArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{computePairAddress,Pair}from'@uniswap/v2-sdk';import{useMemo}from'react';import{abi as IUniswapV2PairABI}from'@uniswap/v2-core/build/IUniswapV2Pair.json';import{Interface}from'@ethersproject/abi';import{V2_FACTORY_ADDRESSES}from'../constants/addresses';import{useMultipleContractSingleData}from'../state/multicall/hooks';import{CurrencyAmount}from'@uniswap/sdk-core';var PAIR_INTERFACE=new Interface(IUniswapV2PairABI);export var PairState;(function(PairState){PairState[PairState[\"LOADING\"]=0]=\"LOADING\";PairState[PairState[\"NOT_EXISTS\"]=1]=\"NOT_EXISTS\";PairState[PairState[\"EXISTS\"]=2]=\"EXISTS\";PairState[PairState[\"INVALID\"]=3]=\"INVALID\";})(PairState||(PairState={}));export function useV2Pairs(currencies){var tokens=useMemo(function(){return currencies.map(function(_ref){var _ref2=_slicedToArray(_ref,2),currencyA=_ref2[0],currencyB=_ref2[1];return[currencyA===null||currencyA===void 0?void 0:currencyA.wrapped,currencyB===null||currencyB===void 0?void 0:currencyB.wrapped];});},[currencies]);var pairAddresses=useMemo(function(){return tokens.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),tokenA=_ref4[0],tokenB=_ref4[1];return tokenA&&tokenB&&tokenA.chainId===tokenB.chainId&&!tokenA.equals(tokenB)&&V2_FACTORY_ADDRESSES[tokenA.chainId]?computePairAddress({factoryAddress:V2_FACTORY_ADDRESSES[tokenA.chainId],tokenA:tokenA,tokenB:tokenB}):undefined;});},[tokens]);var results=useMultipleContractSingleData(pairAddresses,PAIR_INTERFACE,'getReserves');return useMemo(function(){return results.map(function(result,i){var reserves=result.result,loading=result.loading;var tokenA=tokens[i][0];var tokenB=tokens[i][1];if(loading)return[PairState.LOADING,null];if(!tokenA||!tokenB||tokenA.equals(tokenB))return[PairState.INVALID,null];if(!reserves)return[PairState.NOT_EXISTS,null];var reserve0=reserves.reserve0,reserve1=reserves.reserve1;var _ref5=tokenA.sortsBefore(tokenB)?[tokenA,tokenB]:[tokenB,tokenA],_ref6=_slicedToArray(_ref5,2),token0=_ref6[0],token1=_ref6[1];return[PairState.EXISTS,new Pair(CurrencyAmount.fromRawAmount(token0,reserve0.toString()),CurrencyAmount.fromRawAmount(token1,reserve1.toString()))];});},[results,tokens]);}export function useV2Pair(tokenA,tokenB){var inputs=useMemo(function(){return[[tokenA,tokenB]];},[tokenA,tokenB]);return useV2Pairs(inputs)[0];}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/useV2Pairs.ts"],"names":["computePairAddress","Pair","useMemo","abi","IUniswapV2PairABI","Interface","V2_FACTORY_ADDRESSES","useMultipleContractSingleData","CurrencyAmount","PAIR_INTERFACE","PairState","useV2Pairs","currencies","tokens","map","currencyA","currencyB","wrapped","pairAddresses","tokenA","tokenB","chainId","equals","factoryAddress","undefined","results","result","i","reserves","loading","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","fromRawAmount","toString","useV2Pair","inputs"],"mappings":"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","sourcesContent":["import { computePairAddress, Pair } from '@uniswap/v2-sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport { V2_FACTORY_ADDRESSES } from '../constants/addresses'\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function useV2Pairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const tokens = useMemo(\n    () => currencies.map(([currencyA, currencyB]) => [currencyA?.wrapped, currencyB?.wrapped]),\n    [currencies]\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA &&\n          tokenB &&\n          tokenA.chainId === tokenB.chainId &&\n          !tokenA.equals(tokenB) &&\n          V2_FACTORY_ADDRESSES[tokenA.chainId]\n          ? computePairAddress({ factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId], tokenA, tokenB })\n          : undefined\n      }),\n    [tokens]\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(\n          CurrencyAmount.fromRawAmount(token0, reserve0.toString()),\n          CurrencyAmount.fromRawAmount(token1, reserve1.toString())\n        ),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function useV2Pair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  const inputs: [[Currency | undefined, Currency | undefined]] = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB])\n  return useV2Pairs(inputs)[0]\n}\n"]},"metadata":{},"sourceType":"module"}