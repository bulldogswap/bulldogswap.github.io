{"ast":null,"code":"import{useMemo}from'react';import{useActiveWeb3React}from'./web3';import{useTokenBalance}from'state/wallet/hooks';import{SOCKS_CONTROLLER_ADDRESSES}from'constants/addresses';import{Token}from'@uniswap/sdk-core';import{SupportedChainId}from'constants/chains';// technically a 721, not an ERC20, but suffices for our purposes\nvar SOCKS=new Token(SupportedChainId.MAINNET,SOCKS_CONTROLLER_ADDRESSES[SupportedChainId.MAINNET],0);export function useHasSocks(){var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId;var balance=useTokenBalance(account!==null&&account!==void 0?account:undefined,chainId===SupportedChainId.MAINNET?SOCKS:undefined);return useMemo(function(){return Boolean(balance===null||balance===void 0?void 0:balance.greaterThan(0));},[balance]);}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/useSocksBalance.ts"],"names":["useMemo","useActiveWeb3React","useTokenBalance","SOCKS_CONTROLLER_ADDRESSES","Token","SupportedChainId","SOCKS","MAINNET","useHasSocks","account","chainId","balance","undefined","Boolean","greaterThan"],"mappings":"AAAA,OAASA,OAAT,KAAwB,OAAxB,CACA,OAASC,kBAAT,KAAmC,QAAnC,CACA,OAASC,eAAT,KAAgC,oBAAhC,CACA,OAASC,0BAAT,KAA2C,qBAA3C,CACA,OAASC,KAAT,KAAsB,mBAAtB,CACA,OAASC,gBAAT,KAAiC,kBAAjC,CAEA;AACA,GAAMC,CAAAA,KAAK,CAAG,GAAIF,CAAAA,KAAJ,CAAUC,gBAAgB,CAACE,OAA3B,CAAoCJ,0BAA0B,CAACE,gBAAgB,CAACE,OAAlB,CAA9D,CAA0F,CAA1F,CAAd,CAEA,MAAO,SAASC,CAAAA,WAAT,EAA4C,CACjD,wBAA6BP,kBAAkB,EAA/C,CAAQQ,OAAR,qBAAQA,OAAR,CAAiBC,OAAjB,qBAAiBA,OAAjB,CAEA,GAAMC,CAAAA,OAAO,CAAGT,eAAe,CAACO,OAAD,SAACA,OAAD,UAACA,OAAD,CAAYG,SAAZ,CAAuBF,OAAO,GAAKL,gBAAgB,CAACE,OAA7B,CAAuCD,KAAvC,CAA+CM,SAAtE,CAA/B,CAEA,MAAOZ,CAAAA,OAAO,CAAC,iBAAMa,CAAAA,OAAO,CAACF,OAAD,SAACA,OAAD,iBAACA,OAAO,CAAEG,WAAT,CAAqB,CAArB,CAAD,CAAb,EAAD,CAAyC,CAACH,OAAD,CAAzC,CAAd,CACD","sourcesContent":["import { useMemo } from 'react'\nimport { useActiveWeb3React } from './web3'\nimport { useTokenBalance } from 'state/wallet/hooks'\nimport { SOCKS_CONTROLLER_ADDRESSES } from 'constants/addresses'\nimport { Token } from '@uniswap/sdk-core'\nimport { SupportedChainId } from 'constants/chains'\n\n// technically a 721, not an ERC20, but suffices for our purposes\nconst SOCKS = new Token(SupportedChainId.MAINNET, SOCKS_CONTROLLER_ADDRESSES[SupportedChainId.MAINNET], 0)\n\nexport function useHasSocks(): boolean | undefined {\n  const { account, chainId } = useActiveWeb3React()\n\n  const balance = useTokenBalance(account ?? undefined, chainId === SupportedChainId.MAINNET ? SOCKS : undefined)\n\n  return useMemo(() => Boolean(balance?.greaterThan(0)), [balance])\n}\n"]},"metadata":{},"sourceType":"module"}