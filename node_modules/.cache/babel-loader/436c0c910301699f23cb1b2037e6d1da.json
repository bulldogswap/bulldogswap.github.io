{"ast":null,"code":"import{Trans}from\"@lingui/react\";import{ToggleElement,ToggleWrapper}from'components/Toggle/MultiToggle';// the order of displayed base currencies from left to right is always in sort order\n// currencyA is treated as the preferred base currency\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function RateToggle(_ref){var currencyA=_ref.currencyA,currencyB=_ref.currencyB,handleRateToggle=_ref.handleRateToggle;var tokenA=currencyA===null||currencyA===void 0?void 0:currencyA.wrapped;var tokenB=currencyB===null||currencyB===void 0?void 0:currencyB.wrapped;var isSorted=tokenA&&tokenB&&tokenA.sortsBefore(tokenB);return tokenA&&tokenB?/*#__PURE__*/_jsx(\"div\",{style:{width:'fit-content',display:'flex',alignItems:'center'},onClick:handleRateToggle,children:/*#__PURE__*/_jsxs(ToggleWrapper,{width:\"fit-content\",children:[/*#__PURE__*/_jsx(ToggleElement,{isActive:isSorted,fontSize:\"12px\",children:/*#__PURE__*/_jsx(Trans,{id:\"{0}\",values:{0:isSorted?currencyA.symbol:currencyB.symbol}})}),/*#__PURE__*/_jsx(ToggleElement,{isActive:!isSorted,fontSize:\"12px\",children:/*#__PURE__*/_jsx(Trans,{id:\"{0}\",values:{0:isSorted?currencyB.symbol:currencyA.symbol}})})]})}):null;}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/components/RateToggle/index.tsx"],"names":["ToggleElement","ToggleWrapper","RateToggle","currencyA","currencyB","handleRateToggle","tokenA","wrapped","tokenB","isSorted","sortsBefore","width","display","alignItems","symbol"],"mappings":"iCAEA,OAASA,aAAT,CAAwBC,aAAxB,KAA6C,+BAA7C,CAEA;AACA;wFACA,cAAe,SAASC,CAAAA,UAAT,MAQZ,IAPDC,CAAAA,SAOC,MAPDA,SAOC,CANDC,SAMC,MANDA,SAMC,CALDC,gBAKC,MALDA,gBAKC,CACD,GAAMC,CAAAA,MAAM,CAAGH,SAAH,SAAGA,SAAH,iBAAGA,SAAS,CAAEI,OAA1B,CACA,GAAMC,CAAAA,MAAM,CAAGJ,SAAH,SAAGA,SAAH,iBAAGA,SAAS,CAAEG,OAA1B,CAEA,GAAME,CAAAA,QAAQ,CAAGH,MAAM,EAAIE,MAAV,EAAoBF,MAAM,CAACI,WAAP,CAAmBF,MAAnB,CAArC,CAEA,MAAOF,CAAAA,MAAM,EAAIE,MAAV,cACL,YAAK,KAAK,CAAE,CAAEG,KAAK,CAAE,aAAT,CAAwBC,OAAO,CAAE,MAAjC,CAAyCC,UAAU,CAAE,QAArD,CAAZ,CAA6E,OAAO,CAAER,gBAAtF,uBACE,MAAC,aAAD,EAAe,KAAK,CAAC,aAArB,wBACE,KAAC,aAAD,EAAe,QAAQ,CAAEI,QAAzB,CAAmC,QAAQ,CAAC,MAA5C,uBACE,+BAAQA,QAAQ,CAAGN,SAAS,CAACW,MAAb,CAAsBV,SAAS,CAACU,MAAhD,GADF,EADF,cAIE,KAAC,aAAD,EAAe,QAAQ,CAAE,CAACL,QAA1B,CAAoC,QAAQ,CAAC,MAA7C,uBACE,+BAAQA,QAAQ,CAAGL,SAAS,CAACU,MAAb,CAAsBX,SAAS,CAACW,MAAhD,GADF,EAJF,GADF,EADK,CAWH,IAXJ,CAYD","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { ToggleElement, ToggleWrapper } from 'components/Toggle/MultiToggle'\n\n// the order of displayed base currencies from left to right is always in sort order\n// currencyA is treated as the preferred base currency\nexport default function RateToggle({\n  currencyA,\n  currencyB,\n  handleRateToggle,\n}: {\n  currencyA: Currency\n  currencyB: Currency\n  handleRateToggle: () => void\n}) {\n  const tokenA = currencyA?.wrapped\n  const tokenB = currencyB?.wrapped\n\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB)\n\n  return tokenA && tokenB ? (\n    <div style={{ width: 'fit-content', display: 'flex', alignItems: 'center' }} onClick={handleRateToggle}>\n      <ToggleWrapper width=\"fit-content\">\n        <ToggleElement isActive={isSorted} fontSize=\"12px\">\n          <Trans>{isSorted ? currencyA.symbol : currencyB.symbol}</Trans>\n        </ToggleElement>\n        <ToggleElement isActive={!isSorted} fontSize=\"12px\">\n          <Trans>{isSorted ? currencyB.symbol : currencyA.symbol}</Trans>\n        </ToggleElement>\n      </ToggleWrapper>\n    </div>\n  ) : null\n}\n"]},"metadata":{},"sourceType":"module"}