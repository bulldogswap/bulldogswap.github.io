{"ast":null,"code":"import _styled from\"styled-components\";import{Trans}from\"@lingui/react\";import{AutoRow,RowFixed}from'components/Row';import{AutoColumn}from'components/Column';import CurrencyLogo from'components/CurrencyLogo';import{TYPE}from'theme';import ListLogo from'components/ListLogo';import useTheme from'hooks/useTheme';import{ButtonPrimary}from'components/Button';import{useIsUserAddedToken,useIsTokenActive}from'hooks/Tokens';import{CheckCircle}from'react-feather';import{WrappedTokenInfo}from'../../state/lists/wrappedTokenInfo';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TokenSection=_styled.div.withConfig({componentId:\"sc-1x3jvxb-0\"})([\"padding:4px 20px;height:56px;display:grid;grid-template-columns:auto minmax(auto,1fr) auto;grid-gap:16px;align-items:center;opacity:\",\";\"],function(_ref){var dim=_ref.dim;return dim?'0.4':'1';});var CheckIcon=_styled(CheckCircle).withConfig({componentId:\"sc-1x3jvxb-1\"})([\"height:16px;width:16px;margin-right:6px;stroke:\",\";\"],function(_ref2){var theme=_ref2.theme;return theme.green1;});var NameOverflow=_styled.div.withConfig({componentId:\"sc-1x3jvxb-2\"})([\"white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-overflow:ellipsis;max-width:140px;font-size:12px;\"]);export default function ImportRow(_ref3){var token=_ref3.token,style=_ref3.style,dim=_ref3.dim,showImportView=_ref3.showImportView,setImportToken=_ref3.setImportToken;var theme=useTheme();// check if already active on list or local storage tokens\nvar isAdded=useIsUserAddedToken(token);var isActive=useIsTokenActive(token);var list=token instanceof WrappedTokenInfo?token.list:undefined;return/*#__PURE__*/_jsxs(TokenSection,{style:style,children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:token,size:'24px',style:{opacity:dim?'0.6':'1'}}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"4px\",style:{opacity:dim?'0.6':'1'},children:[/*#__PURE__*/_jsxs(AutoRow,{children:[/*#__PURE__*/_jsx(TYPE.body,{fontWeight:500,children:token.symbol}),/*#__PURE__*/_jsx(TYPE.darkGray,{ml:\"8px\",fontWeight:300,children:/*#__PURE__*/_jsx(NameOverflow,{title:token.name,children:token.name})})]}),list&&list.logoURI&&/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(TYPE.small,{mr:\"4px\",color:theme.text3,children:/*#__PURE__*/_jsx(Trans,{id:\"via {0}\",values:{0:list.name}})}),/*#__PURE__*/_jsx(ListLogo,{logoURI:list.logoURI,size:\"12px\"})]})]}),!isActive&&!isAdded?/*#__PURE__*/_jsx(ButtonPrimary,{width:\"fit-content\",padding:\"6px 12px\",fontWeight:500,fontSize:\"14px\",onClick:function onClick(){setImportToken&&setImportToken(token);showImportView();},children:/*#__PURE__*/_jsx(Trans,{id:\"Import\"})}):/*#__PURE__*/_jsxs(RowFixed,{style:{minWidth:'fit-content'},children:[/*#__PURE__*/_jsx(CheckIcon,{}),/*#__PURE__*/_jsx(TYPE.main,{color:theme.green1,children:/*#__PURE__*/_jsx(Trans,{id:\"Active\"})})]})]});}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/components/SearchModal/ImportRow.tsx"],"names":["AutoRow","RowFixed","AutoColumn","CurrencyLogo","TYPE","ListLogo","useTheme","ButtonPrimary","useIsUserAddedToken","useIsTokenActive","CheckCircle","WrappedTokenInfo","TokenSection","styled","div","dim","CheckIcon","theme","green1","NameOverflow","ImportRow","token","style","showImportView","setImportToken","isAdded","isActive","list","undefined","opacity","symbol","name","logoURI","text3","minWidth"],"mappings":"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","sourcesContent":["import { CSSProperties } from 'react'\nimport { Token } from '@uniswap/sdk-core'\nimport { AutoRow, RowFixed } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { TYPE } from 'theme'\nimport ListLogo from 'components/ListLogo'\nimport useTheme from 'hooks/useTheme'\nimport { ButtonPrimary } from 'components/Button'\nimport styled from 'styled-components/macro'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { CheckCircle } from 'react-feather'\nimport { WrappedTokenInfo } from '../../state/lists/wrappedTokenInfo'\nimport { Trans } from '@lingui/macro'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckCircle)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.green1};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  const theme = useTheme()\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  const list = token instanceof WrappedTokenInfo ? token.list : undefined\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size={'24px'} style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <TYPE.body fontWeight={500}>{token.symbol}</TYPE.body>\n          <TYPE.darkGray ml=\"8px\" fontWeight={300}>\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </TYPE.darkGray>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <TYPE.small mr=\"4px\" color={theme.text3}>\n              <Trans>via {list.name} </Trans>\n            </TYPE.small>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <ButtonPrimary\n          width=\"fit-content\"\n          padding=\"6px 12px\"\n          fontWeight={500}\n          fontSize=\"14px\"\n          onClick={() => {\n            setImportToken && setImportToken(token)\n            showImportView()\n          }}\n        >\n          <Trans>Import</Trans>\n        </ButtonPrimary>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <TYPE.main color={theme.green1}>\n            <Trans>Active</Trans>\n          </TYPE.main>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}