{"ast":null,"code":"import _slicedToArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useEffect,useState}from'react';import{api,CHAIN_TAG}from'state/data/enhanced';import{useAppDispatch,useAppSelector}from'state/hooks';import{supportedChainId}from'utils/supportedChainId';import useDebounce from'../../hooks/useDebounce';import useIsWindowVisible from'../../hooks/useIsWindowVisible';import{useActiveWeb3React}from'../../hooks/web3';import{updateBlockNumber,updateChainId}from'./actions';function useQueryCacheInvalidator(){var dispatch=useAppDispatch();// subscribe to `chainId` changes in the redux store rather than Web3\n// this will ensure that when `invalidateTags` is called, the latest\n// `chainId` is available in redux to build the subgraph url\nvar chainId=useAppSelector(function(state){return state.application.chainId;});useEffect(function(){dispatch(api.util.invalidateTags([CHAIN_TAG]));},[chainId,dispatch]);}export default function Updater(){var _useActiveWeb3React=useActiveWeb3React(),library=_useActiveWeb3React.library,chainId=_useActiveWeb3React.chainId;var dispatch=useAppDispatch();var windowVisible=useIsWindowVisible();var _useState=useState({chainId:chainId,blockNumber:null}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useQueryCacheInvalidator();var blockNumberCallback=useCallback(function(blockNumber){setState(function(state){if(chainId===state.chainId){if(typeof state.blockNumber!=='number')return{chainId:chainId,blockNumber:blockNumber};return{chainId:chainId,blockNumber:Math.max(blockNumber,state.blockNumber)};}return state;});},[chainId,setState]);// attach/detach listeners\nuseEffect(function(){if(!library||!chainId||!windowVisible)return undefined;setState({chainId:chainId,blockNumber:null});library.getBlockNumber().then(blockNumberCallback).catch(function(error){return console.error(\"Failed to get block number for chainId: \".concat(chainId),error);});library.on('block',blockNumberCallback);return function(){library.removeListener('block',blockNumberCallback);};},[dispatch,chainId,library,blockNumberCallback,windowVisible]);var debouncedState=useDebounce(state,100);useEffect(function(){if(!debouncedState.chainId||!debouncedState.blockNumber||!windowVisible)return;dispatch(updateBlockNumber({chainId:debouncedState.chainId,blockNumber:debouncedState.blockNumber}));},[windowVisible,dispatch,debouncedState.blockNumber,debouncedState.chainId]);useEffect(function(){var _supportedChainId;dispatch(updateChainId({chainId:debouncedState.chainId?(_supportedChainId=supportedChainId(debouncedState.chainId))!==null&&_supportedChainId!==void 0?_supportedChainId:null:null}));},[dispatch,debouncedState.chainId]);return null;}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/state/application/updater.ts"],"names":["useCallback","useEffect","useState","api","CHAIN_TAG","useAppDispatch","useAppSelector","supportedChainId","useDebounce","useIsWindowVisible","useActiveWeb3React","updateBlockNumber","updateChainId","useQueryCacheInvalidator","dispatch","chainId","state","application","util","invalidateTags","Updater","library","windowVisible","blockNumber","setState","blockNumberCallback","Math","max","undefined","getBlockNumber","then","catch","error","console","on","removeListener","debouncedState"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { api, CHAIN_TAG } from 'state/data/enhanced'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { supportedChainId } from 'utils/supportedChainId'\nimport useDebounce from '../../hooks/useDebounce'\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { updateBlockNumber, updateChainId } from './actions'\n\nfunction useQueryCacheInvalidator() {\n  const dispatch = useAppDispatch()\n\n  // subscribe to `chainId` changes in the redux store rather than Web3\n  // this will ensure that when `invalidateTags` is called, the latest\n  // `chainId` is available in redux to build the subgraph url\n  const chainId = useAppSelector((state) => state.application.chainId)\n\n  useEffect(() => {\n    dispatch(api.util.invalidateTags([CHAIN_TAG]))\n  }, [chainId, dispatch])\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  useQueryCacheInvalidator()\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((state) => {\n        if (chainId === state.chainId) {\n          if (typeof state.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) }\n        }\n        return state\n      })\n    },\n    [chainId, setState]\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  useEffect(() => {\n    dispatch(\n      updateChainId({ chainId: debouncedState.chainId ? supportedChainId(debouncedState.chainId) ?? null : null })\n    )\n  }, [dispatch, debouncedState.chainId])\n\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}