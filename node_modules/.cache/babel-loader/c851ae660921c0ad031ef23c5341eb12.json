{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _styled from\"styled-components\";var _templateObject;import{Trans}from\"@lingui/react\";import JSBI from'jsbi';import{AutoColumn}from'../../components/Column';import{STAKING_REWARDS_INFO,useStakingInfo}from'../../state/stake/hooks';import{TYPE,ExternalLink}from'../../theme';import PoolCard from'../../components/earn/PoolCard';import{RowBetween}from'../../components/Row';import{CardSection,DataCard,CardNoise,CardBGImage}from'../../components/earn/styled';import{Countdown}from'./Countdown';import Loader from'../../components/Loader';import{useActiveWeb3React}from'../../hooks/web3';import{BIG_INT_ZERO}from'../../constants/misc';import{OutlineCard}from'../../components/Card';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PageWrapper=_styled(AutoColumn).withConfig({componentId:\"sc-kddrr9-0\"})([\"max-width:640px;width:100%;\"]);var TopSection=_styled(AutoColumn).withConfig({componentId:\"sc-kddrr9-1\"})([\"max-width:720px;width:100%;\"]);var PoolSection=_styled.div.withConfig({componentId:\"sc-kddrr9-2\"})([\"display:grid;grid-template-columns:1fr;column-gap:10px;row-gap:15px;width:100%;justify-self:center;\"]);var DataRow=_styled(RowBetween).withConfig({componentId:\"sc-kddrr9-3\"})([\"\",\";\"],function(_ref){var theme=_ref.theme;return theme.mediaWidth.upToSmall(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\nflex-direction: column;\\n\"])));});export default function Earn(){var _STAKING_REWARDS_INFO,_STAKING_REWARDS_INFO2,_stakingInfos$;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;// staking info for connected account\nvar stakingInfos=useStakingInfo();/**\n   * only show staking cards with balance\n   * @todo only account for this if rewards are inactive\n   */var stakingInfosWithBalance=stakingInfos===null||stakingInfos===void 0?void 0:stakingInfos.filter(function(s){return JSBI.greaterThan(s.stakedAmount.quotient,BIG_INT_ZERO);});// toggle copy if rewards are inactive\nvar stakingRewardsExist=Boolean(typeof chainId==='number'&&((_STAKING_REWARDS_INFO=(_STAKING_REWARDS_INFO2=STAKING_REWARDS_INFO[chainId])===null||_STAKING_REWARDS_INFO2===void 0?void 0:_STAKING_REWARDS_INFO2.length)!==null&&_STAKING_REWARDS_INFO!==void 0?_STAKING_REWARDS_INFO:0)>0);return/*#__PURE__*/_jsxs(PageWrapper,{gap:\"lg\",justify:\"center\",children:[/*#__PURE__*/_jsx(TopSection,{gap:\"md\",children:/*#__PURE__*/_jsxs(DataCard,{children:[/*#__PURE__*/_jsx(CardBGImage,{}),/*#__PURE__*/_jsx(CardNoise,{}),/*#__PURE__*/_jsx(CardSection,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",children:[/*#__PURE__*/_jsx(RowBetween,{children:/*#__PURE__*/_jsx(TYPE.white,{fontWeight:600,children:/*#__PURE__*/_jsx(Trans,{id:\"Uniswap liquidity mining\"})})}),/*#__PURE__*/_jsx(RowBetween,{children:/*#__PURE__*/_jsx(TYPE.white,{fontSize:14,children:/*#__PURE__*/_jsx(Trans,{id:\"Deposit your Liquidity Provider tokens to receive UNI, the Uniswap protocol governance token.\"})})}),' ',/*#__PURE__*/_jsx(ExternalLink,{style:{color:'white',textDecoration:'underline'},href:\"https://uniswap.org/blog/uni/\",target:\"_blank\",children:/*#__PURE__*/_jsx(TYPE.white,{fontSize:14,children:/*#__PURE__*/_jsx(Trans,{id:\"Read more about UNI\"})})})]})}),/*#__PURE__*/_jsx(CardBGImage,{}),/*#__PURE__*/_jsx(CardNoise,{})]})}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"lg\",style:{width:'100%',maxWidth:'720px'},children:[/*#__PURE__*/_jsxs(DataRow,{style:{alignItems:'baseline'},children:[/*#__PURE__*/_jsx(TYPE.mediumHeader,{style:{marginTop:'0.5rem'},children:/*#__PURE__*/_jsx(Trans,{id:\"Participating pools\"})}),/*#__PURE__*/_jsx(Countdown,{exactEnd:stakingInfos===null||stakingInfos===void 0?void 0:(_stakingInfos$=stakingInfos[0])===null||_stakingInfos$===void 0?void 0:_stakingInfos$.periodFinish})]}),/*#__PURE__*/_jsx(PoolSection,{children:stakingRewardsExist&&(stakingInfos===null||stakingInfos===void 0?void 0:stakingInfos.length)===0?/*#__PURE__*/_jsx(Loader,{style:{margin:'auto'}}):!stakingRewardsExist?/*#__PURE__*/_jsx(OutlineCard,{children:/*#__PURE__*/_jsx(Trans,{id:\"No active pools\"})}):(stakingInfos===null||stakingInfos===void 0?void 0:stakingInfos.length)!==0&&stakingInfosWithBalance.length===0?/*#__PURE__*/_jsx(OutlineCard,{children:/*#__PURE__*/_jsx(Trans,{id:\"No active pools\"})}):stakingInfosWithBalance===null||stakingInfosWithBalance===void 0?void 0:stakingInfosWithBalance.map(function(stakingInfo){// need to sort by added liquidity here\nreturn/*#__PURE__*/_jsx(PoolCard,{stakingInfo:stakingInfo},stakingInfo.stakingRewardAddress);})})]})]});}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/pages/Earn/index.tsx"],"names":["JSBI","AutoColumn","STAKING_REWARDS_INFO","useStakingInfo","TYPE","ExternalLink","PoolCard","RowBetween","CardSection","DataCard","CardNoise","CardBGImage","Countdown","Loader","useActiveWeb3React","BIG_INT_ZERO","OutlineCard","PageWrapper","styled","TopSection","PoolSection","div","DataRow","theme","mediaWidth","upToSmall","Earn","chainId","stakingInfos","stakingInfosWithBalance","filter","s","greaterThan","stakedAmount","quotient","stakingRewardsExist","Boolean","length","color","textDecoration","width","maxWidth","alignItems","marginTop","periodFinish","margin","map","stakingInfo","stakingRewardAddress"],"mappings":"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","sourcesContent":["import JSBI from 'jsbi'\nimport { AutoColumn } from '../../components/Column'\nimport styled from 'styled-components/macro'\nimport { STAKING_REWARDS_INFO, useStakingInfo } from '../../state/stake/hooks'\nimport { TYPE, ExternalLink } from '../../theme'\nimport PoolCard from '../../components/earn/PoolCard'\nimport { RowBetween } from '../../components/Row'\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled'\nimport { Countdown } from './Countdown'\nimport Loader from '../../components/Loader'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { BIG_INT_ZERO } from '../../constants/misc'\nimport { OutlineCard } from '../../components/Card'\nimport { Trans } from '@lingui/macro'\n\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\nconst TopSection = styled(AutoColumn)`\n  max-width: 720px;\n  width: 100%;\n`\n\nconst PoolSection = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 10px;\n  row-gap: 15px;\n  width: 100%;\n  justify-self: center;\n`\n\nconst DataRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\nflex-direction: column;\n`};\n`\n\nexport default function Earn() {\n  const { chainId } = useActiveWeb3React()\n\n  // staking info for connected account\n  const stakingInfos = useStakingInfo()\n\n  /**\n   * only show staking cards with balance\n   * @todo only account for this if rewards are inactive\n   */\n  const stakingInfosWithBalance = stakingInfos?.filter((s) => JSBI.greaterThan(s.stakedAmount.quotient, BIG_INT_ZERO))\n\n  // toggle copy if rewards are inactive\n  const stakingRewardsExist = Boolean(typeof chainId === 'number' && (STAKING_REWARDS_INFO[chainId]?.length ?? 0) > 0)\n\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      <TopSection gap=\"md\">\n        <DataCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>\n                  <Trans>Uniswap liquidity mining</Trans>\n                </TYPE.white>\n              </RowBetween>\n              <RowBetween>\n                <TYPE.white fontSize={14}>\n                  <Trans>\n                    Deposit your Liquidity Provider tokens to receive UNI, the Uniswap protocol governance token.\n                  </Trans>\n                </TYPE.white>\n              </RowBetween>{' '}\n              <ExternalLink\n                style={{ color: 'white', textDecoration: 'underline' }}\n                href=\"https://uniswap.org/blog/uni/\"\n                target=\"_blank\"\n              >\n                <TYPE.white fontSize={14}>\n                  <Trans>Read more about UNI</Trans>\n                </TYPE.white>\n              </ExternalLink>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </DataCard>\n      </TopSection>\n\n      <AutoColumn gap=\"lg\" style={{ width: '100%', maxWidth: '720px' }}>\n        <DataRow style={{ alignItems: 'baseline' }}>\n          <TYPE.mediumHeader style={{ marginTop: '0.5rem' }}>\n            <Trans>Participating pools</Trans>\n          </TYPE.mediumHeader>\n          <Countdown exactEnd={stakingInfos?.[0]?.periodFinish} />\n        </DataRow>\n\n        <PoolSection>\n          {stakingRewardsExist && stakingInfos?.length === 0 ? (\n            <Loader style={{ margin: 'auto' }} />\n          ) : !stakingRewardsExist ? (\n            <OutlineCard>\n              <Trans>No active pools</Trans>\n            </OutlineCard>\n          ) : stakingInfos?.length !== 0 && stakingInfosWithBalance.length === 0 ? (\n            <OutlineCard>\n              <Trans>No active pools</Trans>\n            </OutlineCard>\n          ) : (\n            stakingInfosWithBalance?.map((stakingInfo) => {\n              // need to sort by added liquidity here\n              return <PoolCard key={stakingInfo.stakingRewardAddress} stakingInfo={stakingInfo} />\n            })\n          )}\n        </PoolSection>\n      </AutoColumn>\n    </PageWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}