{"ast":null,"code":"import _slicedToArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{keyframes as _keyframes}from\"styled-components\";import _styled from\"styled-components\";var _templateObject,_templateObject2;import{useEffect,useState}from'react';import{useActiveWeb3React}from'../../hooks/web3';import{useBlockNumber}from'../../state/application/hooks';import{ExternalLink,TYPE}from'../../theme';import{ExplorerDataType,getExplorerLink}from'../../utils/getExplorerLink';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledPolling=_styled.div.withConfig({componentId:\"sc-123dig8-0\"})([\"position:fixed;display:flex;align-items:center;right:0;bottom:0;padding:1rem;color:\",\";\",\"\"],function(_ref){var theme=_ref.theme;return theme.green1;},function(_ref2){var theme=_ref2.theme;return theme.mediaWidth.upToMedium(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: none;\\n  \"])));});var StyledPollingNumber=_styled(TYPE.small).withConfig({componentId:\"sc-123dig8-1\"})([\"transition:opacity 0.25s ease;opacity:\",\";:hover{opacity:1;}\"],function(_ref3){var breathe=_ref3.breathe,hovering=_ref3.hovering;return hovering?0.7:breathe?1:0.5;});var StyledPollingDot=_styled.div.withConfig({componentId:\"sc-123dig8-2\"})([\"width:8px;height:8px;min-height:8px;min-width:8px;margin-left:0.5rem;border-radius:50%;position:relative;background-color:\",\";\"],function(_ref4){var theme=_ref4.theme;return theme.green1;});var rotate360=_keyframes(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n\"])));var Spinner=_styled.div.withConfig({componentId:\"sc-123dig8-3\"})([\"animation:\",\" 1s cubic-bezier(0.83,0,0.17,1) infinite;transform:translateZ(0);border-top:1px solid transparent;border-right:1px solid transparent;border-bottom:1px solid transparent;border-left:2px solid \",\";background:transparent;width:14px;height:14px;border-radius:50%;position:relative;left:-3px;top:-3px;\"],rotate360,function(_ref5){var theme=_ref5.theme;return theme.green1;});export default function Polling(){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var blockNumber=useBlockNumber();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isMounting=_useState2[0],setIsMounting=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isHover=_useState4[0],setIsHover=_useState4[1];useEffect(function(){if(!blockNumber){return;}setIsMounting(true);var mountingTimer=setTimeout(function(){return setIsMounting(false);},1000);// this will clear Timeout when component unmount like in willComponentUnmount\nreturn function(){clearTimeout(mountingTimer);};},[blockNumber]//useEffect will run only one time\n//if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n);return/*#__PURE__*/_jsx(ExternalLink,{href:chainId&&blockNumber?getExplorerLink(chainId,blockNumber.toString(),ExplorerDataType.BLOCK):'',children:/*#__PURE__*/_jsxs(StyledPolling,{onMouseEnter:function onMouseEnter(){return setIsHover(true);},onMouseLeave:function onMouseLeave(){return setIsHover(false);},children:[/*#__PURE__*/_jsx(StyledPollingNumber,{breathe:isMounting,hovering:isHover,children:blockNumber}),/*#__PURE__*/_jsx(StyledPollingDot,{children:isMounting&&/*#__PURE__*/_jsx(Spinner,{})})]})});}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/components/Header/Polling.tsx"],"names":["useEffect","useState","useActiveWeb3React","useBlockNumber","ExternalLink","TYPE","ExplorerDataType","getExplorerLink","StyledPolling","styled","div","theme","green1","mediaWidth","upToMedium","StyledPollingNumber","small","breathe","hovering","StyledPollingDot","rotate360","keyframes","Spinner","Polling","chainId","blockNumber","isMounting","setIsMounting","isHover","setIsHover","mountingTimer","setTimeout","clearTimeout","toString","BLOCK"],"mappings":"mgBAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,OAASC,kBAAT,KAAmC,kBAAnC,CAEA,OAASC,cAAT,KAA+B,+BAA/B,CACA,OAASC,YAAT,CAAuBC,IAAvB,KAAmC,aAAnC,CACA,OAASC,gBAAT,CAA2BC,eAA3B,KAAkD,6BAAlD,C,wFAEA,GAAMC,CAAAA,aAAa,CAAGC,OAAM,CAACC,GAAV,yIAOR,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAArB,EAPQ,CASf,mBAAGD,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACE,UAAN,CAAiBC,UAAhC,2FATe,CAAnB,CAaA,GAAMC,CAAAA,mBAAmB,CAAGN,OAAM,CAACJ,IAAI,CAACW,KAAN,CAAT,2GAEZ,mBAAGC,CAAAA,OAAH,OAAGA,OAAH,CAAYC,QAAZ,OAAYA,QAAZ,OAA4BA,CAAAA,QAAQ,CAAG,GAAH,CAASD,OAAO,CAAG,CAAH,CAAO,GAA3D,EAFY,CAAzB,CAOA,GAAME,CAAAA,gBAAgB,CAAGV,OAAM,CAACC,GAAV,6KAQA,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAArB,EARA,CAAtB,CAWA,GAAMQ,CAAAA,SAAS,CAAGC,UAAH,+JAAf,CASA,GAAMC,CAAAA,OAAO,CAAGb,OAAM,CAACC,GAAV,oWACEU,SADF,CAOc,mBAAGT,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAArB,EAPd,CAAb,CAkBA,cAAe,SAASW,CAAAA,OAAT,EAAmB,CAChC,wBAAoBrB,kBAAkB,EAAtC,CAAQsB,OAAR,qBAAQA,OAAR,CAEA,GAAMC,CAAAA,WAAW,CAAGtB,cAAc,EAAlC,CAEA,cAAoCF,QAAQ,CAAC,KAAD,CAA5C,wCAAOyB,UAAP,eAAmBC,aAAnB,eACA,eAA8B1B,QAAQ,CAAC,KAAD,CAAtC,yCAAO2B,OAAP,eAAgBC,UAAhB,eAEA7B,SAAS,CACP,UAAM,CACJ,GAAI,CAACyB,WAAL,CAAkB,CAChB,OACD,CAEDE,aAAa,CAAC,IAAD,CAAb,CACA,GAAMG,CAAAA,aAAa,CAAGC,UAAU,CAAC,iBAAMJ,CAAAA,aAAa,CAAC,KAAD,CAAnB,EAAD,CAA6B,IAA7B,CAAhC,CAEA;AACA,MAAO,WAAM,CACXK,YAAY,CAACF,aAAD,CAAZ,CACD,CAFD,CAGD,CAbM,CAcP,CAACL,WAAD,CAAc;AACd;AAfO,CAAT,CAkBA,mBACE,KAAC,YAAD,EACE,IAAI,CAAED,OAAO,EAAIC,WAAX,CAAyBlB,eAAe,CAACiB,OAAD,CAAUC,WAAW,CAACQ,QAAZ,EAAV,CAAkC3B,gBAAgB,CAAC4B,KAAnD,CAAxC,CAAoG,EAD5G,uBAGE,MAAC,aAAD,EAAe,YAAY,CAAE,8BAAML,CAAAA,UAAU,CAAC,IAAD,CAAhB,EAA7B,CAAqD,YAAY,CAAE,8BAAMA,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAAnE,wBACE,KAAC,mBAAD,EAAqB,OAAO,CAAEH,UAA9B,CAA0C,QAAQ,CAAEE,OAApD,UACGH,WADH,EADF,cAIE,KAAC,gBAAD,WAAmBC,UAAU,eAAI,KAAC,OAAD,IAAjC,EAJF,GAHF,EADF,CAYD","sourcesContent":["import { useEffect, useState } from 'react'\nimport styled, { keyframes } from 'styled-components/macro'\nimport { useActiveWeb3React } from '../../hooks/web3'\n\nimport { useBlockNumber } from '../../state/application/hooks'\nimport { ExternalLink, TYPE } from '../../theme'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\n\nconst StyledPolling = styled.div`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  right: 0;\n  bottom: 0;\n  padding: 1rem;\n  color: ${({ theme }) => theme.green1};\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `}\n`\nconst StyledPollingNumber = styled(TYPE.small)<{ breathe: boolean; hovering: boolean }>`\n  transition: opacity 0.25s ease;\n  opacity: ${({ breathe, hovering }) => (hovering ? 0.7 : breathe ? 1 : 0.5)};\n  :hover {\n    opacity: 1;\n  }\n`\nconst StyledPollingDot = styled.div`\n  width: 8px;\n  height: 8px;\n  min-height: 8px;\n  min-width: 8px;\n  margin-left: 0.5rem;\n  border-radius: 50%;\n  position: relative;\n  background-color: ${({ theme }) => theme.green1};\n`\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Spinner = styled.div`\n  animation: ${rotate360} 1s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n  transform: translateZ(0);\n\n  border-top: 1px solid transparent;\n  border-right: 1px solid transparent;\n  border-bottom: 1px solid transparent;\n  border-left: 2px solid ${({ theme }) => theme.green1};\n  background: transparent;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  position: relative;\n\n  left: -3px;\n  top: -3px;\n`\n\nexport default function Polling() {\n  const { chainId } = useActiveWeb3React()\n\n  const blockNumber = useBlockNumber()\n\n  const [isMounting, setIsMounting] = useState(false)\n  const [isHover, setIsHover] = useState(false)\n\n  useEffect(\n    () => {\n      if (!blockNumber) {\n        return\n      }\n\n      setIsMounting(true)\n      const mountingTimer = setTimeout(() => setIsMounting(false), 1000)\n\n      // this will clear Timeout when component unmount like in willComponentUnmount\n      return () => {\n        clearTimeout(mountingTimer)\n      }\n    },\n    [blockNumber] //useEffect will run only one time\n    //if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n  )\n\n  return (\n    <ExternalLink\n      href={chainId && blockNumber ? getExplorerLink(chainId, blockNumber.toString(), ExplorerDataType.BLOCK) : ''}\n    >\n      <StyledPolling onMouseEnter={() => setIsHover(true)} onMouseLeave={() => setIsHover(false)}>\n        <StyledPollingNumber breathe={isMounting} hovering={isHover}>\n          {blockNumber}\n        </StyledPollingNumber>\n        <StyledPollingDot>{isMounting && <Spinner />}</StyledPollingDot>\n      </StyledPolling>\n    </ExternalLink>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}