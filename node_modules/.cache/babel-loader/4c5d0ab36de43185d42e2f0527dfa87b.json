{"ast":null,"code":"import _objectSpread from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useSingleCallResult,useSingleContractMultipleData}from'state/multicall/hooks';import{useMemo}from'react';import{useV3NFTPositionManagerContract}from'./useContract';import{BigNumber}from'@ethersproject/bignumber';function useV3PositionsFromTokenIds(tokenIds){var positionManager=useV3NFTPositionManagerContract();var inputs=useMemo(function(){return tokenIds?tokenIds.map(function(tokenId){return[BigNumber.from(tokenId)];}):[];},[tokenIds]);var results=useSingleContractMultipleData(positionManager,'positions',inputs);var loading=useMemo(function(){return results.some(function(_ref){var loading=_ref.loading;return loading;});},[results]);var error=useMemo(function(){return results.some(function(_ref2){var error=_ref2.error;return error;});},[results]);var positions=useMemo(function(){if(!loading&&!error&&tokenIds){return results.map(function(call,i){var tokenId=tokenIds[i];var result=call.result;return{tokenId:tokenId,fee:result.fee,feeGrowthInside0LastX128:result.feeGrowthInside0LastX128,feeGrowthInside1LastX128:result.feeGrowthInside1LastX128,liquidity:result.liquidity,nonce:result.nonce,operator:result.operator,tickLower:result.tickLower,tickUpper:result.tickUpper,token0:result.token0,token1:result.token1,tokensOwed0:result.tokensOwed0,tokensOwed1:result.tokensOwed1};});}return undefined;},[loading,error,results,tokenIds]);return{loading:loading,positions:positions===null||positions===void 0?void 0:positions.map(function(position,i){return _objectSpread(_objectSpread({},position),{},{tokenId:inputs[i][0]});})};}export function useV3PositionFromTokenId(tokenId){var _position$positions;var position=useV3PositionsFromTokenIds(tokenId?[tokenId]:undefined);return{loading:position.loading,position:(_position$positions=position.positions)===null||_position$positions===void 0?void 0:_position$positions[0]};}export function useV3Positions(account){var _balanceResult$;var positionManager=useV3NFTPositionManagerContract();var _useSingleCallResult=useSingleCallResult(positionManager,'balanceOf',[account!==null&&account!==void 0?account:undefined]),balanceLoading=_useSingleCallResult.loading,balanceResult=_useSingleCallResult.result;// we don't expect any account balance to ever exceed the bounds of max safe int\nvar accountBalance=balanceResult===null||balanceResult===void 0?void 0:(_balanceResult$=balanceResult[0])===null||_balanceResult$===void 0?void 0:_balanceResult$.toNumber();var tokenIdsArgs=useMemo(function(){if(accountBalance&&account){var tokenRequests=[];for(var i=0;i<accountBalance;i++){tokenRequests.push([account,i]);}return tokenRequests;}return[];},[account,accountBalance]);var tokenIdResults=useSingleContractMultipleData(positionManager,'tokenOfOwnerByIndex',tokenIdsArgs);var someTokenIdsLoading=useMemo(function(){return tokenIdResults.some(function(_ref3){var loading=_ref3.loading;return loading;});},[tokenIdResults]);var tokenIds=useMemo(function(){if(account){return tokenIdResults.map(function(_ref4){var result=_ref4.result;return result;}).filter(function(result){return!!result;}).map(function(result){return BigNumber.from(result[0]);});}return[];},[account,tokenIdResults]);var _useV3PositionsFromTo=useV3PositionsFromTokenIds(tokenIds),positions=_useV3PositionsFromTo.positions,positionsLoading=_useV3PositionsFromTo.loading;return{loading:someTokenIdsLoading||balanceLoading||positionsLoading,positions:positions};}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/useV3Positions.ts"],"names":["useSingleCallResult","useSingleContractMultipleData","useMemo","useV3NFTPositionManagerContract","BigNumber","useV3PositionsFromTokenIds","tokenIds","positionManager","inputs","map","tokenId","from","results","loading","some","error","positions","call","i","result","fee","feeGrowthInside0LastX128","feeGrowthInside1LastX128","liquidity","nonce","operator","tickLower","tickUpper","token0","token1","tokensOwed0","tokensOwed1","undefined","position","useV3PositionFromTokenId","useV3Positions","account","balanceLoading","balanceResult","accountBalance","toNumber","tokenIdsArgs","tokenRequests","push","tokenIdResults","someTokenIdsLoading","filter","positionsLoading"],"mappings":"uLAAA,OAASA,mBAAT,CAA8BC,6BAA9B,KAA2E,uBAA3E,CACA,OAASC,OAAT,KAAwB,OAAxB,CAEA,OAASC,+BAAT,KAAgD,eAAhD,CACA,OAASC,SAAT,KAA0B,0BAA1B,CAOA,QAASC,CAAAA,0BAAT,CAAoCC,QAApC,CAA8F,CAC5F,GAAMC,CAAAA,eAAe,CAAGJ,+BAA+B,EAAvD,CACA,GAAMK,CAAAA,MAAM,CAAGN,OAAO,CAAC,iBAAOI,CAAAA,QAAQ,CAAGA,QAAQ,CAACG,GAAT,CAAa,SAACC,OAAD,QAAa,CAACN,SAAS,CAACO,IAAV,CAAeD,OAAf,CAAD,CAAb,EAAb,CAAH,CAA0D,EAAzE,EAAD,CAA+E,CAACJ,QAAD,CAA/E,CAAtB,CACA,GAAMM,CAAAA,OAAO,CAAGX,6BAA6B,CAACM,eAAD,CAAkB,WAAlB,CAA+BC,MAA/B,CAA7C,CAEA,GAAMK,CAAAA,OAAO,CAAGX,OAAO,CAAC,iBAAMU,CAAAA,OAAO,CAACE,IAAR,CAAa,kBAAGD,CAAAA,OAAH,MAAGA,OAAH,OAAiBA,CAAAA,OAAjB,EAAb,CAAN,EAAD,CAA+C,CAACD,OAAD,CAA/C,CAAvB,CACA,GAAMG,CAAAA,KAAK,CAAGb,OAAO,CAAC,iBAAMU,CAAAA,OAAO,CAACE,IAAR,CAAa,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAf,EAAb,CAAN,EAAD,CAA2C,CAACH,OAAD,CAA3C,CAArB,CAEA,GAAMI,CAAAA,SAAS,CAAGd,OAAO,CAAC,UAAM,CAC9B,GAAI,CAACW,OAAD,EAAY,CAACE,KAAb,EAAsBT,QAA1B,CAAoC,CAClC,MAAOM,CAAAA,OAAO,CAACH,GAAR,CAAY,SAACQ,IAAD,CAAOC,CAAP,CAAa,CAC9B,GAAMR,CAAAA,OAAO,CAAGJ,QAAQ,CAACY,CAAD,CAAxB,CACA,GAAMC,CAAAA,MAAM,CAAGF,IAAI,CAACE,MAApB,CACA,MAAO,CACLT,OAAO,CAAPA,OADK,CAELU,GAAG,CAAED,MAAM,CAACC,GAFP,CAGLC,wBAAwB,CAAEF,MAAM,CAACE,wBAH5B,CAILC,wBAAwB,CAAEH,MAAM,CAACG,wBAJ5B,CAKLC,SAAS,CAAEJ,MAAM,CAACI,SALb,CAMLC,KAAK,CAAEL,MAAM,CAACK,KANT,CAOLC,QAAQ,CAAEN,MAAM,CAACM,QAPZ,CAQLC,SAAS,CAAEP,MAAM,CAACO,SARb,CASLC,SAAS,CAAER,MAAM,CAACQ,SATb,CAULC,MAAM,CAAET,MAAM,CAACS,MAVV,CAWLC,MAAM,CAAEV,MAAM,CAACU,MAXV,CAYLC,WAAW,CAAEX,MAAM,CAACW,WAZf,CAaLC,WAAW,CAAEZ,MAAM,CAACY,WAbf,CAAP,CAeD,CAlBM,CAAP,CAmBD,CACD,MAAOC,CAAAA,SAAP,CACD,CAvBwB,CAuBtB,CAACnB,OAAD,CAAUE,KAAV,CAAiBH,OAAjB,CAA0BN,QAA1B,CAvBsB,CAAzB,CAyBA,MAAO,CACLO,OAAO,CAAPA,OADK,CAELG,SAAS,CAAEA,SAAF,SAAEA,SAAF,iBAAEA,SAAS,CAAEP,GAAX,CAAe,SAACwB,QAAD,CAAWf,CAAX,wCAAuBe,QAAvB,MAAiCvB,OAAO,CAAEF,MAAM,CAACU,CAAD,CAAN,CAAU,CAAV,CAA1C,IAAf,CAFN,CAAP,CAID,CAOD,MAAO,SAASgB,CAAAA,wBAAT,CAAkCxB,OAAlC,CAAwF,yBAC7F,GAAMuB,CAAAA,QAAQ,CAAG5B,0BAA0B,CAACK,OAAO,CAAG,CAACA,OAAD,CAAH,CAAesB,SAAvB,CAA3C,CACA,MAAO,CACLnB,OAAO,CAAEoB,QAAQ,CAACpB,OADb,CAELoB,QAAQ,sBAAEA,QAAQ,CAACjB,SAAX,8CAAE,oBAAqB,CAArB,CAFL,CAAP,CAID,CAED,MAAO,SAASmB,CAAAA,cAAT,CAAwBC,OAAxB,CAAmF,qBACxF,GAAM7B,CAAAA,eAAe,CAAGJ,+BAA+B,EAAvD,CAEA,yBAA2DH,mBAAmB,CAACO,eAAD,CAAkB,WAAlB,CAA+B,CAC3G6B,OAD2G,SAC3GA,OAD2G,UAC3GA,OAD2G,CAChGJ,SADgG,CAA/B,CAA9E,CAAiBK,cAAjB,sBAAQxB,OAAR,CAAyCyB,aAAzC,sBAAiCnB,MAAjC,CAIA;AACA,GAAMoB,CAAAA,cAAkC,CAAGD,aAAH,SAAGA,aAAH,kCAAGA,aAAa,CAAG,CAAH,CAAhB,0CAAG,gBAAoBE,QAApB,EAA3C,CAEA,GAAMC,CAAAA,YAAY,CAAGvC,OAAO,CAAC,UAAM,CACjC,GAAIqC,cAAc,EAAIH,OAAtB,CAA+B,CAC7B,GAAMM,CAAAA,aAAa,CAAG,EAAtB,CACA,IAAK,GAAIxB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGqB,cAApB,CAAoCrB,CAAC,EAArC,CAAyC,CACvCwB,aAAa,CAACC,IAAd,CAAmB,CAACP,OAAD,CAAUlB,CAAV,CAAnB,EACD,CACD,MAAOwB,CAAAA,aAAP,CACD,CACD,MAAO,EAAP,CACD,CAT2B,CASzB,CAACN,OAAD,CAAUG,cAAV,CATyB,CAA5B,CAWA,GAAMK,CAAAA,cAAc,CAAG3C,6BAA6B,CAACM,eAAD,CAAkB,qBAAlB,CAAyCkC,YAAzC,CAApD,CACA,GAAMI,CAAAA,mBAAmB,CAAG3C,OAAO,CAAC,iBAAM0C,CAAAA,cAAc,CAAC9B,IAAf,CAAoB,mBAAGD,CAAAA,OAAH,OAAGA,OAAH,OAAiBA,CAAAA,OAAjB,EAApB,CAAN,EAAD,CAAsD,CAAC+B,cAAD,CAAtD,CAAnC,CAEA,GAAMtC,CAAAA,QAAQ,CAAGJ,OAAO,CAAC,UAAM,CAC7B,GAAIkC,OAAJ,CAAa,CACX,MAAOQ,CAAAA,cAAc,CAClBnC,GADI,CACA,mBAAGU,CAAAA,MAAH,OAAGA,MAAH,OAAgBA,CAAAA,MAAhB,EADA,EAEJ2B,MAFI,CAEG,SAAC3B,MAAD,QAA8B,CAAC,CAACA,MAAhC,EAFH,EAGJV,GAHI,CAGA,SAACU,MAAD,QAAYf,CAAAA,SAAS,CAACO,IAAV,CAAeQ,MAAM,CAAC,CAAD,CAArB,CAAZ,EAHA,CAAP,CAID,CACD,MAAO,EAAP,CACD,CARuB,CAQrB,CAACiB,OAAD,CAAUQ,cAAV,CARqB,CAAxB,CAUA,0BAAiDvC,0BAA0B,CAACC,QAAD,CAA3E,CAAQU,SAAR,uBAAQA,SAAR,CAA4B+B,gBAA5B,uBAAmBlC,OAAnB,CAEA,MAAO,CACLA,OAAO,CAAEgC,mBAAmB,EAAIR,cAAvB,EAAyCU,gBAD7C,CAEL/B,SAAS,CAATA,SAFK,CAAP,CAID","sourcesContent":["import { useSingleCallResult, useSingleContractMultipleData, Result } from 'state/multicall/hooks'\nimport { useMemo } from 'react'\nimport { PositionDetails } from 'types/position'\nimport { useV3NFTPositionManagerContract } from './useContract'\nimport { BigNumber } from '@ethersproject/bignumber'\n\ninterface UseV3PositionsResults {\n  loading: boolean\n  positions: PositionDetails[] | undefined\n}\n\nfunction useV3PositionsFromTokenIds(tokenIds: BigNumber[] | undefined): UseV3PositionsResults {\n  const positionManager = useV3NFTPositionManagerContract()\n  const inputs = useMemo(() => (tokenIds ? tokenIds.map((tokenId) => [BigNumber.from(tokenId)]) : []), [tokenIds])\n  const results = useSingleContractMultipleData(positionManager, 'positions', inputs)\n\n  const loading = useMemo(() => results.some(({ loading }) => loading), [results])\n  const error = useMemo(() => results.some(({ error }) => error), [results])\n\n  const positions = useMemo(() => {\n    if (!loading && !error && tokenIds) {\n      return results.map((call, i) => {\n        const tokenId = tokenIds[i]\n        const result = call.result as Result\n        return {\n          tokenId,\n          fee: result.fee,\n          feeGrowthInside0LastX128: result.feeGrowthInside0LastX128,\n          feeGrowthInside1LastX128: result.feeGrowthInside1LastX128,\n          liquidity: result.liquidity,\n          nonce: result.nonce,\n          operator: result.operator,\n          tickLower: result.tickLower,\n          tickUpper: result.tickUpper,\n          token0: result.token0,\n          token1: result.token1,\n          tokensOwed0: result.tokensOwed0,\n          tokensOwed1: result.tokensOwed1,\n        }\n      })\n    }\n    return undefined\n  }, [loading, error, results, tokenIds])\n\n  return {\n    loading,\n    positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] })),\n  }\n}\n\ninterface UseV3PositionResults {\n  loading: boolean\n  position: PositionDetails | undefined\n}\n\nexport function useV3PositionFromTokenId(tokenId: BigNumber | undefined): UseV3PositionResults {\n  const position = useV3PositionsFromTokenIds(tokenId ? [tokenId] : undefined)\n  return {\n    loading: position.loading,\n    position: position.positions?.[0],\n  }\n}\n\nexport function useV3Positions(account: string | null | undefined): UseV3PositionsResults {\n  const positionManager = useV3NFTPositionManagerContract()\n\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, 'balanceOf', [\n    account ?? undefined,\n  ])\n\n  // we don't expect any account balance to ever exceed the bounds of max safe int\n  const accountBalance: number | undefined = balanceResult?.[0]?.toNumber()\n\n  const tokenIdsArgs = useMemo(() => {\n    if (accountBalance && account) {\n      const tokenRequests = []\n      for (let i = 0; i < accountBalance; i++) {\n        tokenRequests.push([account, i])\n      }\n      return tokenRequests\n    }\n    return []\n  }, [account, accountBalance])\n\n  const tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs)\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults])\n\n  const tokenIds = useMemo(() => {\n    if (account) {\n      return tokenIdResults\n        .map(({ result }) => result)\n        .filter((result): result is Result => !!result)\n        .map((result) => BigNumber.from(result[0]))\n    }\n    return []\n  }, [account, tokenIdResults])\n\n  const { positions, loading: positionsLoading } = useV3PositionsFromTokenIds(tokenIds)\n\n  return {\n    loading: someTokenIdsLoading || balanceLoading || positionsLoading,\n    positions,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}