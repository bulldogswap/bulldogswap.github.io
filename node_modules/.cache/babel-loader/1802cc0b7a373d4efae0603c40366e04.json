{"ast":null,"code":"import _objectSpread from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{ThemeContext as _ThemeContext}from\"styled-components\";import _styled from\"styled-components\";var _excluded=[\"steps\",\"disabled\"];import{useContext}from'react';import{AutoColumn}from'../Column';import{TYPE}from'../../theme';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=_styled(AutoColumn).withConfig({componentId:\"sc-dlion8-0\"})([\"margin-right:8px;height:100%;\"]);var Grouping=_styled(AutoColumn).withConfig({componentId:\"sc-dlion8-1\"})([\"width:fit-content;padding:4px;border-radius:16px;\"]);var Circle=_styled.div.withConfig({componentId:\"sc-dlion8-2\"})([\"width:48px;height:48px;background-color:\",\";border-radius:50%;color:\",\";display:flex;align-items:center;justify-content:center;line-height:8px;font-size:16px;padding:1rem;\"],function(_ref){var theme=_ref.theme,confirmed=_ref.confirmed,disabled=_ref.disabled;return disabled?theme.bg3:confirmed?theme.green1:theme.primary1;},function(_ref2){var theme=_ref2.theme,disabled=_ref2.disabled;return disabled?theme.text3:theme.text1;});var CircleRow=_styled.div.withConfig({componentId:\"sc-dlion8-3\"})([\"display:flex;flex-direction:column;align-items:center;\"]);/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */export default function ProgressCircles(_ref3){var steps=_ref3.steps,_ref3$disabled=_ref3.disabled,disabled=_ref3$disabled===void 0?false:_ref3$disabled,rest=_objectWithoutProperties(_ref3,_excluded);var theme=useContext(_ThemeContext);return/*#__PURE__*/_jsx(Wrapper,_objectSpread(_objectSpread({justify:'center'},rest),{},{children:/*#__PURE__*/_jsxs(Grouping,{children:[steps.map(function(step,i){return/*#__PURE__*/_jsxs(CircleRow,{children:[/*#__PURE__*/_jsx(Circle,{confirmed:step,disabled:disabled||!steps[i-1]&&i!==0,children:step?'✓':i+1+'.'}),/*#__PURE__*/_jsx(TYPE.main,{color:theme.text4,children:\"|\"})]},i);}),/*#__PURE__*/_jsx(Circle,{disabled:disabled||!steps[steps.length-1],children:steps.length+1+'.'})]})}));}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/components/ProgressSteps/index.tsx"],"names":["useContext","AutoColumn","TYPE","Wrapper","styled","Grouping","Circle","div","theme","confirmed","disabled","bg3","green1","primary1","text3","text1","CircleRow","ProgressCircles","steps","rest","ThemeContext","map","step","i","text4","length"],"mappings":"0gBAAA,OAASA,UAAT,KAA2B,OAA3B,CAEA,OAASC,UAAT,KAA2B,WAA3B,CAEA,OAASC,IAAT,KAAqB,aAArB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAGC,OAAM,CAACH,UAAD,CAAT,2EAAb,CAKA,GAAMI,CAAAA,QAAQ,CAAGD,OAAM,CAACH,UAAD,CAAT,+FAAd,CAOA,GAAMK,CAAAA,MAAM,CAAGF,OAAM,CAACG,GAAV,yNAGU,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,SAAV,MAAUA,SAAV,CAAqBC,QAArB,MAAqBA,QAArB,OAClBA,CAAAA,QAAQ,CAAGF,KAAK,CAACG,GAAT,CAAeF,SAAS,CAAGD,KAAK,CAACI,MAAT,CAAkBJ,KAAK,CAACK,QADtC,EAHV,CAMD,mBAAGL,CAAAA,KAAH,OAAGA,KAAH,CAAUE,QAAV,OAAUA,QAAV,OAA0BA,CAAAA,QAAQ,CAAGF,KAAK,CAACM,KAAT,CAAiBN,KAAK,CAACO,KAAzD,EANC,CAAZ,CAeA,GAAMC,CAAAA,SAAS,CAAGZ,OAAM,CAACG,GAAV,oGAAf,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAe,SAASU,CAAAA,eAAT,OAAqF,IAA1DC,CAAAA,KAA0D,OAA1DA,KAA0D,sBAAnDR,QAAmD,CAAnDA,QAAmD,yBAAxC,KAAwC,gBAA9BS,IAA8B,2CAClG,GAAMX,CAAAA,KAAK,CAAGR,UAAU,CAACoB,aAAD,CAAxB,CAEA,mBACE,KAAC,OAAD,8BAAS,OAAO,CAAE,QAAlB,EAAgCD,IAAhC,4BACE,MAAC,QAAD,YACGD,KAAK,CAACG,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,CAAa,CACtB,mBACE,MAAC,SAAD,yBACE,KAAC,MAAD,EAAQ,SAAS,CAAED,IAAnB,CAAyB,QAAQ,CAAEZ,QAAQ,EAAK,CAACQ,KAAK,CAACK,CAAC,CAAG,CAAL,CAAN,EAAiBA,CAAC,GAAK,CAAvE,UACGD,IAAI,CAAG,GAAH,CAASC,CAAC,CAAG,CAAJ,CAAQ,GADxB,EADF,cAIE,KAAC,IAAD,CAAM,IAAN,EAAW,KAAK,CAAEf,KAAK,CAACgB,KAAxB,eAJF,GAAgBD,CAAhB,CADF,CAQD,CATA,CADH,cAWE,KAAC,MAAD,EAAQ,QAAQ,CAAEb,QAAQ,EAAI,CAACQ,KAAK,CAACA,KAAK,CAACO,MAAN,CAAe,CAAhB,CAApC,UAAyDP,KAAK,CAACO,MAAN,CAAe,CAAf,CAAmB,GAA5E,EAXF,GADF,GADF,CAiBD","sourcesContent":["import { useContext } from 'react'\nimport styled from 'styled-components/macro'\nimport { AutoColumn } from '../Column'\nimport { ThemeContext } from 'styled-components/macro'\nimport { TYPE } from '../../theme'\n\nconst Wrapper = styled(AutoColumn)`\n  margin-right: 8px;\n  height: 100%;\n`\n\nconst Grouping = styled(AutoColumn)`\n  width: fit-content;\n  padding: 4px;\n  /* background-color: ${({ theme }) => theme.bg2}; */\n  border-radius: 16px;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  width: 48px;\n  height: 48px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.bg3 : confirmed ? theme.green1 : theme.primary1};\n  border-radius: 50%;\n  color: ${({ theme, disabled }) => (disabled ? theme.text3 : theme.text1)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 16px;\n  padding: 1rem;\n`\n\nconst CircleRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  const theme = useContext(ThemeContext)\n\n  return (\n    <Wrapper justify={'center'} {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1 + '.'}\n              </Circle>\n              <TYPE.main color={theme.text4}>|</TYPE.main>\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1 + '.'}</Circle>\n      </Grouping>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}