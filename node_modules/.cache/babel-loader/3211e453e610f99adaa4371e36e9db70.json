{"ast":null,"code":"import _slicedToArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _createForOfIteratorHelper from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import{Route}from'@uniswap/v3-sdk';import{useMemo}from'react';import{useUserSingleHopOnly}from'../state/user/hooks';import{useActiveWeb3React}from'./web3';import{useV3SwapPools}from'./useV3SwapPools';/**\n * Returns true if poolA is equivalent to poolB\n * @param poolA one of the two pools\n * @param poolB the other pool\n */function poolEquals(poolA,poolB){return poolA===poolB||poolA.token0.equals(poolB.token0)&&poolA.token1.equals(poolB.token1)&&poolA.fee===poolB.fee;}function computeAllRoutes(currencyIn,currencyOut,pools,chainId){var currentPath=arguments.length>4&&arguments[4]!==undefined?arguments[4]:[];var allPaths=arguments.length>5&&arguments[5]!==undefined?arguments[5]:[];var startCurrencyIn=arguments.length>6&&arguments[6]!==undefined?arguments[6]:currencyIn;var maxHops=arguments.length>7&&arguments[7]!==undefined?arguments[7]:2;var tokenIn=currencyIn===null||currencyIn===void 0?void 0:currencyIn.wrapped;var tokenOut=currencyOut===null||currencyOut===void 0?void 0:currencyOut.wrapped;if(!tokenIn||!tokenOut)throw new Error('Missing tokenIn/tokenOut');var _iterator=_createForOfIteratorHelper(pools),_step;try{var _loop=function _loop(){var pool=_step.value;if(!pool.involvesToken(tokenIn)||currentPath.find(function(pathPool){return poolEquals(pool,pathPool);}))return\"continue\";var outputToken=pool.token0.equals(tokenIn)?pool.token1:pool.token0;if(outputToken.equals(tokenOut)){allPaths.push(new Route([].concat(_toConsumableArray(currentPath),[pool]),startCurrencyIn,currencyOut));}else if(maxHops>1){computeAllRoutes(outputToken,currencyOut,pools,chainId,[].concat(_toConsumableArray(currentPath),[pool]),allPaths,startCurrencyIn,maxHops-1);}};for(_iterator.s();!(_step=_iterator.n()).done;){var _ret=_loop();if(_ret===\"continue\")continue;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return allPaths;}/**\n * Returns all the routes from an input currency to an output currency\n * @param currencyIn the input currency\n * @param currencyOut the output currency\n */export function useAllV3Routes(currencyIn,currencyOut){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var _useV3SwapPools=useV3SwapPools(currencyIn,currencyOut),pools=_useV3SwapPools.pools,poolsLoading=_useV3SwapPools.loading;var _useUserSingleHopOnly=useUserSingleHopOnly(),_useUserSingleHopOnly2=_slicedToArray(_useUserSingleHopOnly,1),singleHopOnly=_useUserSingleHopOnly2[0];return useMemo(function(){if(poolsLoading||!chainId||!pools||!currencyIn||!currencyOut)return{loading:true,routes:[]};var routes=computeAllRoutes(currencyIn,currencyOut,pools,chainId,[],[],currencyIn,singleHopOnly?1:2);return{loading:false,routes:routes};},[chainId,currencyIn,currencyOut,pools,poolsLoading,singleHopOnly]);}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/useAllV3Routes.ts"],"names":["Route","useMemo","useUserSingleHopOnly","useActiveWeb3React","useV3SwapPools","poolEquals","poolA","poolB","token0","equals","token1","fee","computeAllRoutes","currencyIn","currencyOut","pools","chainId","currentPath","allPaths","startCurrencyIn","maxHops","tokenIn","wrapped","tokenOut","Error","pool","involvesToken","find","pathPool","outputToken","push","useAllV3Routes","poolsLoading","loading","singleHopOnly","routes"],"mappings":"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","sourcesContent":["import { Currency } from '@uniswap/sdk-core'\nimport { Pool, Route } from '@uniswap/v3-sdk'\nimport { useMemo } from 'react'\nimport { useUserSingleHopOnly } from '../state/user/hooks'\nimport { useActiveWeb3React } from './web3'\nimport { useV3SwapPools } from './useV3SwapPools'\n\n/**\n * Returns true if poolA is equivalent to poolB\n * @param poolA one of the two pools\n * @param poolB the other pool\n */\nfunction poolEquals(poolA: Pool, poolB: Pool): boolean {\n  return (\n    poolA === poolB ||\n    (poolA.token0.equals(poolB.token0) && poolA.token1.equals(poolB.token1) && poolA.fee === poolB.fee)\n  )\n}\n\nfunction computeAllRoutes(\n  currencyIn: Currency,\n  currencyOut: Currency,\n  pools: Pool[],\n  chainId: number,\n  currentPath: Pool[] = [],\n  allPaths: Route<Currency, Currency>[] = [],\n  startCurrencyIn: Currency = currencyIn,\n  maxHops = 2\n): Route<Currency, Currency>[] {\n  const tokenIn = currencyIn?.wrapped\n  const tokenOut = currencyOut?.wrapped\n  if (!tokenIn || !tokenOut) throw new Error('Missing tokenIn/tokenOut')\n\n  for (const pool of pools) {\n    if (!pool.involvesToken(tokenIn) || currentPath.find((pathPool) => poolEquals(pool, pathPool))) continue\n\n    const outputToken = pool.token0.equals(tokenIn) ? pool.token1 : pool.token0\n    if (outputToken.equals(tokenOut)) {\n      allPaths.push(new Route([...currentPath, pool], startCurrencyIn, currencyOut))\n    } else if (maxHops > 1) {\n      computeAllRoutes(\n        outputToken,\n        currencyOut,\n        pools,\n        chainId,\n        [...currentPath, pool],\n        allPaths,\n        startCurrencyIn,\n        maxHops - 1\n      )\n    }\n  }\n\n  return allPaths\n}\n\n/**\n * Returns all the routes from an input currency to an output currency\n * @param currencyIn the input currency\n * @param currencyOut the output currency\n */\nexport function useAllV3Routes(\n  currencyIn?: Currency,\n  currencyOut?: Currency\n): { loading: boolean; routes: Route<Currency, Currency>[] } {\n  const { chainId } = useActiveWeb3React()\n  const { pools, loading: poolsLoading } = useV3SwapPools(currencyIn, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (poolsLoading || !chainId || !pools || !currencyIn || !currencyOut) return { loading: true, routes: [] }\n\n    const routes = computeAllRoutes(currencyIn, currencyOut, pools, chainId, [], [], currencyIn, singleHopOnly ? 1 : 2)\n    return { loading: false, routes }\n  }, [chainId, currencyIn, currencyOut, pools, poolsLoading, singleHopOnly])\n}\n"]},"metadata":{},"sourceType":"module"}