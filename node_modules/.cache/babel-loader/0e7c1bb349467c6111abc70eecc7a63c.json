{"ast":null,"code":"import{CurrencyAmount}from'@uniswap/sdk-core';import{useTokenContract}from'./useContract';import{useSingleCallResult}from'../state/multicall/hooks';// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token){var _useSingleCallResult,_useSingleCallResult$;var contract=useTokenContract((token===null||token===void 0?void 0:token.isToken)?token.address:undefined,false);var totalSupply=(_useSingleCallResult=useSingleCallResult(contract,'totalSupply'))===null||_useSingleCallResult===void 0?void 0:(_useSingleCallResult$=_useSingleCallResult.result)===null||_useSingleCallResult$===void 0?void 0:_useSingleCallResult$[0];return(token===null||token===void 0?void 0:token.isToken)&&totalSupply?CurrencyAmount.fromRawAmount(token,totalSupply.toString()):undefined;}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/useTotalSupply.ts"],"names":["CurrencyAmount","useTokenContract","useSingleCallResult","useTotalSupply","token","contract","isToken","address","undefined","totalSupply","result","fromRawAmount","toString"],"mappings":"AACA,OAAgBA,cAAhB,KAAgD,mBAAhD,CACA,OAASC,gBAAT,KAAiC,eAAjC,CACA,OAASC,mBAAT,KAAoC,0BAApC,CAEA;AACA;AACA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA6E,gDAClF,GAAMC,CAAAA,QAAQ,CAAGJ,gBAAgB,CAAC,CAAAG,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEE,OAAP,EAAiBF,KAAK,CAACG,OAAvB,CAAiCC,SAAlC,CAA6C,KAA7C,CAAjC,CAEA,GAAMC,CAAAA,WAAsB,uBAAGP,mBAAmB,CAACG,QAAD,CAAW,aAAX,CAAtB,sEAAG,qBAA8CK,MAAjD,gDAAG,sBAAuD,CAAvD,CAA/B,CAEA,MAAO,CAAAN,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEE,OAAP,GAAkBG,WAAlB,CAAgCT,cAAc,CAACW,aAAf,CAA6BP,KAA7B,CAAoCK,WAAW,CAACG,QAAZ,EAApC,CAAhC,CAA8FJ,SAArG,CACD","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, CurrencyAmount, Currency } from '@uniswap/sdk-core'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token?.isToken && totalSupply ? CurrencyAmount.fromRawAmount(token, totalSupply.toString()) : undefined\n}\n"]},"metadata":{},"sourceType":"module"}