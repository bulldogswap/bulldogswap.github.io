{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{ThemeContext as _ThemeContext}from\"styled-components\";import _styled from\"styled-components\";var _templateObject,_templateObject2,_templateObject3;import{Trans}from\"@lingui/react\";import{useCallback,useContext}from'react';import{SUPPORTED_WALLETS}from'../../constants/wallet';import{useActiveWeb3React}from'../../hooks/web3';import{clearAllTransactions}from'../../state/transactions/actions';import{shortenAddress}from'../../utils';import{ExplorerDataType,getExplorerLink}from'../../utils/getExplorerLink';import{AutoRow}from'../Row';import Copy from'./Copy';import Transaction from'./Transaction';import{ReactComponent as Close}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";import{injected,walletconnect,walletlink,fortmatic,portis}from'../../connectors';import CoinbaseWalletIcon from\"../../assets/images/coinbaseWalletIcon.svg\";import WalletConnectIcon from\"../../assets/images/walletConnectIcon.svg\";import FortmaticIcon from'../../assets/images/fortmaticIcon.png';import PortisIcon from'../../assets/images/portisIcon.png';import Identicon from'../Identicon';import{ButtonSecondary}from'../Button';import{ExternalLink as LinkIcon}from'react-feather';import{ExternalLink,LinkStyledButton,TYPE}from'../../theme';import{useAppDispatch}from'state/hooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var HeaderRow=_styled.div.withConfig({componentId:\"sc-1ir7xlr-0\"})([\"\",\";padding:1rem 1rem;font-weight:500;color:\",\";\",\";\"],function(_ref){var theme=_ref.theme;return theme.flexRowNoWrap;},function(props){return props.color==='blue'?function(_ref2){var theme=_ref2.theme;return theme.primary1;}:'inherit';},function(_ref3){var theme=_ref3.theme;return theme.mediaWidth.upToMedium(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    padding: 1rem;\\n  \"])));});var UpperSection=_styled.div.withConfig({componentId:\"sc-1ir7xlr-1\"})([\"position:relative;h5{margin:0;margin-bottom:0.5rem;font-size:1rem;font-weight:400;}h5:last-child{margin-bottom:0px;}h4{margin-top:0;font-weight:500;}\"]);var InfoCard=_styled.div.withConfig({componentId:\"sc-1ir7xlr-2\"})([\"padding:1rem;border:1px solid \",\";border-radius:20px;position:relative;display:grid;grid-row-gap:12px;margin-bottom:20px;\"],function(_ref4){var theme=_ref4.theme;return theme.bg3;});var AccountGroupingRow=_styled.div.withConfig({componentId:\"sc-1ir7xlr-3\"})([\"\",\";justify-content:space-between;align-items:center;font-weight:400;color:\",\";div{\",\" align-items:center;}\"],function(_ref5){var theme=_ref5.theme;return theme.flexRowNoWrap;},function(_ref6){var theme=_ref6.theme;return theme.text1;},function(_ref7){var theme=_ref7.theme;return theme.flexRowNoWrap;});var AccountSection=_styled.div.withConfig({componentId:\"sc-1ir7xlr-4\"})([\"padding:0rem 1rem;\",\";\"],function(_ref8){var theme=_ref8.theme;return theme.mediaWidth.upToMedium(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"padding: 0rem 1rem 1.5rem 1rem;\"])));});var YourAccount=_styled.div.withConfig({componentId:\"sc-1ir7xlr-5\"})([\"h5{margin:0 0 1rem 0;font-weight:400;}h4{margin:0;font-weight:500;}\"]);var LowerSection=_styled.div.withConfig({componentId:\"sc-1ir7xlr-6\"})([\"\",\" padding:1.5rem;flex-grow:1;overflow:auto;background-color:\",\";border-bottom-left-radius:20px;border-bottom-right-radius:20px;h5{margin:0;font-weight:400;color:\",\";}\"],function(_ref9){var theme=_ref9.theme;return theme.flexColumnNoWrap;},function(_ref10){var theme=_ref10.theme;return theme.bg2;},function(_ref11){var theme=_ref11.theme;return theme.text3;});var AccountControl=_styled.div.withConfig({componentId:\"sc-1ir7xlr-7\"})([\"display:flex;justify-content:space-between;min-width:0;width:100%;font-weight:500;font-size:1.25rem;a:hover{text-decoration:underline;}p{min-width:0;margin:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}\"]);var AddressLink=_styled(ExternalLink).withConfig({componentId:\"sc-1ir7xlr-8\"})([\"font-size:0.825rem;color:\",\";margin-left:1rem;font-size:0.825rem;display:flex;:hover{color:\",\";}\"],function(_ref12){var theme=_ref12.theme;return theme.text3;},function(_ref13){var theme=_ref13.theme;return theme.text2;});var CloseIcon=_styled.div.withConfig({componentId:\"sc-1ir7xlr-9\"})([\"position:absolute;right:1rem;top:14px;&:hover{cursor:pointer;opacity:0.6;}\"]);var CloseColor=_styled(Close).withConfig({componentId:\"sc-1ir7xlr-10\"})([\"path{stroke:\",\";}\"],function(_ref14){var theme=_ref14.theme;return theme.text4;});var WalletName=_styled.div.withConfig({componentId:\"sc-1ir7xlr-11\"})([\"width:initial;font-size:0.825rem;font-weight:500;color:\",\";\"],function(_ref15){var theme=_ref15.theme;return theme.text3;});var IconWrapper=_styled.div.withConfig({componentId:\"sc-1ir7xlr-12\"})([\"\",\";align-items:center;justify-content:center;margin-right:8px;& > img,span{height:\",\";width:\",\";}\",\";\"],function(_ref16){var theme=_ref16.theme;return theme.flexColumnNoWrap;},function(_ref17){var size=_ref17.size;return size?size+'px':'32px';},function(_ref18){var size=_ref18.size;return size?size+'px':'32px';},function(_ref19){var theme=_ref19.theme;return theme.mediaWidth.upToMedium(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    align-items: flex-end;\\n  \"])));});var TransactionListWrapper=_styled.div.withConfig({componentId:\"sc-1ir7xlr-13\"})([\"\",\";\"],function(_ref20){var theme=_ref20.theme;return theme.flexColumnNoWrap;});var WalletAction=_styled(ButtonSecondary).withConfig({componentId:\"sc-1ir7xlr-14\"})([\"width:fit-content;font-weight:400;margin-left:8px;font-size:0.825rem;padding:4px 6px;:hover{cursor:pointer;text-decoration:underline;}\"]);var MainWalletAction=_styled(WalletAction).withConfig({componentId:\"sc-1ir7xlr-15\"})([\"color:\",\";\"],function(_ref21){var theme=_ref21.theme;return theme.primary1;});function renderTransactions(transactions){return/*#__PURE__*/_jsx(TransactionListWrapper,{children:transactions.map(function(hash,i){return/*#__PURE__*/_jsx(Transaction,{hash:hash},i);})});}export default function AccountDetails(_ref22){var toggleWalletModal=_ref22.toggleWalletModal,pendingTransactions=_ref22.pendingTransactions,confirmedTransactions=_ref22.confirmedTransactions,ENSName=_ref22.ENSName,openOptions=_ref22.openOptions;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId,account=_useActiveWeb3React.account,connector=_useActiveWeb3React.connector;var theme=useContext(_ThemeContext);var dispatch=useAppDispatch();function formatConnectorName(){var _window=window,ethereum=_window.ethereum;var isMetaMask=!!(ethereum&&ethereum.isMetaMask);var name=Object.keys(SUPPORTED_WALLETS).filter(function(k){return SUPPORTED_WALLETS[k].connector===connector&&(connector!==injected||isMetaMask===(k==='METAMASK'));}).map(function(k){return SUPPORTED_WALLETS[k].name;})[0];return/*#__PURE__*/_jsx(WalletName,{children:/*#__PURE__*/_jsx(Trans,{id:\"Connected with {name}\",values:{name:name}})});}function getStatusIcon(){if(connector===injected){return/*#__PURE__*/_jsx(IconWrapper,{size:16,children:/*#__PURE__*/_jsx(Identicon,{})});}else if(connector===walletconnect){return/*#__PURE__*/_jsx(IconWrapper,{size:16,children:/*#__PURE__*/_jsx(\"img\",{src:WalletConnectIcon,alt:'WalletConnect logo'})});}else if(connector===walletlink){return/*#__PURE__*/_jsx(IconWrapper,{size:16,children:/*#__PURE__*/_jsx(\"img\",{src:CoinbaseWalletIcon,alt:'Coinbase Wallet logo'})});}else if(connector===fortmatic){return/*#__PURE__*/_jsx(IconWrapper,{size:16,children:/*#__PURE__*/_jsx(\"img\",{src:FortmaticIcon,alt:'Fortmatic logo'})});}else if(connector===portis){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(IconWrapper,{size:16,children:[/*#__PURE__*/_jsx(\"img\",{src:PortisIcon,alt:'Portis logo'}),/*#__PURE__*/_jsx(MainWalletAction,{onClick:function onClick(){portis.portis.showPortis();},children:/*#__PURE__*/_jsx(Trans,{id:\"Show Portis\"})})]})});}return null;}var clearAllTransactionsCallback=useCallback(function(){if(chainId)dispatch(clearAllTransactions({chainId:chainId}));},[dispatch,chainId]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(UpperSection,{children:[/*#__PURE__*/_jsx(CloseIcon,{onClick:toggleWalletModal,children:/*#__PURE__*/_jsx(CloseColor,{})}),/*#__PURE__*/_jsx(HeaderRow,{children:/*#__PURE__*/_jsx(Trans,{id:\"Account\"})}),/*#__PURE__*/_jsx(AccountSection,{children:/*#__PURE__*/_jsx(YourAccount,{children:/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsxs(AccountGroupingRow,{children:[formatConnectorName(),/*#__PURE__*/_jsxs(\"div\",{children:[connector!==injected&&connector!==walletlink&&/*#__PURE__*/_jsx(WalletAction,{style:{fontSize:'.825rem',fontWeight:400,marginRight:'8px'},onClick:function onClick(){;connector.close();},children:/*#__PURE__*/_jsx(Trans,{id:\"Disconnect\"})}),/*#__PURE__*/_jsx(WalletAction,{style:{fontSize:'.825rem',fontWeight:400},onClick:function onClick(){openOptions();},children:/*#__PURE__*/_jsx(Trans,{id:\"Change\"})})]})]}),/*#__PURE__*/_jsx(AccountGroupingRow,{id:\"web3-account-identifier-row\",children:/*#__PURE__*/_jsx(AccountControl,{children:ENSName?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{children:[getStatusIcon(),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",ENSName]})]})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{children:[getStatusIcon(),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",account&&shortenAddress(account)]})]})})})}),/*#__PURE__*/_jsx(AccountGroupingRow,{children:ENSName?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(AccountControl,{children:/*#__PURE__*/_jsxs(\"div\",{children:[account&&/*#__PURE__*/_jsx(Copy,{toCopy:account,children:/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'4px'},children:/*#__PURE__*/_jsx(Trans,{id:\"Copy Address\"})})}),chainId&&account&&/*#__PURE__*/_jsxs(AddressLink,{hasENS:!!ENSName,isENS:true,href:getExplorerLink(chainId,ENSName,ExplorerDataType.ADDRESS),children:[/*#__PURE__*/_jsx(LinkIcon,{size:16}),/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'4px'},children:/*#__PURE__*/_jsx(Trans,{id:\"View on Explorer\"})})]})]})})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(AccountControl,{children:/*#__PURE__*/_jsxs(\"div\",{children:[account&&/*#__PURE__*/_jsx(Copy,{toCopy:account,children:/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'4px'},children:/*#__PURE__*/_jsx(Trans,{id:\"Copy Address\"})})}),chainId&&account&&/*#__PURE__*/_jsxs(AddressLink,{hasENS:!!ENSName,isENS:false,href:getExplorerLink(chainId,account,ExplorerDataType.ADDRESS),children:[/*#__PURE__*/_jsx(LinkIcon,{size:16}),/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'4px'},children:/*#__PURE__*/_jsx(Trans,{id:\"View on Explorer\"})})]})]})})})})]})})})]}),!!pendingTransactions.length||!!confirmedTransactions.length?/*#__PURE__*/_jsxs(LowerSection,{children:[/*#__PURE__*/_jsxs(AutoRow,{mb:'1rem',style:{justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(TYPE.body,{children:/*#__PURE__*/_jsx(Trans,{id:\"Recent Transactions\"})}),/*#__PURE__*/_jsx(LinkStyledButton,{onClick:clearAllTransactionsCallback,children:/*#__PURE__*/_jsx(Trans,{id:\"(clear all)\"})})]}),renderTransactions(pendingTransactions),renderTransactions(confirmedTransactions)]}):/*#__PURE__*/_jsx(LowerSection,{children:/*#__PURE__*/_jsx(TYPE.body,{color:theme.text1,children:/*#__PURE__*/_jsx(Trans,{id:\"Your transactions will appear here...\"})})})]});}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/components/AccountDetails/index.tsx"],"names":["useCallback","useContext","SUPPORTED_WALLETS","useActiveWeb3React","clearAllTransactions","shortenAddress","ExplorerDataType","getExplorerLink","AutoRow","Copy","Transaction","injected","walletconnect","walletlink","fortmatic","portis","FortmaticIcon","PortisIcon","Identicon","ButtonSecondary","ExternalLink","LinkIcon","LinkStyledButton","TYPE","useAppDispatch","HeaderRow","styled","div","theme","flexRowNoWrap","props","color","primary1","mediaWidth","upToMedium","UpperSection","InfoCard","bg3","AccountGroupingRow","text1","AccountSection","YourAccount","LowerSection","flexColumnNoWrap","bg2","text3","AccountControl","AddressLink","text2","CloseIcon","CloseColor","Close","text4","WalletName","IconWrapper","size","TransactionListWrapper","WalletAction","MainWalletAction","renderTransactions","transactions","map","hash","i","AccountDetails","toggleWalletModal","pendingTransactions","confirmedTransactions","ENSName","openOptions","chainId","account","connector","ThemeContext","dispatch","formatConnectorName","window","ethereum","isMetaMask","name","Object","keys","filter","k","getStatusIcon","WalletConnectIcon","CoinbaseWalletIcon","showPortis","clearAllTransactionsCallback","fontSize","fontWeight","marginRight","close","marginLeft","ADDRESS","length","justifyContent"],"mappings":"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","sourcesContent":["import { useCallback, useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components/macro'\nimport { SUPPORTED_WALLETS } from '../../constants/wallet'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { clearAllTransactions } from '../../state/transactions/actions'\nimport { shortenAddress } from '../../utils'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { AutoRow } from '../Row'\nimport Copy from './Copy'\nimport Transaction from './Transaction'\n\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { injected, walletconnect, walletlink, fortmatic, portis } from '../../connectors'\nimport CoinbaseWalletIcon from '../../assets/images/coinbaseWalletIcon.svg'\nimport WalletConnectIcon from '../../assets/images/walletConnectIcon.svg'\nimport FortmaticIcon from '../../assets/images/fortmaticIcon.png'\nimport PortisIcon from '../../assets/images/portisIcon.png'\nimport Identicon from '../Identicon'\nimport { ButtonSecondary } from '../Button'\nimport { ExternalLink as LinkIcon } from 'react-feather'\nimport { ExternalLink, LinkStyledButton, TYPE } from '../../theme'\nimport { Trans } from '@lingui/macro'\nimport { useAppDispatch } from 'state/hooks'\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst InfoCard = styled.div`\n  padding: 1rem;\n  border: 1px solid ${({ theme }) => theme.bg3};\n  border-radius: 20px;\n  position: relative;\n  display: grid;\n  grid-row-gap: 12px;\n  margin-bottom: 20px;\n`\n\nconst AccountGroupingRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 400;\n  color: ${({ theme }) => theme.text1};\n\n  div {\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n  }\n`\n\nconst AccountSection = styled.div`\n  padding: 0rem 1rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0rem 1rem 1.5rem 1rem;`};\n`\n\nconst YourAccount = styled.div`\n  h5 {\n    margin: 0 0 1rem 0;\n    font-weight: 400;\n  }\n\n  h4 {\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst LowerSection = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  padding: 1.5rem;\n  flex-grow: 1;\n  overflow: auto;\n  background-color: ${({ theme }) => theme.bg2};\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  h5 {\n    margin: 0;\n    font-weight: 400;\n    color: ${({ theme }) => theme.text3};\n  }\n`\n\nconst AccountControl = styled.div`\n  display: flex;\n  justify-content: space-between;\n  min-width: 0;\n  width: 100%;\n\n  font-weight: 500;\n  font-size: 1.25rem;\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  p {\n    min-width: 0;\n    margin: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`\n\nconst AddressLink = styled(ExternalLink)<{ hasENS: boolean; isENS: boolean }>`\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.text3};\n  margin-left: 1rem;\n  font-size: 0.825rem;\n  display: flex;\n  :hover {\n    color: ${({ theme }) => theme.text2};\n  }\n`\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`\n\nconst WalletName = styled.div`\n  width: initial;\n  font-size: 0.825rem;\n  font-weight: 500;\n  color: ${({ theme }) => theme.text3};\n`\n\nconst IconWrapper = styled.div<{ size?: number }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  & > img,\n  span {\n    height: ${({ size }) => (size ? size + 'px' : '32px')};\n    width: ${({ size }) => (size ? size + 'px' : '32px')};\n  }\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`\n\nconst TransactionListWrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n`\n\nconst WalletAction = styled(ButtonSecondary)`\n  width: fit-content;\n  font-weight: 400;\n  margin-left: 8px;\n  font-size: 0.825rem;\n  padding: 4px 6px;\n  :hover {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n`\n\nconst MainWalletAction = styled(WalletAction)`\n  color: ${({ theme }) => theme.primary1};\n`\n\nfunction renderTransactions(transactions: string[]) {\n  return (\n    <TransactionListWrapper>\n      {transactions.map((hash, i) => {\n        return <Transaction key={i} hash={hash} />\n      })}\n    </TransactionListWrapper>\n  )\n}\n\ninterface AccountDetailsProps {\n  toggleWalletModal: () => void\n  pendingTransactions: string[]\n  confirmedTransactions: string[]\n  ENSName?: string\n  openOptions: () => void\n}\n\nexport default function AccountDetails({\n  toggleWalletModal,\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n  openOptions,\n}: AccountDetailsProps) {\n  const { chainId, account, connector } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n  const dispatch = useAppDispatch()\n\n  function formatConnectorName() {\n    const { ethereum } = window\n    const isMetaMask = !!(ethereum && ethereum.isMetaMask)\n    const name = Object.keys(SUPPORTED_WALLETS)\n      .filter(\n        (k) =>\n          SUPPORTED_WALLETS[k].connector === connector && (connector !== injected || isMetaMask === (k === 'METAMASK'))\n      )\n      .map((k) => SUPPORTED_WALLETS[k].name)[0]\n    return (\n      <WalletName>\n        <Trans>Connected with {name}</Trans>\n      </WalletName>\n    )\n  }\n\n  function getStatusIcon() {\n    if (connector === injected) {\n      return (\n        <IconWrapper size={16}>\n          <Identicon />\n        </IconWrapper>\n      )\n    } else if (connector === walletconnect) {\n      return (\n        <IconWrapper size={16}>\n          <img src={WalletConnectIcon} alt={'WalletConnect logo'} />\n        </IconWrapper>\n      )\n    } else if (connector === walletlink) {\n      return (\n        <IconWrapper size={16}>\n          <img src={CoinbaseWalletIcon} alt={'Coinbase Wallet logo'} />\n        </IconWrapper>\n      )\n    } else if (connector === fortmatic) {\n      return (\n        <IconWrapper size={16}>\n          <img src={FortmaticIcon} alt={'Fortmatic logo'} />\n        </IconWrapper>\n      )\n    } else if (connector === portis) {\n      return (\n        <>\n          <IconWrapper size={16}>\n            <img src={PortisIcon} alt={'Portis logo'} />\n            <MainWalletAction\n              onClick={() => {\n                portis.portis.showPortis()\n              }}\n            >\n              <Trans>Show Portis</Trans>\n            </MainWalletAction>\n          </IconWrapper>\n        </>\n      )\n    }\n    return null\n  }\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <>\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        <HeaderRow>\n          <Trans>Account</Trans>\n        </HeaderRow>\n        <AccountSection>\n          <YourAccount>\n            <InfoCard>\n              <AccountGroupingRow>\n                {formatConnectorName()}\n                <div>\n                  {connector !== injected && connector !== walletlink && (\n                    <WalletAction\n                      style={{ fontSize: '.825rem', fontWeight: 400, marginRight: '8px' }}\n                      onClick={() => {\n                        ;(connector as any).close()\n                      }}\n                    >\n                      <Trans>Disconnect</Trans>\n                    </WalletAction>\n                  )}\n                  <WalletAction\n                    style={{ fontSize: '.825rem', fontWeight: 400 }}\n                    onClick={() => {\n                      openOptions()\n                    }}\n                  >\n                    <Trans>Change</Trans>\n                  </WalletAction>\n                </div>\n              </AccountGroupingRow>\n              <AccountGroupingRow id=\"web3-account-identifier-row\">\n                <AccountControl>\n                  {ENSName ? (\n                    <>\n                      <div>\n                        {getStatusIcon()}\n                        <p> {ENSName}</p>\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <div>\n                        {getStatusIcon()}\n                        <p> {account && shortenAddress(account)}</p>\n                      </div>\n                    </>\n                  )}\n                </AccountControl>\n              </AccountGroupingRow>\n              <AccountGroupingRow>\n                {ENSName ? (\n                  <>\n                    <AccountControl>\n                      <div>\n                        {account && (\n                          <Copy toCopy={account}>\n                            <span style={{ marginLeft: '4px' }}>\n                              <Trans>Copy Address</Trans>\n                            </span>\n                          </Copy>\n                        )}\n                        {chainId && account && (\n                          <AddressLink\n                            hasENS={!!ENSName}\n                            isENS={true}\n                            href={getExplorerLink(chainId, ENSName, ExplorerDataType.ADDRESS)}\n                          >\n                            <LinkIcon size={16} />\n                            <span style={{ marginLeft: '4px' }}>\n                              <Trans>View on Explorer</Trans>\n                            </span>\n                          </AddressLink>\n                        )}\n                      </div>\n                    </AccountControl>\n                  </>\n                ) : (\n                  <>\n                    <AccountControl>\n                      <div>\n                        {account && (\n                          <Copy toCopy={account}>\n                            <span style={{ marginLeft: '4px' }}>\n                              <Trans>Copy Address</Trans>\n                            </span>\n                          </Copy>\n                        )}\n                        {chainId && account && (\n                          <AddressLink\n                            hasENS={!!ENSName}\n                            isENS={false}\n                            href={getExplorerLink(chainId, account, ExplorerDataType.ADDRESS)}\n                          >\n                            <LinkIcon size={16} />\n                            <span style={{ marginLeft: '4px' }}>\n                              <Trans>View on Explorer</Trans>\n                            </span>\n                          </AddressLink>\n                        )}\n                      </div>\n                    </AccountControl>\n                  </>\n                )}\n              </AccountGroupingRow>\n            </InfoCard>\n          </YourAccount>\n        </AccountSection>\n      </UpperSection>\n      {!!pendingTransactions.length || !!confirmedTransactions.length ? (\n        <LowerSection>\n          <AutoRow mb={'1rem'} style={{ justifyContent: 'space-between' }}>\n            <TYPE.body>\n              <Trans>Recent Transactions</Trans>\n            </TYPE.body>\n            <LinkStyledButton onClick={clearAllTransactionsCallback}>\n              <Trans>(clear all)</Trans>\n            </LinkStyledButton>\n          </AutoRow>\n          {renderTransactions(pendingTransactions)}\n          {renderTransactions(confirmedTransactions)}\n        </LowerSection>\n      ) : (\n        <LowerSection>\n          <TYPE.body color={theme.text1}>\n            <Trans>Your transactions will appear here...</Trans>\n          </TYPE.body>\n        </LowerSection>\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}