{"ast":null,"code":"import{L2_CHAIN_IDS}from'constants/chains';import{L2_DEADLINE_FROM_NOW}from'constants/misc';import{useMemo}from'react';import{useAppSelector}from'state/hooks';import useCurrentBlockTimestamp from'./useCurrentBlockTimestamp';import{useActiveWeb3React}from'./web3';// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var ttl=useAppSelector(function(state){return state.user.userDeadline;});var blockTimestamp=useCurrentBlockTimestamp();return useMemo(function(){if(blockTimestamp&&chainId&&L2_CHAIN_IDS.includes(chainId))return blockTimestamp.add(L2_DEADLINE_FROM_NOW);if(blockTimestamp&&ttl)return blockTimestamp.add(ttl);return undefined;},[blockTimestamp,chainId,ttl]);}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/useTransactionDeadline.ts"],"names":["L2_CHAIN_IDS","L2_DEADLINE_FROM_NOW","useMemo","useAppSelector","useCurrentBlockTimestamp","useActiveWeb3React","useTransactionDeadline","chainId","ttl","state","user","userDeadline","blockTimestamp","includes","add","undefined"],"mappings":"AAAA,OAASA,YAAT,KAA6B,kBAA7B,CACA,OAASC,oBAAT,KAAqC,gBAArC,CAEA,OAASC,OAAT,KAAwB,OAAxB,CACA,OAASC,cAAT,KAA+B,aAA/B,CACA,MAAOC,CAAAA,wBAAP,KAAqC,4BAArC,CACA,OAASC,kBAAT,KAAmC,QAAnC,CAEA;AACA,cAAe,SAASC,CAAAA,sBAAT,EAAyD,CACtE,wBAAoBD,kBAAkB,EAAtC,CAAQE,OAAR,qBAAQA,OAAR,CACA,GAAMC,CAAAA,GAAG,CAAGL,cAAc,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWC,YAAtB,EAAD,CAA1B,CACA,GAAMC,CAAAA,cAAc,CAAGR,wBAAwB,EAA/C,CACA,MAAOF,CAAAA,OAAO,CAAC,UAAM,CACnB,GAAIU,cAAc,EAAIL,OAAlB,EAA6BP,YAAY,CAACa,QAAb,CAAsBN,OAAtB,CAAjC,CAAiE,MAAOK,CAAAA,cAAc,CAACE,GAAf,CAAmBb,oBAAnB,CAAP,CACjE,GAAIW,cAAc,EAAIJ,GAAtB,CAA2B,MAAOI,CAAAA,cAAc,CAACE,GAAf,CAAmBN,GAAnB,CAAP,CAC3B,MAAOO,CAAAA,SAAP,CACD,CAJa,CAIX,CAACH,cAAD,CAAiBL,OAAjB,CAA0BC,GAA1B,CAJW,CAAd,CAKD","sourcesContent":["import { L2_CHAIN_IDS } from 'constants/chains'\nimport { L2_DEADLINE_FROM_NOW } from 'constants/misc'\nimport { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useAppSelector } from 'state/hooks'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\nimport { useActiveWeb3React } from './web3'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const { chainId } = useActiveWeb3React()\n  const ttl = useAppSelector((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && chainId && L2_CHAIN_IDS.includes(chainId)) return blockTimestamp.add(L2_DEADLINE_FROM_NOW)\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, chainId, ttl])\n}\n"]},"metadata":{},"sourceType":"module"}