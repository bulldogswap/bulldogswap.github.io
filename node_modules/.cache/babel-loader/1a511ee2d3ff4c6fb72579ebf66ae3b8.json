{"ast":null,"code":"import _slicedToArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{max,scaleLinear}from'd3';import{useEffect,useMemo,useRef,useState}from'react';import{Bound}from'state/mint/v3/actions';import{Area}from'./Area';import{AxisBottom}from'./AxisBottom';import{Brush}from'./Brush';import{Line}from'./Line';import Zoom,{ZoomOverlay}from'./Zoom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var xAccessor=function xAccessor(d){return d.price0;};export var yAccessor=function yAccessor(d){return d.activeLiquidity;};export function Chart(_ref){var _ref$id=_ref.id,id=_ref$id===void 0?'liquidityChartRangeInput':_ref$id,_ref$data=_ref.data,series=_ref$data.series,current=_ref$data.current,ticksAtLimit=_ref.ticksAtLimit,styles=_ref.styles,_ref$dimensions=_ref.dimensions,width=_ref$dimensions.width,height=_ref$dimensions.height,margins=_ref.margins,_ref$interactive=_ref.interactive,interactive=_ref$interactive===void 0?true:_ref$interactive,brushDomain=_ref.brushDomain,brushLabels=_ref.brushLabels,onBrushDomainChange=_ref.onBrushDomainChange,zoomLevels=_ref.zoomLevels;var zoomRef=useRef(null);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),zoom=_useState2[0],setZoom=_useState2[1];var _useMemo=useMemo(function(){return[height-margins.top-margins.bottom,width-margins.left-margins.right];},[width,height,margins]),_useMemo2=_slicedToArray(_useMemo,2),innerHeight=_useMemo2[0],innerWidth=_useMemo2[1];var _useMemo3=useMemo(function(){var scales={xScale:scaleLinear().domain([current*zoomLevels.initialMin,current*zoomLevels.initialMax]).range([0,innerWidth]),yScale:scaleLinear().domain([0,max(series,yAccessor)]).range([innerHeight,0])};if(zoom){var newXscale=zoom.rescaleX(scales.xScale);scales.xScale.domain(newXscale.domain());}return scales;},[current,zoomLevels.initialMin,zoomLevels.initialMax,innerWidth,series,innerHeight,zoom]),xScale=_useMemo3.xScale,yScale=_useMemo3.yScale;useEffect(function(){// reset zoom as necessary\nsetZoom(null);},[zoomLevels]);useEffect(function(){if(!brushDomain){onBrushDomainChange(xScale.domain(),undefined);}},[brushDomain,onBrushDomainChange,xScale]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Zoom,{svg:zoomRef.current,xScale:xScale,setZoom:setZoom,width:innerWidth,height:// allow zooming inside the x-axis\nheight,resetBrush:function resetBrush(){onBrushDomainChange([current*zoomLevels.initialMin,current*zoomLevels.initialMax],'reset');},showResetButton:Boolean(ticksAtLimit[Bound.LOWER]||ticksAtLimit[Bound.UPPER]),zoomLevels:zoomLevels}),/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",height:\"100%\",viewBox:\"0 0 \".concat(width,\" \").concat(height),style:{overflow:'visible'},children:[/*#__PURE__*/_jsxs(\"defs\",{children:[/*#__PURE__*/_jsx(\"clipPath\",{id:\"\".concat(id,\"-chart-clip\"),children:/*#__PURE__*/_jsx(\"rect\",{x:\"0\",y:\"0\",width:innerWidth,height:height})}),brushDomain&&/*#__PURE__*/ // mask to highlight selected area\n_jsx(\"mask\",{id:\"\".concat(id,\"-chart-area-mask\"),children:/*#__PURE__*/_jsx(\"rect\",{fill:\"white\",x:xScale(brushDomain[0]),y:\"0\",width:xScale(brushDomain[1])-xScale(brushDomain[0]),height:innerHeight})})]}),/*#__PURE__*/_jsxs(\"g\",{transform:\"translate(\".concat(margins.left,\",\").concat(margins.top,\")\"),children:[/*#__PURE__*/_jsxs(\"g\",{clipPath:\"url(#\".concat(id,\"-chart-clip)\"),children:[/*#__PURE__*/_jsx(Area,{series:series,xScale:xScale,yScale:yScale,xValue:xAccessor,yValue:yAccessor}),brushDomain&&/*#__PURE__*/ // duplicate area chart with mask for selected area\n_jsx(\"g\",{mask:\"url(#\".concat(id,\"-chart-area-mask)\"),children:/*#__PURE__*/_jsx(Area,{series:series,xScale:xScale,yScale:yScale,xValue:xAccessor,yValue:yAccessor,fill:styles.area.selection})}),/*#__PURE__*/_jsx(Line,{value:current,xScale:xScale,innerHeight:innerHeight}),/*#__PURE__*/_jsx(AxisBottom,{xScale:xScale,innerHeight:innerHeight})]}),/*#__PURE__*/_jsx(ZoomOverlay,{width:innerWidth,height:height,ref:zoomRef}),/*#__PURE__*/_jsx(Brush,{id:id,xScale:xScale,interactive:interactive,brushLabelValue:brushLabels,brushExtent:brushDomain!==null&&brushDomain!==void 0?brushDomain:xScale.domain(),innerWidth:innerWidth,innerHeight:innerHeight,setBrushExtent:onBrushDomainChange,westHandleColor:styles.brush.handle.west,eastHandleColor:styles.brush.handle.east})]})]})]});}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/components/LiquidityChartRangeInput/Chart.tsx"],"names":["max","scaleLinear","useEffect","useMemo","useRef","useState","Bound","Area","AxisBottom","Brush","Line","Zoom","ZoomOverlay","xAccessor","d","price0","yAccessor","activeLiquidity","Chart","id","data","series","current","ticksAtLimit","styles","dimensions","width","height","margins","interactive","brushDomain","brushLabels","onBrushDomainChange","zoomLevels","zoomRef","zoom","setZoom","top","bottom","left","right","innerHeight","innerWidth","scales","xScale","domain","initialMin","initialMax","range","yScale","newXscale","rescaleX","undefined","Boolean","LOWER","UPPER","overflow","area","selection","brush","handle","west","east"],"mappings":"wLAAA,OAASA,GAAT,CAAcC,WAAd,KAAgD,IAAhD,CACA,OAASC,SAAT,CAAoBC,OAApB,CAA6BC,MAA7B,CAAqCC,QAArC,KAAqD,OAArD,CACA,OAASC,KAAT,KAAsB,uBAAtB,CACA,OAASC,IAAT,KAAqB,QAArB,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,KAAT,KAAsB,SAAtB,CACA,OAASC,IAAT,KAAqB,QAArB,CAEA,MAAOC,CAAAA,IAAP,EAAeC,WAAf,KAAkC,QAAlC,C,6IAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,CAAD,QAAmBA,CAAAA,CAAC,CAACC,MAArB,EAAlB,CACP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACF,CAAD,QAAmBA,CAAAA,CAAC,CAACG,eAArB,EAAlB,CAEP,MAAO,SAASC,CAAAA,KAAT,MAY2B,kBAXhCC,EAWgC,CAXhCA,EAWgC,kBAX3B,0BAW2B,wBAVhCC,IAUgC,CAVxBC,MAUwB,WAVxBA,MAUwB,CAVhBC,OAUgB,WAVhBA,OAUgB,CAThCC,YASgC,MAThCA,YASgC,CARhCC,MAQgC,MARhCA,MAQgC,sBAPhCC,UAOgC,CAPlBC,KAOkB,iBAPlBA,KAOkB,CAPXC,MAOW,iBAPXA,MAOW,CANhCC,OAMgC,MANhCA,OAMgC,uBALhCC,WAKgC,CALhCA,WAKgC,2BALlB,IAKkB,kBAJhCC,WAIgC,MAJhCA,WAIgC,CAHhCC,WAGgC,MAHhCA,WAGgC,CAFhCC,mBAEgC,MAFhCA,mBAEgC,CADhCC,UACgC,MADhCA,UACgC,CAChC,GAAMC,CAAAA,OAAO,CAAG9B,MAAM,CAAwB,IAAxB,CAAtB,CAEA,cAAwBC,QAAQ,CAAuB,IAAvB,CAAhC,wCAAO8B,IAAP,eAAaC,OAAb,eAEA,aAAkCjC,OAAO,CACvC,iBAAM,CAACwB,MAAM,CAAGC,OAAO,CAACS,GAAjB,CAAuBT,OAAO,CAACU,MAAhC,CAAwCZ,KAAK,CAAGE,OAAO,CAACW,IAAhB,CAAuBX,OAAO,CAACY,KAAvE,CAAN,EADuC,CAEvC,CAACd,KAAD,CAAQC,MAAR,CAAgBC,OAAhB,CAFuC,CAAzC,sCAAOa,WAAP,cAAoBC,UAApB,cAKA,cAA2BvC,OAAO,CAAC,UAAM,CACvC,GAAMwC,CAAAA,MAAM,CAAG,CACbC,MAAM,CAAE3C,WAAW,GAChB4C,MADK,CACE,CAACvB,OAAO,CAAGW,UAAU,CAACa,UAAtB,CAAkCxB,OAAO,CAAGW,UAAU,CAACc,UAAvD,CADF,EAELC,KAFK,CAEC,CAAC,CAAD,CAAIN,UAAJ,CAFD,CADK,CAIbO,MAAM,CAAEhD,WAAW,GAChB4C,MADK,CACE,CAAC,CAAD,CAAI7C,GAAG,CAACqB,MAAD,CAASL,SAAT,CAAP,CADF,EAELgC,KAFK,CAEC,CAACP,WAAD,CAAc,CAAd,CAFD,CAJK,CAAf,CASA,GAAIN,IAAJ,CAAU,CACR,GAAMe,CAAAA,SAAS,CAAGf,IAAI,CAACgB,QAAL,CAAcR,MAAM,CAACC,MAArB,CAAlB,CACAD,MAAM,CAACC,MAAP,CAAcC,MAAd,CAAqBK,SAAS,CAACL,MAAV,EAArB,EACD,CAED,MAAOF,CAAAA,MAAP,CACD,CAhBiC,CAgB/B,CAACrB,OAAD,CAAUW,UAAU,CAACa,UAArB,CAAiCb,UAAU,CAACc,UAA5C,CAAwDL,UAAxD,CAAoErB,MAApE,CAA4EoB,WAA5E,CAAyFN,IAAzF,CAhB+B,CAAlC,CAAQS,MAAR,WAAQA,MAAR,CAAgBK,MAAhB,WAAgBA,MAAhB,CAkBA/C,SAAS,CAAC,UAAM,CACd;AACAkC,OAAO,CAAC,IAAD,CAAP,CACD,CAHQ,CAGN,CAACH,UAAD,CAHM,CAAT,CAKA/B,SAAS,CAAC,UAAM,CACd,GAAI,CAAC4B,WAAL,CAAkB,CAChBE,mBAAmB,CAACY,MAAM,CAACC,MAAP,EAAD,CAAsCO,SAAtC,CAAnB,CACD,CACF,CAJQ,CAIN,CAACtB,WAAD,CAAcE,mBAAd,CAAmCY,MAAnC,CAJM,CAAT,CAMA,mBACE,wCACE,KAAC,IAAD,EACE,GAAG,CAAEV,OAAO,CAACZ,OADf,CAEE,MAAM,CAAEsB,MAFV,CAGE,OAAO,CAAER,OAHX,CAIE,KAAK,CAAEM,UAJT,CAKE,MAAM,CACJ;AACAf,MAPJ,CASE,UAAU,CAAE,qBAAM,CAChBK,mBAAmB,CACjB,CAACV,OAAO,CAAGW,UAAU,CAACa,UAAtB,CAAkCxB,OAAO,CAAGW,UAAU,CAACc,UAAvD,CADiB,CAEjB,OAFiB,CAAnB,CAID,CAdH,CAeE,eAAe,CAAEM,OAAO,CAAC9B,YAAY,CAACjB,KAAK,CAACgD,KAAP,CAAZ,EAA6B/B,YAAY,CAACjB,KAAK,CAACiD,KAAP,CAA1C,CAf1B,CAgBE,UAAU,CAAEtB,UAhBd,EADF,cAmBE,aAAK,KAAK,CAAC,MAAX,CAAkB,MAAM,CAAC,MAAzB,CAAgC,OAAO,eAASP,KAAT,aAAkBC,MAAlB,CAAvC,CAAmE,KAAK,CAAE,CAAE6B,QAAQ,CAAE,SAAZ,CAA1E,wBACE,qCACE,iBAAU,EAAE,WAAKrC,EAAL,eAAZ,uBACE,aAAM,CAAC,CAAC,GAAR,CAAY,CAAC,CAAC,GAAd,CAAkB,KAAK,CAAEuB,UAAzB,CAAqC,MAAM,CAAEf,MAA7C,EADF,EADF,CAKGG,WAAW,gBACV;AACA,aAAM,EAAE,WAAKX,EAAL,oBAAR,uBACE,aACE,IAAI,CAAC,OADP,CAEE,CAAC,CAAEyB,MAAM,CAACd,WAAW,CAAC,CAAD,CAAZ,CAFX,CAGE,CAAC,CAAC,GAHJ,CAIE,KAAK,CAAEc,MAAM,CAACd,WAAW,CAAC,CAAD,CAAZ,CAAN,CAAyBc,MAAM,CAACd,WAAW,CAAC,CAAD,CAAZ,CAJxC,CAKE,MAAM,CAAEW,WALV,EADF,EAPJ,GADF,cAoBE,WAAG,SAAS,qBAAeb,OAAO,CAACW,IAAvB,aAA+BX,OAAO,CAACS,GAAvC,KAAZ,wBACE,WAAG,QAAQ,gBAAUlB,EAAV,gBAAX,wBACE,KAAC,IAAD,EAAM,MAAM,CAAEE,MAAd,CAAsB,MAAM,CAAEuB,MAA9B,CAAsC,MAAM,CAAEK,MAA9C,CAAsD,MAAM,CAAEpC,SAA9D,CAAyE,MAAM,CAAEG,SAAjF,EADF,CAGGc,WAAW,gBACV;AACA,UAAG,IAAI,gBAAUX,EAAV,qBAAP,uBACE,KAAC,IAAD,EACE,MAAM,CAAEE,MADV,CAEE,MAAM,CAAEuB,MAFV,CAGE,MAAM,CAAEK,MAHV,CAIE,MAAM,CAAEpC,SAJV,CAKE,MAAM,CAAEG,SALV,CAME,IAAI,CAAEQ,MAAM,CAACiC,IAAP,CAAYC,SANpB,EADF,EALJ,cAiBE,KAAC,IAAD,EAAM,KAAK,CAAEpC,OAAb,CAAsB,MAAM,CAAEsB,MAA9B,CAAsC,WAAW,CAAEH,WAAnD,EAjBF,cAmBE,KAAC,UAAD,EAAY,MAAM,CAAEG,MAApB,CAA4B,WAAW,CAAEH,WAAzC,EAnBF,GADF,cAuBE,KAAC,WAAD,EAAa,KAAK,CAAEC,UAApB,CAAgC,MAAM,CAAEf,MAAxC,CAAgD,GAAG,CAAEO,OAArD,EAvBF,cAyBE,KAAC,KAAD,EACE,EAAE,CAAEf,EADN,CAEE,MAAM,CAAEyB,MAFV,CAGE,WAAW,CAAEf,WAHf,CAIE,eAAe,CAAEE,WAJnB,CAKE,WAAW,CAAED,WAAF,SAAEA,WAAF,UAAEA,WAAF,CAAkBc,MAAM,CAACC,MAAP,EAL/B,CAME,UAAU,CAAEH,UANd,CAOE,WAAW,CAAED,WAPf,CAQE,cAAc,CAAET,mBARlB,CASE,eAAe,CAAER,MAAM,CAACmC,KAAP,CAAaC,MAAb,CAAoBC,IATvC,CAUE,eAAe,CAAErC,MAAM,CAACmC,KAAP,CAAaC,MAAb,CAAoBE,IAVvC,EAzBF,GApBF,GAnBF,GADF,CAiFD","sourcesContent":["import { max, scaleLinear, ZoomTransform } from 'd3'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\nimport { Area } from './Area'\nimport { AxisBottom } from './AxisBottom'\nimport { Brush } from './Brush'\nimport { Line } from './Line'\nimport { ChartEntry, LiquidityChartRangeInputProps } from './types'\nimport Zoom, { ZoomOverlay } from './Zoom'\n\nexport const xAccessor = (d: ChartEntry) => d.price0\nexport const yAccessor = (d: ChartEntry) => d.activeLiquidity\n\nexport function Chart({\n  id = 'liquidityChartRangeInput',\n  data: { series, current },\n  ticksAtLimit,\n  styles,\n  dimensions: { width, height },\n  margins,\n  interactive = true,\n  brushDomain,\n  brushLabels,\n  onBrushDomainChange,\n  zoomLevels,\n}: LiquidityChartRangeInputProps) {\n  const zoomRef = useRef<SVGRectElement | null>(null)\n\n  const [zoom, setZoom] = useState<ZoomTransform | null>(null)\n\n  const [innerHeight, innerWidth] = useMemo(\n    () => [height - margins.top - margins.bottom, width - margins.left - margins.right],\n    [width, height, margins]\n  )\n\n  const { xScale, yScale } = useMemo(() => {\n    const scales = {\n      xScale: scaleLinear()\n        .domain([current * zoomLevels.initialMin, current * zoomLevels.initialMax] as number[])\n        .range([0, innerWidth]),\n      yScale: scaleLinear()\n        .domain([0, max(series, yAccessor)] as number[])\n        .range([innerHeight, 0]),\n    }\n\n    if (zoom) {\n      const newXscale = zoom.rescaleX(scales.xScale)\n      scales.xScale.domain(newXscale.domain())\n    }\n\n    return scales\n  }, [current, zoomLevels.initialMin, zoomLevels.initialMax, innerWidth, series, innerHeight, zoom])\n\n  useEffect(() => {\n    // reset zoom as necessary\n    setZoom(null)\n  }, [zoomLevels])\n\n  useEffect(() => {\n    if (!brushDomain) {\n      onBrushDomainChange(xScale.domain() as [number, number], undefined)\n    }\n  }, [brushDomain, onBrushDomainChange, xScale])\n\n  return (\n    <>\n      <Zoom\n        svg={zoomRef.current}\n        xScale={xScale}\n        setZoom={setZoom}\n        width={innerWidth}\n        height={\n          // allow zooming inside the x-axis\n          height\n        }\n        resetBrush={() => {\n          onBrushDomainChange(\n            [current * zoomLevels.initialMin, current * zoomLevels.initialMax] as [number, number],\n            'reset'\n          )\n        }}\n        showResetButton={Boolean(ticksAtLimit[Bound.LOWER] || ticksAtLimit[Bound.UPPER])}\n        zoomLevels={zoomLevels}\n      />\n      <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`} style={{ overflow: 'visible' }}>\n        <defs>\n          <clipPath id={`${id}-chart-clip`}>\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={height} />\n          </clipPath>\n\n          {brushDomain && (\n            // mask to highlight selected area\n            <mask id={`${id}-chart-area-mask`}>\n              <rect\n                fill=\"white\"\n                x={xScale(brushDomain[0])}\n                y=\"0\"\n                width={xScale(brushDomain[1]) - xScale(brushDomain[0])}\n                height={innerHeight}\n              />\n            </mask>\n          )}\n        </defs>\n\n        <g transform={`translate(${margins.left},${margins.top})`}>\n          <g clipPath={`url(#${id}-chart-clip)`}>\n            <Area series={series} xScale={xScale} yScale={yScale} xValue={xAccessor} yValue={yAccessor} />\n\n            {brushDomain && (\n              // duplicate area chart with mask for selected area\n              <g mask={`url(#${id}-chart-area-mask)`}>\n                <Area\n                  series={series}\n                  xScale={xScale}\n                  yScale={yScale}\n                  xValue={xAccessor}\n                  yValue={yAccessor}\n                  fill={styles.area.selection}\n                />\n              </g>\n            )}\n\n            <Line value={current} xScale={xScale} innerHeight={innerHeight} />\n\n            <AxisBottom xScale={xScale} innerHeight={innerHeight} />\n          </g>\n\n          <ZoomOverlay width={innerWidth} height={height} ref={zoomRef} />\n\n          <Brush\n            id={id}\n            xScale={xScale}\n            interactive={interactive}\n            brushLabelValue={brushLabels}\n            brushExtent={brushDomain ?? (xScale.domain() as [number, number])}\n            innerWidth={innerWidth}\n            innerHeight={innerHeight}\n            setBrushExtent={onBrushDomainChange}\n            westHandleColor={styles.brush.handle.west}\n            eastHandleColor={styles.brush.handle.east}\n          />\n        </g>\n      </svg>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}