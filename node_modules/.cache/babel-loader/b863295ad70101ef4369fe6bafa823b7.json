{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{MaxUint256}from'@ethersproject/constants';import{Trade as V2Trade}from'@uniswap/v2-sdk';import{Trade as V3Trade}from'@uniswap/v3-sdk';import{useCallback,useMemo}from'react';import{SWAP_ROUTER_ADDRESSES,V2_ROUTER_ADDRESS}from'../constants/addresses';import{useTransactionAdder,useHasPendingApproval}from'../state/transactions/hooks';import{calculateGasMargin}from'../utils/calculateGasMargin';import{useTokenContract}from'./useContract';import{useActiveWeb3React}from'./web3';import{useTokenAllowance}from'./useTokenAllowance';export var ApprovalState;// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\n(function(ApprovalState){ApprovalState[\"UNKNOWN\"]=\"UNKNOWN\";ApprovalState[\"NOT_APPROVED\"]=\"NOT_APPROVED\";ApprovalState[\"PENDING\"]=\"PENDING\";ApprovalState[\"APPROVED\"]=\"APPROVED\";})(ApprovalState||(ApprovalState={}));export function useApproveCallback(amountToApprove,spender){var _amountToApprove$curr;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId;var token=(amountToApprove===null||amountToApprove===void 0?void 0:(_amountToApprove$curr=amountToApprove.currency)===null||_amountToApprove$curr===void 0?void 0:_amountToApprove$curr.isToken)?amountToApprove.currency:undefined;var currentAllowance=useTokenAllowance(token,account!==null&&account!==void 0?account:undefined,spender);var pendingApproval=useHasPendingApproval(token===null||token===void 0?void 0:token.address,spender);// check the current approval status\nvar approvalState=useMemo(function(){if(!amountToApprove||!spender)return ApprovalState.UNKNOWN;if(amountToApprove.currency.isNative)return ApprovalState.APPROVED;// we might not have enough data to know whether or not we need to approve\nif(!currentAllowance)return ApprovalState.UNKNOWN;// amountToApprove will be defined if currentAllowance is\nreturn currentAllowance.lessThan(amountToApprove)?pendingApproval?ApprovalState.PENDING:ApprovalState.NOT_APPROVED:ApprovalState.APPROVED;},[amountToApprove,currentAllowance,pendingApproval,spender]);var tokenContract=useTokenContract(token===null||token===void 0?void 0:token.address);var addTransaction=useTransactionAdder();var approve=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var useExact,estimatedGas;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(approvalState!==ApprovalState.NOT_APPROVED)){_context.next=3;break;}console.error('approve was called unnecessarily');return _context.abrupt(\"return\");case 3:if(chainId){_context.next=6;break;}console.error('no chainId');return _context.abrupt(\"return\");case 6:if(token){_context.next=9;break;}console.error('no token');return _context.abrupt(\"return\");case 9:if(tokenContract){_context.next=12;break;}console.error('tokenContract is null');return _context.abrupt(\"return\");case 12:if(amountToApprove){_context.next=15;break;}console.error('missing amount to approve');return _context.abrupt(\"return\");case 15:if(spender){_context.next=18;break;}console.error('no spender');return _context.abrupt(\"return\");case 18:useExact=false;_context.next=21;return tokenContract.estimateGas.approve(spender,MaxUint256).catch(function(){// general fallback for tokens who restrict approval amounts\nuseExact=true;return tokenContract.estimateGas.approve(spender,amountToApprove.quotient.toString());});case 21:estimatedGas=_context.sent;return _context.abrupt(\"return\",tokenContract.approve(spender,useExact?amountToApprove.quotient.toString():MaxUint256,{gasLimit:calculateGasMargin(chainId,estimatedGas)}).then(function(response){addTransaction(response,{summary:'Approve '+amountToApprove.currency.symbol,approval:{tokenAddress:token.address,spender:spender}});}).catch(function(error){console.debug('Failed to approve token',error);throw error;}));case 23:case\"end\":return _context.stop();}}},_callee);})),[approvalState,token,tokenContract,amountToApprove,spender,addTransaction,chainId]);return[approvalState,approve];}// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade,allowedSlippage){var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;var v3SwapRouterAddress=chainId?SWAP_ROUTER_ADDRESSES[chainId]:undefined;var amountToApprove=useMemo(function(){return trade&&trade.inputAmount.currency.isToken?trade.maximumAmountIn(allowedSlippage):undefined;},[trade,allowedSlippage]);return useApproveCallback(amountToApprove,chainId?trade instanceof V2Trade?V2_ROUTER_ADDRESS[chainId]:trade instanceof V3Trade?v3SwapRouterAddress:undefined:undefined);}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/useApproveCallback.ts"],"names":["MaxUint256","Trade","V2Trade","V3Trade","useCallback","useMemo","SWAP_ROUTER_ADDRESSES","V2_ROUTER_ADDRESS","useTransactionAdder","useHasPendingApproval","calculateGasMargin","useTokenContract","useActiveWeb3React","useTokenAllowance","ApprovalState","useApproveCallback","amountToApprove","spender","account","chainId","token","currency","isToken","undefined","currentAllowance","pendingApproval","address","approvalState","UNKNOWN","isNative","APPROVED","lessThan","PENDING","NOT_APPROVED","tokenContract","addTransaction","approve","console","error","useExact","estimateGas","catch","quotient","toString","estimatedGas","gasLimit","then","response","summary","symbol","approval","tokenAddress","debug","useApproveCallbackFromTrade","trade","allowedSlippage","v3SwapRouterAddress","inputAmount","maximumAmountIn"],"mappings":"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","sourcesContent":["import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { CurrencyAmount, Percent, Currency, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { Trade as V3Trade } from '@uniswap/v3-sdk'\nimport { useCallback, useMemo } from 'react'\nimport { SWAP_ROUTER_ADDRESSES, V2_ROUTER_ADDRESS } from '../constants/addresses'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { calculateGasMargin } from '../utils/calculateGasMargin'\nimport { useTokenContract } from './useContract'\nimport { useActiveWeb3React } from './web3'\nimport { useTokenAllowance } from './useTokenAllowance'\n\nexport enum ApprovalState {\n  UNKNOWN = 'UNKNOWN',\n  NOT_APPROVED = 'NOT_APPROVED',\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount<Currency>,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const { account, chainId } = useActiveWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency.isNative) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!chainId) {\n      console.error('no chainId')\n      return\n    }\n\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString())\n    })\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.quotient.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(chainId, estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: 'Approve ' + amountToApprove.currency.symbol,\n          approval: { tokenAddress: token.address, spender: spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.debug('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, chainId])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(\n  trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | undefined,\n  allowedSlippage: Percent\n) {\n  const { chainId } = useActiveWeb3React()\n  const v3SwapRouterAddress = chainId ? SWAP_ROUTER_ADDRESSES[chainId] : undefined\n  const amountToApprove = useMemo(\n    () => (trade && trade.inputAmount.currency.isToken ? trade.maximumAmountIn(allowedSlippage) : undefined),\n    [trade, allowedSlippage]\n  )\n  return useApproveCallback(\n    amountToApprove,\n    chainId\n      ? trade instanceof V2Trade\n        ? V2_ROUTER_ADDRESS[chainId]\n        : trade instanceof V3Trade\n        ? v3SwapRouterAddress\n        : undefined\n      : undefined\n  )\n}\n"]},"metadata":{},"sourceType":"module"}