{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{BigNumber,utils}from'ethers';// provider.request returns Promise<any>, but wallet_switchEthereumChain must return null or throw\n// see https://github.com/rekmarks/EIPs/blob/3326-create/EIPS/eip-3326.md for more info on wallet_switchEthereumChain\nexport function switchToNetwork(_x){return _switchToNetwork.apply(this,arguments);}function _switchToNetwork(){_switchToNetwork=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var _library$provider;var library,chainId,formattedChainId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:library=_ref.library,chainId=_ref.chainId;if(library===null||library===void 0?void 0:(_library$provider=library.provider)===null||_library$provider===void 0?void 0:_library$provider.request){_context.next=3;break;}return _context.abrupt(\"return\");case 3:formattedChainId=utils.hexStripZeros(BigNumber.from(chainId).toHexString());return _context.abrupt(\"return\",library===null||library===void 0?void 0:library.provider.request({method:'wallet_switchEthereumChain',params:[{chainId:formattedChainId}]}));case 5:case\"end\":return _context.stop();}}},_callee);}));return _switchToNetwork.apply(this,arguments);}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/utils/switchToNetwork.ts"],"names":["BigNumber","utils","switchToNetwork","library","chainId","provider","request","formattedChainId","hexStripZeros","from","toHexString","method","params"],"mappings":"6WACA,OAASA,SAAT,CAAoBC,KAApB,KAAiC,QAAjC,CAQA;AACA;AACA,eAAsBC,CAAAA,eAAtB,oD,qGAAO,kMAAiCC,OAAjC,MAAiCA,OAAjC,CAA0CC,OAA1C,MAA0CA,OAA1C,IACAD,OADA,SACAA,OADA,oCACAA,OAAO,CAAEE,QADT,4CACA,kBAAmBC,OADnB,iEAICC,gBAJD,CAIoBN,KAAK,CAACO,aAAN,CAAoBR,SAAS,CAACS,IAAV,CAAeL,OAAf,EAAwBM,WAAxB,EAApB,CAJpB,iCAKEP,OALF,SAKEA,OALF,iBAKEA,OAAO,CAAEE,QAAT,CAAkBC,OAAlB,CAA0B,CAC/BK,MAAM,CAAE,4BADuB,CAE/BC,MAAM,CAAE,CAAC,CAAER,OAAO,CAAEG,gBAAX,CAAD,CAFuB,CAA1B,CALF,wD","sourcesContent":["import { SupportedChainId } from 'constants/chains'\nimport { BigNumber, utils } from 'ethers'\nimport { Web3Provider } from '@ethersproject/providers'\n\ninterface SwitchNetworkArguments {\n  library: Web3Provider\n  chainId: SupportedChainId\n}\n\n// provider.request returns Promise<any>, but wallet_switchEthereumChain must return null or throw\n// see https://github.com/rekmarks/EIPs/blob/3326-create/EIPS/eip-3326.md for more info on wallet_switchEthereumChain\nexport async function switchToNetwork({ library, chainId }: SwitchNetworkArguments): Promise<null | void> {\n  if (!library?.provider?.request) {\n    return\n  }\n  const formattedChainId = utils.hexStripZeros(BigNumber.from(chainId).toHexString())\n  return library?.provider.request({\n    method: 'wallet_switchEthereumChain',\n    params: [{ chainId: formattedChainId }],\n  })\n}\n"]},"metadata":{},"sourceType":"module"}