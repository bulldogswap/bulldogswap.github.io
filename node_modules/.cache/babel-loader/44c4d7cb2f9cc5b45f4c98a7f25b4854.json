{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import{createSlice}from'@reduxjs/toolkit';import{filterToKey}from'./utils';var slice=createSlice({name:'logs',initialState:{},reducers:{addListener:function addListener(state,_ref){var _ref$payload=_ref.payload,chainId=_ref$payload.chainId,filter=_ref$payload.filter;if(!state[chainId])state[chainId]={};var key=filterToKey(filter);if(!state[chainId][key])state[chainId][key]={listeners:1};else state[chainId][key].listeners++;},fetchingLogs:function fetchingLogs(state,_ref2){var _ref2$payload=_ref2.payload,chainId=_ref2$payload.chainId,filters=_ref2$payload.filters,blockNumber=_ref2$payload.blockNumber;if(!state[chainId])return;var _iterator=_createForOfIteratorHelper(filters),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var filter=_step.value;var key=filterToKey(filter);if(!state[chainId][key])continue;state[chainId][key].fetchingBlockNumber=blockNumber;}}catch(err){_iterator.e(err);}finally{_iterator.f();}},fetchedLogs:function fetchedLogs(state,_ref3){var _ref3$payload=_ref3.payload,chainId=_ref3$payload.chainId,filter=_ref3$payload.filter,results=_ref3$payload.results;if(!state[chainId])return;var key=filterToKey(filter);var fetchState=state[chainId][key];if(!fetchState||fetchState.results&&fetchState.results.blockNumber>results.blockNumber)return;fetchState.results=results;},fetchedLogsError:function fetchedLogsError(state,_ref4){var _ref4$payload=_ref4.payload,chainId=_ref4$payload.chainId,filter=_ref4$payload.filter,blockNumber=_ref4$payload.blockNumber;if(!state[chainId])return;var key=filterToKey(filter);var fetchState=state[chainId][key];if(!fetchState||fetchState.results&&fetchState.results.blockNumber>blockNumber)return;fetchState.results={blockNumber:blockNumber,error:true};},removeListener:function removeListener(state,_ref5){var _ref5$payload=_ref5.payload,chainId=_ref5$payload.chainId,filter=_ref5$payload.filter;if(!state[chainId])return;var key=filterToKey(filter);if(!state[chainId][key])return;state[chainId][key].listeners--;}}});export default slice.reducer;var _slice$actions=slice.actions,addListener=_slice$actions.addListener,removeListener=_slice$actions.removeListener,fetchedLogs=_slice$actions.fetchedLogs,fetchedLogsError=_slice$actions.fetchedLogsError,fetchingLogs=_slice$actions.fetchingLogs;export{addListener,removeListener,fetchedLogs,fetchedLogsError,fetchingLogs};","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/state/logs/slice.ts"],"names":["createSlice","filterToKey","slice","name","initialState","reducers","addListener","state","payload","chainId","filter","key","listeners","fetchingLogs","filters","blockNumber","fetchingBlockNumber","fetchedLogs","results","fetchState","fetchedLogsError","error","removeListener","reducer","actions"],"mappings":"gNAAA,OAASA,WAAT,KAA2C,kBAA3C,CACA,OAAsBC,WAAtB,KAA8C,SAA9C,CAsBA,GAAMC,CAAAA,KAAK,CAAGF,WAAW,CAAC,CACxBG,IAAI,CAAE,MADkB,CAExBC,YAAY,CAAE,EAFU,CAGxBC,QAAQ,CAAE,CACRC,WADQ,sBACIC,KADJ,MACsG,uBAAzFC,OAAyF,CAA9EC,OAA8E,cAA9EA,OAA8E,CAArEC,MAAqE,cAArEA,MAAqE,CAC5G,GAAI,CAACH,KAAK,CAACE,OAAD,CAAV,CAAqBF,KAAK,CAACE,OAAD,CAAL,CAAiB,EAAjB,CACrB,GAAME,CAAAA,GAAG,CAAGV,WAAW,CAACS,MAAD,CAAvB,CACA,GAAI,CAACH,KAAK,CAACE,OAAD,CAAL,CAAeE,GAAf,CAAL,CACEJ,KAAK,CAACE,OAAD,CAAL,CAAeE,GAAf,EAAsB,CACpBC,SAAS,CAAE,CADS,CAAtB,CADF,IAIKL,CAAAA,KAAK,CAACE,OAAD,CAAL,CAAeE,GAAf,EAAoBC,SAApB,GACN,CATO,CAURC,YAVQ,uBAWNN,KAXM,OAeN,yBAFEC,OAEF,CAFaC,OAEb,eAFaA,OAEb,CAFsBK,OAEtB,eAFsBA,OAEtB,CAF+BC,WAE/B,eAF+BA,WAE/B,CACA,GAAI,CAACR,KAAK,CAACE,OAAD,CAAV,CAAqB,OADrB,yCAEqBK,OAFrB,YAEA,+CAA8B,IAAnBJ,CAAAA,MAAmB,aAC5B,GAAMC,CAAAA,GAAG,CAAGV,WAAW,CAACS,MAAD,CAAvB,CACA,GAAI,CAACH,KAAK,CAACE,OAAD,CAAL,CAAeE,GAAf,CAAL,CAA0B,SAC1BJ,KAAK,CAACE,OAAD,CAAL,CAAeE,GAAf,EAAoBK,mBAApB,CAA0CD,WAA1C,CACD,CAND,qDAOD,CAtBO,CAuBRE,WAvBQ,sBAwBNV,KAxBM,OA4BN,yBAFEC,OAEF,CAFaC,OAEb,eAFaA,OAEb,CAFsBC,MAEtB,eAFsBA,MAEtB,CAF8BQ,OAE9B,eAF8BA,OAE9B,CACA,GAAI,CAACX,KAAK,CAACE,OAAD,CAAV,CAAqB,OACrB,GAAME,CAAAA,GAAG,CAAGV,WAAW,CAACS,MAAD,CAAvB,CACA,GAAMS,CAAAA,UAAU,CAAGZ,KAAK,CAACE,OAAD,CAAL,CAAeE,GAAf,CAAnB,CACA,GAAI,CAACQ,UAAD,EAAgBA,UAAU,CAACD,OAAX,EAAsBC,UAAU,CAACD,OAAX,CAAmBH,WAAnB,CAAiCG,OAAO,CAACH,WAAnF,CAAiG,OACjGI,UAAU,CAACD,OAAX,CAAqBA,OAArB,CACD,CAlCO,CAmCRE,gBAnCQ,2BAoCNb,KApCM,OAwCN,yBAFEC,OAEF,CAFaC,OAEb,eAFaA,OAEb,CAFsBC,MAEtB,eAFsBA,MAEtB,CAF8BK,WAE9B,eAF8BA,WAE9B,CACA,GAAI,CAACR,KAAK,CAACE,OAAD,CAAV,CAAqB,OACrB,GAAME,CAAAA,GAAG,CAAGV,WAAW,CAACS,MAAD,CAAvB,CACA,GAAMS,CAAAA,UAAU,CAAGZ,KAAK,CAACE,OAAD,CAAL,CAAeE,GAAf,CAAnB,CACA,GAAI,CAACQ,UAAD,EAAgBA,UAAU,CAACD,OAAX,EAAsBC,UAAU,CAACD,OAAX,CAAmBH,WAAnB,CAAiCA,WAA3E,CAAyF,OACzFI,UAAU,CAACD,OAAX,CAAqB,CACnBH,WAAW,CAAXA,WADmB,CAEnBM,KAAK,CAAE,IAFY,CAArB,CAID,CAjDO,CAkDRC,cAlDQ,yBAkDOf,KAlDP,OAkDyG,yBAAzFC,OAAyF,CAA9EC,OAA8E,eAA9EA,OAA8E,CAArEC,MAAqE,eAArEA,MAAqE,CAC/G,GAAI,CAACH,KAAK,CAACE,OAAD,CAAV,CAAqB,OACrB,GAAME,CAAAA,GAAG,CAAGV,WAAW,CAACS,MAAD,CAAvB,CACA,GAAI,CAACH,KAAK,CAACE,OAAD,CAAL,CAAeE,GAAf,CAAL,CAA0B,OAC1BJ,KAAK,CAACE,OAAD,CAAL,CAAeE,GAAf,EAAoBC,SAApB,GACD,CAvDO,CAHc,CAAD,CAAzB,CA8DA,cAAeV,CAAAA,KAAK,CAACqB,OAArB,CACO,mBAAqFrB,KAAK,CAACsB,OAA3F,CAAQlB,WAAR,gBAAQA,WAAR,CAAqBgB,cAArB,gBAAqBA,cAArB,CAAqCL,WAArC,gBAAqCA,WAArC,CAAkDG,gBAAlD,gBAAkDA,gBAAlD,CAAoEP,YAApE,gBAAoEA,YAApE,C","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { EventFilter, filterToKey, Log } from './utils'\n\nexport interface LogsState {\n  [chainId: number]: {\n    [filterKey: string]: {\n      listeners: number\n      fetchingBlockNumber?: number\n      results?:\n        | {\n            blockNumber: number\n            logs: Log[]\n            error?: undefined\n          }\n        | {\n            blockNumber: number\n            logs?: undefined\n            error: true\n          }\n    }\n  }\n}\n\nconst slice = createSlice({\n  name: 'logs',\n  initialState: {} as LogsState,\n  reducers: {\n    addListener(state, { payload: { chainId, filter } }: PayloadAction<{ chainId: number; filter: EventFilter }>) {\n      if (!state[chainId]) state[chainId] = {}\n      const key = filterToKey(filter)\n      if (!state[chainId][key])\n        state[chainId][key] = {\n          listeners: 1,\n        }\n      else state[chainId][key].listeners++\n    },\n    fetchingLogs(\n      state,\n      {\n        payload: { chainId, filters, blockNumber },\n      }: PayloadAction<{ chainId: number; filters: EventFilter[]; blockNumber: number }>\n    ) {\n      if (!state[chainId]) return\n      for (const filter of filters) {\n        const key = filterToKey(filter)\n        if (!state[chainId][key]) continue\n        state[chainId][key].fetchingBlockNumber = blockNumber\n      }\n    },\n    fetchedLogs(\n      state,\n      {\n        payload: { chainId, filter, results },\n      }: PayloadAction<{ chainId: number; filter: EventFilter; results: { blockNumber: number; logs: Log[] } }>\n    ) {\n      if (!state[chainId]) return\n      const key = filterToKey(filter)\n      const fetchState = state[chainId][key]\n      if (!fetchState || (fetchState.results && fetchState.results.blockNumber > results.blockNumber)) return\n      fetchState.results = results\n    },\n    fetchedLogsError(\n      state,\n      {\n        payload: { chainId, filter, blockNumber },\n      }: PayloadAction<{ chainId: number; blockNumber: number; filter: EventFilter }>\n    ) {\n      if (!state[chainId]) return\n      const key = filterToKey(filter)\n      const fetchState = state[chainId][key]\n      if (!fetchState || (fetchState.results && fetchState.results.blockNumber > blockNumber)) return\n      fetchState.results = {\n        blockNumber,\n        error: true,\n      }\n    },\n    removeListener(state, { payload: { chainId, filter } }: PayloadAction<{ chainId: number; filter: EventFilter }>) {\n      if (!state[chainId]) return\n      const key = filterToKey(filter)\n      if (!state[chainId][key]) return\n      state[chainId][key].listeners--\n    },\n  },\n})\n\nexport default slice.reducer\nexport const { addListener, removeListener, fetchedLogs, fetchedLogsError, fetchingLogs } = slice.actions\n"]},"metadata":{},"sourceType":"module"}