{"ast":null,"code":"import _objectSpread from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useEffect,useMemo}from'react';import{useActiveWeb3React}from'../../hooks/web3';import{useBlockNumber}from'../application/hooks';import{useAppDispatch,useAppSelector}from'../hooks';import{fetchedLogs,fetchedLogsError,fetchingLogs}from'./slice';import{keyToFilter}from'./utils';export default function Updater(){var dispatch=useAppDispatch();var state=useAppSelector(function(state){return state.logs;});var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId,library=_useActiveWeb3React.library;var blockNumber=useBlockNumber();var filtersNeedFetch=useMemo(function(){if(!chainId||typeof blockNumber!=='number')return[];var active=state[chainId];if(!active)return[];return Object.keys(active).filter(function(key){var _active$key=active[key],fetchingBlockNumber=_active$key.fetchingBlockNumber,results=_active$key.results,listeners=_active$key.listeners;if(listeners===0)return false;if(typeof fetchingBlockNumber==='number'&&fetchingBlockNumber>=blockNumber)return false;if(results&&typeof results.blockNumber==='number'&&results.blockNumber>=blockNumber)return false;return true;}).map(function(key){return keyToFilter(key);});},[blockNumber,chainId,state]);useEffect(function(){if(!library||!chainId||typeof blockNumber!=='number'||filtersNeedFetch.length===0)return;dispatch(fetchingLogs({chainId:chainId,filters:filtersNeedFetch,blockNumber:blockNumber}));filtersNeedFetch.forEach(function(filter){library.getLogs(_objectSpread(_objectSpread({},filter),{},{fromBlock:0,toBlock:blockNumber})).then(function(logs){dispatch(fetchedLogs({chainId:chainId,filter:filter,results:{logs:logs,blockNumber:blockNumber}}));}).catch(function(error){console.error('Failed to get logs',filter,error);dispatch(fetchedLogsError({chainId:chainId,filter:filter,blockNumber:blockNumber}));});});},[blockNumber,chainId,dispatch,filtersNeedFetch,library]);return null;}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/state/logs/updater.ts"],"names":["useEffect","useMemo","useActiveWeb3React","useBlockNumber","useAppDispatch","useAppSelector","fetchedLogs","fetchedLogsError","fetchingLogs","keyToFilter","Updater","dispatch","state","logs","chainId","library","blockNumber","filtersNeedFetch","active","Object","keys","filter","key","fetchingBlockNumber","results","listeners","map","length","filters","forEach","getLogs","fromBlock","toBlock","then","catch","error","console"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useBlockNumber } from '../application/hooks'\nimport { useAppDispatch, useAppSelector } from '../hooks'\nimport { fetchedLogs, fetchedLogsError, fetchingLogs } from './slice'\nimport { EventFilter, keyToFilter } from './utils'\n\nexport default function Updater(): null {\n  const dispatch = useAppDispatch()\n  const state = useAppSelector((state) => state.logs)\n  const { chainId, library } = useActiveWeb3React()\n\n  const blockNumber = useBlockNumber()\n\n  const filtersNeedFetch: EventFilter[] = useMemo(() => {\n    if (!chainId || typeof blockNumber !== 'number') return []\n\n    const active = state[chainId]\n    if (!active) return []\n\n    return Object.keys(active)\n      .filter((key) => {\n        const { fetchingBlockNumber, results, listeners } = active[key]\n        if (listeners === 0) return false\n        if (typeof fetchingBlockNumber === 'number' && fetchingBlockNumber >= blockNumber) return false\n        if (results && typeof results.blockNumber === 'number' && results.blockNumber >= blockNumber) return false\n        return true\n      })\n      .map((key) => keyToFilter(key))\n  }, [blockNumber, chainId, state])\n\n  useEffect(() => {\n    if (!library || !chainId || typeof blockNumber !== 'number' || filtersNeedFetch.length === 0) return\n\n    dispatch(fetchingLogs({ chainId, filters: filtersNeedFetch, blockNumber }))\n    filtersNeedFetch.forEach((filter) => {\n      library\n        .getLogs({\n          ...filter,\n          fromBlock: 0,\n          toBlock: blockNumber,\n        })\n        .then((logs) => {\n          dispatch(\n            fetchedLogs({\n              chainId,\n              filter,\n              results: { logs, blockNumber },\n            })\n          )\n        })\n        .catch((error) => {\n          console.error('Failed to get logs', filter, error)\n          dispatch(\n            fetchedLogsError({\n              chainId,\n              filter,\n              blockNumber,\n            })\n          )\n        })\n    })\n  }, [blockNumber, chainId, dispatch, filtersNeedFetch, library])\n\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}