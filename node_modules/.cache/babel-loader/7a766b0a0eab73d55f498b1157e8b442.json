{"ast":null,"code":"import _styled from\"styled-components\";import{readableColor}from'polished';export var BadgeVariant;(function(BadgeVariant){BadgeVariant[\"DEFAULT\"]=\"DEFAULT\";BadgeVariant[\"NEGATIVE\"]=\"NEGATIVE\";BadgeVariant[\"POSITIVE\"]=\"POSITIVE\";BadgeVariant[\"PRIMARY\"]=\"PRIMARY\";BadgeVariant[\"WARNING\"]=\"WARNING\";BadgeVariant[\"WARNING_OUTLINE\"]=\"WARNING_OUTLINE\";})(BadgeVariant||(BadgeVariant={}));function pickBackgroundColor(variant,theme){switch(variant){case BadgeVariant.NEGATIVE:return theme.error;case BadgeVariant.POSITIVE:return theme.success;case BadgeVariant.PRIMARY:return theme.primary1;case BadgeVariant.WARNING:return theme.warning;case BadgeVariant.WARNING_OUTLINE:return'transparent';default:return theme.bg2;}}function pickBorder(variant,theme){switch(variant){case BadgeVariant.WARNING_OUTLINE:return\"1px solid \".concat(theme.warning);default:return'unset';}}function pickFontColor(variant,theme){switch(variant){case BadgeVariant.NEGATIVE:return readableColor(theme.error);case BadgeVariant.POSITIVE:return readableColor(theme.success);case BadgeVariant.WARNING:return readableColor(theme.warning);case BadgeVariant.WARNING_OUTLINE:return theme.warning;default:return readableColor(theme.bg2);}}var Badge=_styled.div.withConfig({componentId:\"sc-1mhw5si-0\"})([\"align-items:center;background-color:\",\";border:\",\";border-radius:0.5rem;color:\",\";display:inline-flex;padding:4px 6px;justify-content:center;font-weight:500;\"],function(_ref){var theme=_ref.theme,variant=_ref.variant;return pickBackgroundColor(variant,theme);},function(_ref2){var theme=_ref2.theme,variant=_ref2.variant;return pickBorder(variant,theme);},function(_ref3){var theme=_ref3.theme,variant=_ref3.variant;return pickFontColor(variant,theme);});export default Badge;","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/components/Badge/index.tsx"],"names":["readableColor","BadgeVariant","pickBackgroundColor","variant","theme","NEGATIVE","error","POSITIVE","success","PRIMARY","primary1","WARNING","warning","WARNING_OUTLINE","bg2","pickBorder","pickFontColor","Badge","styled","div"],"mappings":"uCAAA,OAASA,aAAT,KAA8B,UAA9B,CAKA,UAAYC,CAAAA,YAAZ,C,UAAYA,Y,EAAAA,Y,sBAAAA,Y,wBAAAA,Y,wBAAAA,Y,sBAAAA,Y,sBAAAA,Y,yCAAAA,Y,GAAAA,Y,MAcZ,QAASC,CAAAA,mBAAT,CAA6BC,OAA7B,CAAgEC,KAAhE,CAA4F,CAC1F,OAAQD,OAAR,EACE,IAAKF,CAAAA,YAAY,CAACI,QAAlB,CACE,MAAOD,CAAAA,KAAK,CAACE,KAAb,CACF,IAAKL,CAAAA,YAAY,CAACM,QAAlB,CACE,MAAOH,CAAAA,KAAK,CAACI,OAAb,CACF,IAAKP,CAAAA,YAAY,CAACQ,OAAlB,CACE,MAAOL,CAAAA,KAAK,CAACM,QAAb,CACF,IAAKT,CAAAA,YAAY,CAACU,OAAlB,CACE,MAAOP,CAAAA,KAAK,CAACQ,OAAb,CACF,IAAKX,CAAAA,YAAY,CAACY,eAAlB,CACE,MAAO,aAAP,CACF,QACE,MAAOT,CAAAA,KAAK,CAACU,GAAb,CAZJ,CAcD,CAED,QAASC,CAAAA,UAAT,CAAoBZ,OAApB,CAAuDC,KAAvD,CAAoF,CAClF,OAAQD,OAAR,EACE,IAAKF,CAAAA,YAAY,CAACY,eAAlB,CACE,0BAAoBT,KAAK,CAACQ,OAA1B,EACF,QACE,MAAO,OAAP,CAJJ,CAMD,CAED,QAASI,CAAAA,aAAT,CAAuBb,OAAvB,CAA0DC,KAA1D,CAAuF,CACrF,OAAQD,OAAR,EACE,IAAKF,CAAAA,YAAY,CAACI,QAAlB,CACE,MAAOL,CAAAA,aAAa,CAACI,KAAK,CAACE,KAAP,CAApB,CACF,IAAKL,CAAAA,YAAY,CAACM,QAAlB,CACE,MAAOP,CAAAA,aAAa,CAACI,KAAK,CAACI,OAAP,CAApB,CACF,IAAKP,CAAAA,YAAY,CAACU,OAAlB,CACE,MAAOX,CAAAA,aAAa,CAACI,KAAK,CAACQ,OAAP,CAApB,CACF,IAAKX,CAAAA,YAAY,CAACY,eAAlB,CACE,MAAOT,CAAAA,KAAK,CAACQ,OAAb,CACF,QACE,MAAOZ,CAAAA,aAAa,CAACI,KAAK,CAACU,GAAP,CAApB,CAVJ,CAYD,CAED,GAAMG,CAAAA,KAAK,CAAGC,OAAM,CAACC,GAAV,4MAEW,kBAAGf,CAAAA,KAAH,MAAGA,KAAH,CAAUD,OAAV,MAAUA,OAAV,OAAwBD,CAAAA,mBAAmB,CAACC,OAAD,CAAUC,KAAV,CAA3C,EAFX,CAGC,mBAAGA,CAAAA,KAAH,OAAGA,KAAH,CAAUD,OAAV,OAAUA,OAAV,OAAwBY,CAAAA,UAAU,CAACZ,OAAD,CAAUC,KAAV,CAAlC,EAHD,CAKA,mBAAGA,CAAAA,KAAH,OAAGA,KAAH,CAAUD,OAAV,OAAUA,OAAV,OAAwBa,CAAAA,aAAa,CAACb,OAAD,CAAUC,KAAV,CAArC,EALA,CAAX,CAYA,cAAea,CAAAA,KAAf","sourcesContent":["import { readableColor } from 'polished'\nimport { PropsWithChildren } from 'react'\nimport styled, { DefaultTheme } from 'styled-components/macro'\nimport { Color } from 'theme/styled'\n\nexport enum BadgeVariant {\n  DEFAULT = 'DEFAULT',\n  NEGATIVE = 'NEGATIVE',\n  POSITIVE = 'POSITIVE',\n  PRIMARY = 'PRIMARY',\n  WARNING = 'WARNING',\n\n  WARNING_OUTLINE = 'WARNING_OUTLINE',\n}\n\ninterface BadgeProps {\n  variant?: BadgeVariant\n}\n\nfunction pickBackgroundColor(variant: BadgeVariant | undefined, theme: DefaultTheme): Color {\n  switch (variant) {\n    case BadgeVariant.NEGATIVE:\n      return theme.error\n    case BadgeVariant.POSITIVE:\n      return theme.success\n    case BadgeVariant.PRIMARY:\n      return theme.primary1\n    case BadgeVariant.WARNING:\n      return theme.warning\n    case BadgeVariant.WARNING_OUTLINE:\n      return 'transparent'\n    default:\n      return theme.bg2\n  }\n}\n\nfunction pickBorder(variant: BadgeVariant | undefined, theme: DefaultTheme): string {\n  switch (variant) {\n    case BadgeVariant.WARNING_OUTLINE:\n      return `1px solid ${theme.warning}`\n    default:\n      return 'unset'\n  }\n}\n\nfunction pickFontColor(variant: BadgeVariant | undefined, theme: DefaultTheme): string {\n  switch (variant) {\n    case BadgeVariant.NEGATIVE:\n      return readableColor(theme.error)\n    case BadgeVariant.POSITIVE:\n      return readableColor(theme.success)\n    case BadgeVariant.WARNING:\n      return readableColor(theme.warning)\n    case BadgeVariant.WARNING_OUTLINE:\n      return theme.warning\n    default:\n      return readableColor(theme.bg2)\n  }\n}\n\nconst Badge = styled.div<PropsWithChildren<BadgeProps>>`\n  align-items: center;\n  background-color: ${({ theme, variant }) => pickBackgroundColor(variant, theme)};\n  border: ${({ theme, variant }) => pickBorder(variant, theme)};\n  border-radius: 0.5rem;\n  color: ${({ theme, variant }) => pickFontColor(variant, theme)};\n  display: inline-flex;\n  padding: 4px 6px;\n  justify-content: center;\n  font-weight: 500;\n`\n\nexport default Badge\n"]},"metadata":{},"sourceType":"module"}