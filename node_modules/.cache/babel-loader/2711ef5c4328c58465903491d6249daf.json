{"ast":null,"code":"import _slicedToArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{BigNumber}from'ethers';import{useMemo}from'react';import{NEVER_RELOAD,useSingleCallResult}from'../state/multicall/hooks';import{useV3NFTPositionManagerContract}from'./useContract';var STARTS_WITH='data:application/json;base64,';export function usePositionTokenURI(tokenId){var contract=useV3NFTPositionManagerContract();var inputs=useMemo(function(){return[tokenId instanceof BigNumber?tokenId.toHexString():tokenId===null||tokenId===void 0?void 0:tokenId.toString(16)];},[tokenId]);var _useSingleCallResult=useSingleCallResult(contract,'tokenURI',inputs,_objectSpread(_objectSpread({},NEVER_RELOAD),{},{gasRequired:3000000})),result=_useSingleCallResult.result,error=_useSingleCallResult.error,loading=_useSingleCallResult.loading,valid=_useSingleCallResult.valid;return useMemo(function(){if(error||!valid||!tokenId){return{valid:false,loading:false};}if(loading){return{valid:true,loading:true};}if(!result){return{valid:false,loading:false};}var _ref=result,_ref2=_slicedToArray(_ref,1),tokenURI=_ref2[0];if(!tokenURI||!tokenURI.startsWith(STARTS_WITH))return{valid:false,loading:false};try{var json=JSON.parse(atob(tokenURI.slice(STARTS_WITH.length)));return{valid:true,loading:false,result:json};}catch(error){return{valid:false,loading:false};}},[error,loading,result,tokenId,valid]);}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/usePositionTokenURI.ts"],"names":["BigNumber","useMemo","NEVER_RELOAD","useSingleCallResult","useV3NFTPositionManagerContract","STARTS_WITH","usePositionTokenURI","tokenId","contract","inputs","toHexString","toString","gasRequired","result","error","loading","valid","tokenURI","startsWith","json","JSON","parse","atob","slice","length"],"mappings":"+WAAA,OAASA,SAAT,KAA0B,QAA1B,CAEA,OAASC,OAAT,KAAwB,OAAxB,CACA,OAASC,YAAT,CAAuBC,mBAAvB,KAAkD,0BAAlD,CACA,OAASC,+BAAT,KAAgD,eAAhD,CAIA,GAAMC,CAAAA,WAAW,CAAG,+BAApB,CAqBA,MAAO,SAASC,CAAAA,mBAAT,CAA6BC,OAA7B,CAAsF,CAC3F,GAAMC,CAAAA,QAAQ,CAAGJ,+BAA+B,EAAhD,CACA,GAAMK,CAAAA,MAAM,CAAGR,OAAO,CACpB,iBAAM,CAACM,OAAO,WAAYP,CAAAA,SAAnB,CAA+BO,OAAO,CAACG,WAAR,EAA/B,CAAuDH,OAAvD,SAAuDA,OAAvD,iBAAuDA,OAAO,CAAEI,QAAT,CAAkB,EAAlB,CAAxD,CAAN,EADoB,CAEpB,CAACJ,OAAD,CAFoB,CAAtB,CAIA,yBAA0CJ,mBAAmB,CAACK,QAAD,CAAW,UAAX,CAAuBC,MAAvB,gCACxDP,YADwD,MAE3DU,WAAW,CAAE,OAF8C,GAA7D,CAAQC,MAAR,sBAAQA,MAAR,CAAgBC,KAAhB,sBAAgBA,KAAhB,CAAuBC,OAAvB,sBAAuBA,OAAvB,CAAgCC,KAAhC,sBAAgCA,KAAhC,CAKA,MAAOf,CAAAA,OAAO,CAAC,UAAM,CACnB,GAAIa,KAAK,EAAI,CAACE,KAAV,EAAmB,CAACT,OAAxB,CAAiC,CAC/B,MAAO,CACLS,KAAK,CAAE,KADF,CAELD,OAAO,CAAE,KAFJ,CAAP,CAID,CACD,GAAIA,OAAJ,CAAa,CACX,MAAO,CACLC,KAAK,CAAE,IADF,CAELD,OAAO,CAAE,IAFJ,CAAP,CAID,CACD,GAAI,CAACF,MAAL,CAAa,CACX,MAAO,CACLG,KAAK,CAAE,KADF,CAELD,OAAO,CAAE,KAFJ,CAAP,CAID,CACD,SAAmBF,MAAnB,8BAAOI,QAAP,UACA,GAAI,CAACA,QAAD,EAAa,CAACA,QAAQ,CAACC,UAAT,CAAoBb,WAApB,CAAlB,CACE,MAAO,CACLW,KAAK,CAAE,KADF,CAELD,OAAO,CAAE,KAFJ,CAAP,CAKF,GAAI,CACF,GAAMI,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACL,QAAQ,CAACM,KAAT,CAAelB,WAAW,CAACmB,MAA3B,CAAD,CAAf,CAAb,CAEA,MAAO,CACLR,KAAK,CAAE,IADF,CAELD,OAAO,CAAE,KAFJ,CAGLF,MAAM,CAAEM,IAHH,CAAP,CAKD,CAAC,MAAOL,KAAP,CAAc,CACd,MAAO,CAAEE,KAAK,CAAE,KAAT,CAAgBD,OAAO,CAAE,KAAzB,CAAP,CACD,CACF,CArCa,CAqCX,CAACD,KAAD,CAAQC,OAAR,CAAiBF,MAAjB,CAAyBN,OAAzB,CAAkCS,KAAlC,CArCW,CAAd,CAsCD","sourcesContent":["import { BigNumber } from 'ethers'\nimport JSBI from 'jsbi'\nimport { useMemo } from 'react'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport { useV3NFTPositionManagerContract } from './useContract'\n\ntype TokenId = number | JSBI | BigNumber\n\nconst STARTS_WITH = 'data:application/json;base64,'\n\ntype UsePositionTokenURIResult =\n  | {\n      valid: true\n      loading: false\n      result: {\n        name: string\n        description: string\n        image: string\n      }\n    }\n  | {\n      valid: false\n      loading: false\n    }\n  | {\n      valid: true\n      loading: true\n    }\n\nexport function usePositionTokenURI(tokenId: TokenId | undefined): UsePositionTokenURIResult {\n  const contract = useV3NFTPositionManagerContract()\n  const inputs = useMemo(\n    () => [tokenId instanceof BigNumber ? tokenId.toHexString() : tokenId?.toString(16)],\n    [tokenId]\n  )\n  const { result, error, loading, valid } = useSingleCallResult(contract, 'tokenURI', inputs, {\n    ...NEVER_RELOAD,\n    gasRequired: 3_000_000,\n  })\n\n  return useMemo(() => {\n    if (error || !valid || !tokenId) {\n      return {\n        valid: false,\n        loading: false,\n      }\n    }\n    if (loading) {\n      return {\n        valid: true,\n        loading: true,\n      }\n    }\n    if (!result) {\n      return {\n        valid: false,\n        loading: false,\n      }\n    }\n    const [tokenURI] = result as [string]\n    if (!tokenURI || !tokenURI.startsWith(STARTS_WITH))\n      return {\n        valid: false,\n        loading: false,\n      }\n\n    try {\n      const json = JSON.parse(atob(tokenURI.slice(STARTS_WITH.length)))\n\n      return {\n        valid: true,\n        loading: false,\n        result: json,\n      }\n    } catch (error) {\n      return { valid: false, loading: false }\n    }\n  }, [error, loading, result, tokenId, valid])\n}\n"]},"metadata":{},"sourceType":"module"}