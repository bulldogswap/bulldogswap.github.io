{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useState,useLayoutEffect}from'react';import{shade}from'polished';import Vibrant from'node-vibrant';import{hex}from'wcag-contrast';import uriToHttp from'utils/uriToHttp';function getColorFromToken(_x){return _getColorFromToken.apply(this,arguments);}function _getColorFromToken(){_getColorFromToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(token){var path;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(token.chainId!==1)){_context.next=2;break;}return _context.abrupt(\"return\",Promise.resolve('#FAAB14'));case 2:path=\"https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/\".concat(token.address,\"/logo.png\");return _context.abrupt(\"return\",Vibrant.from(path).getPalette().then(function(palette){if(palette===null||palette===void 0?void 0:palette.Vibrant){var detectedHex=palette.Vibrant.hex;var AAscore=hex(detectedHex,'#FFF');while(AAscore<3){detectedHex=shade(0.005,detectedHex);AAscore=hex(detectedHex,'#FFF');}return detectedHex;}return null;}).catch(function(){return null;}));case 4:case\"end\":return _context.stop();}}},_callee);}));return _getColorFromToken.apply(this,arguments);}function getColorFromUriPath(_x2){return _getColorFromUriPath.apply(this,arguments);}function _getColorFromUriPath(){_getColorFromUriPath=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(uri){var formattedPath;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:formattedPath=uriToHttp(uri)[0];return _context2.abrupt(\"return\",Vibrant.from(formattedPath).getPalette().then(function(palette){if(palette===null||palette===void 0?void 0:palette.Vibrant){return palette.Vibrant.hex;}return null;}).catch(function(){return null;}));case 2:case\"end\":return _context2.stop();}}},_callee2);}));return _getColorFromUriPath.apply(this,arguments);}export function useColor(token){var _useState=useState('#2172E5'),_useState2=_slicedToArray(_useState,2),color=_useState2[0],setColor=_useState2[1];useLayoutEffect(function(){var stale=false;if(token){getColorFromToken(token).then(function(tokenColor){if(!stale&&tokenColor!==null){setColor(tokenColor);}});}return function(){stale=true;setColor('#2172E5');};},[token]);return color;}export function useListColor(listImageUri){var _useState3=useState('#2172E5'),_useState4=_slicedToArray(_useState3,2),color=_useState4[0],setColor=_useState4[1];useLayoutEffect(function(){var stale=false;if(listImageUri){getColorFromUriPath(listImageUri).then(function(color){if(!stale&&color!==null){setColor(color);}});}return function(){stale=true;setColor('#2172E5');};},[listImageUri]);return color;}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/useColor.ts"],"names":["useState","useLayoutEffect","shade","Vibrant","hex","uriToHttp","getColorFromToken","token","chainId","Promise","resolve","path","address","from","getPalette","then","palette","detectedHex","AAscore","catch","getColorFromUriPath","uri","formattedPath","useColor","color","setColor","stale","tokenColor","useListColor","listImageUri"],"mappings":"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","sourcesContent":["import { useState, useLayoutEffect } from 'react'\nimport { shade } from 'polished'\nimport Vibrant from 'node-vibrant'\nimport { hex } from 'wcag-contrast'\nimport { Token } from '@uniswap/sdk-core'\nimport uriToHttp from 'utils/uriToHttp'\n\nasync function getColorFromToken(token: Token): Promise<string | null> {\n  if (token.chainId !== 1) {\n    return Promise.resolve('#FAAB14')\n  }\n\n  const path = `https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`\n\n  return Vibrant.from(path)\n    .getPalette()\n    .then((palette) => {\n      if (palette?.Vibrant) {\n        let detectedHex = palette.Vibrant.hex\n        let AAscore = hex(detectedHex, '#FFF')\n        while (AAscore < 3) {\n          detectedHex = shade(0.005, detectedHex)\n          AAscore = hex(detectedHex, '#FFF')\n        }\n        return detectedHex\n      }\n      return null\n    })\n    .catch(() => null)\n}\n\nasync function getColorFromUriPath(uri: string): Promise<string | null> {\n  const formattedPath = uriToHttp(uri)[0]\n\n  return Vibrant.from(formattedPath)\n    .getPalette()\n    .then((palette) => {\n      if (palette?.Vibrant) {\n        return palette.Vibrant.hex\n      }\n      return null\n    })\n    .catch(() => null)\n}\n\nexport function useColor(token?: Token) {\n  const [color, setColor] = useState('#2172E5')\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (token) {\n      getColorFromToken(token).then((tokenColor) => {\n        if (!stale && tokenColor !== null) {\n          setColor(tokenColor)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#2172E5')\n    }\n  }, [token])\n\n  return color\n}\n\nexport function useListColor(listImageUri?: string) {\n  const [color, setColor] = useState('#2172E5')\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (listImageUri) {\n      getColorFromUriPath(listImageUri).then((color) => {\n        if (!stale && color !== null) {\n          setColor(color)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#2172E5')\n    }\n  }, [listImageUri])\n\n  return color\n}\n"]},"metadata":{},"sourceType":"module"}