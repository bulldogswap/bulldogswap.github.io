{"ast":null,"code":"import _defineProperty from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _NETWORK_POLLING_INTE;import{Web3Provider}from'@ethersproject/providers';import{SupportedChainId}from'../constants/chains';var NETWORK_POLLING_INTERVALS=(_NETWORK_POLLING_INTE={},_defineProperty(_NETWORK_POLLING_INTE,SupportedChainId.ARBITRUM_ONE,1000),_defineProperty(_NETWORK_POLLING_INTE,SupportedChainId.ARBITRUM_RINKEBY,1000),_defineProperty(_NETWORK_POLLING_INTE,SupportedChainId.OPTIMISM,1000),_defineProperty(_NETWORK_POLLING_INTE,SupportedChainId.OPTIMISTIC_KOVAN,1000),_NETWORK_POLLING_INTE);export default function getLibrary(provider){var library=new Web3Provider(provider,typeof provider.chainId==='number'?provider.chainId:typeof provider.chainId==='string'?parseInt(provider.chainId):'any');library.pollingInterval=15000;library.detectNetwork().then(function(network){var networkPollingInterval=NETWORK_POLLING_INTERVALS[network.chainId];if(networkPollingInterval){console.debug('Setting polling interval',networkPollingInterval);library.pollingInterval=networkPollingInterval;}});return library;}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/utils/getLibrary.ts"],"names":["Web3Provider","SupportedChainId","NETWORK_POLLING_INTERVALS","ARBITRUM_ONE","ARBITRUM_RINKEBY","OPTIMISM","OPTIMISTIC_KOVAN","getLibrary","provider","library","chainId","parseInt","pollingInterval","detectNetwork","then","network","networkPollingInterval","console","debug"],"mappings":"oNAAA,OAASA,YAAT,KAA6B,0BAA7B,CAEA,OAASC,gBAAT,KAAiC,qBAAjC,CAEA,GAAMC,CAAAA,yBAAwD,iEAC3DD,gBAAgB,CAACE,YAD0C,6CAE3DF,gBAAgB,CAACG,gBAF0C,6CAG3DH,gBAAgB,CAACI,QAH0C,6CAI3DJ,gBAAgB,CAACK,gBAJ0C,6BAA9D,CAOA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,QAApB,CAAiD,CAC9D,GAAMC,CAAAA,OAAO,CAAG,GAAIT,CAAAA,YAAJ,CACdQ,QADc,CAEd,MAAOA,CAAAA,QAAQ,CAACE,OAAhB,GAA4B,QAA5B,CACIF,QAAQ,CAACE,OADb,CAEI,MAAOF,CAAAA,QAAQ,CAACE,OAAhB,GAA4B,QAA5B,CACAC,QAAQ,CAACH,QAAQ,CAACE,OAAV,CADR,CAEA,KANU,CAAhB,CAQAD,OAAO,CAACG,eAAR,CAA0B,KAA1B,CACAH,OAAO,CAACI,aAAR,GAAwBC,IAAxB,CAA6B,SAACC,OAAD,CAAa,CACxC,GAAMC,CAAAA,sBAAsB,CAAGd,yBAAyB,CAACa,OAAO,CAACL,OAAT,CAAxD,CACA,GAAIM,sBAAJ,CAA4B,CAC1BC,OAAO,CAACC,KAAR,CAAc,0BAAd,CAA0CF,sBAA1C,EACAP,OAAO,CAACG,eAAR,CAA0BI,sBAA1B,CACD,CACF,CAND,EAOA,MAAOP,CAAAA,OAAP,CACD","sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\nimport ms from 'ms.macro'\nimport { SupportedChainId } from '../constants/chains'\n\nconst NETWORK_POLLING_INTERVALS: { [chainId: number]: number } = {\n  [SupportedChainId.ARBITRUM_ONE]: ms`1s`,\n  [SupportedChainId.ARBITRUM_RINKEBY]: ms`1s`,\n  [SupportedChainId.OPTIMISM]: ms`1s`,\n  [SupportedChainId.OPTIMISTIC_KOVAN]: ms`1s`,\n}\n\nexport default function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(\n    provider,\n    typeof provider.chainId === 'number'\n      ? provider.chainId\n      : typeof provider.chainId === 'string'\n      ? parseInt(provider.chainId)\n      : 'any'\n  )\n  library.pollingInterval = 15_000\n  library.detectNetwork().then((network) => {\n    const networkPollingInterval = NETWORK_POLLING_INTERVALS[network.chainId]\n    if (networkPollingInterval) {\n      console.debug('Setting polling interval', networkPollingInterval)\n      library.pollingInterval = networkPollingInterval\n    }\n  })\n  return library\n}\n"]},"metadata":{},"sourceType":"module"}