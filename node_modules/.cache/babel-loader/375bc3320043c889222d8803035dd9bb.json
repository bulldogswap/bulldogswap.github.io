{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Safe = void 0;\n\nvar methods_1 = require(\"../communication/methods\");\n\nvar Safe = /*#__PURE__*/function () {\n  function Safe(communicator) {\n    _classCallCheck(this, Safe);\n\n    this.communicator = communicator;\n  }\n\n  _createClass(Safe, [{\n    key: \"getInfo\",\n    value: function () {\n      var _getInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.communicator.send(methods_1.Methods.getSafeInfo, undefined);\n\n              case 2:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getInfo() {\n        return _getInfo.apply(this, arguments);\n      }\n\n      return getInfo;\n    }() // There is a possibility that this method will change because we may add pagination to the endpoint\n\n  }, {\n    key: \"experimental_getBalances\",\n    value: function () {\n      var _experimental_getBalances = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _ref,\n            _ref$currency,\n            currency,\n            response,\n            _args2 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _ref = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, _ref$currency = _ref.currency, currency = _ref$currency === void 0 ? 'usd' : _ref$currency;\n                _context2.next = 3;\n                return this.communicator.send(methods_1.Methods.getSafeBalances, {\n                  currency: currency\n                });\n\n              case 3:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response.data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function experimental_getBalances() {\n        return _experimental_getBalances.apply(this, arguments);\n      }\n\n      return experimental_getBalances;\n    }()\n  }]);\n\n  return Safe;\n}();\n\nexports.Safe = Safe;","map":{"version":3,"sources":["../../../src/safe/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;IAGM,I;AAGJ,gBAAY,YAAZ,EAAsC;AAAA;;AACpC,SAAK,YAAL,GAAoB,YAApB;AACD;;;;;8EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACyB,KAAK,YAAL,CAAkB,IAAlB,CACrB,SAAA,CAAA,OAAA,CAAQ,WADa,EAErB,SAFqB,CADzB;;AAAA;AACQ,gBAAA,QADR;AAAA,iDAMS,QAAQ,CAAC,IANlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;QASA;;;;;+FACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAwE,EAAxE,uBAAiC,QAAjC,EAAiC,QAAjC,8BAA4C,KAA5C;AAAA;AAAA,uBACyB,KAAK,YAAL,CAAkB,IAAlB,CACrB,SAAA,CAAA,OAAA,CAAQ,eADa,EAErB;AACE,kBAAA,QAAQ,EAAR;AADF,iBAFqB,CADzB;;AAAA;AACQ,gBAAA,QADR;AAAA,kDAQS,QAAQ,CAAC,IARlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAYO,OAAA,CAAA,IAAA,GAAA,IAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Safe = void 0;\nconst methods_1 = require(\"../communication/methods\");\nclass Safe {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getInfo() {\n        const response = await this.communicator.send(methods_1.Methods.getSafeInfo, undefined);\n        return response.data;\n    }\n    // There is a possibility that this method will change because we may add pagination to the endpoint\n    async experimental_getBalances({ currency = 'usd' } = {}) {\n        const response = await this.communicator.send(methods_1.Methods.getSafeBalances, {\n            currency,\n        });\n        return response.data;\n    }\n}\nexports.Safe = Safe;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}