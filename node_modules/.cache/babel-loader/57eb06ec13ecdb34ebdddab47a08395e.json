{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{parseBytes32String}from'@ethersproject/strings';import{Token}from'@uniswap/sdk-core';import{arrayify}from'ethers/lib/utils';import{useMemo}from'react';import{createTokenFilterFunction}from'../components/SearchModal/filtering';import{ExtendedEther,WETH9_EXTENDED}from'../constants/tokens';import{useAllLists,useCombinedActiveList,useInactiveListUrls}from'../state/lists/hooks';import{WrappedTokenInfo}from'../state/lists/wrappedTokenInfo';import{NEVER_RELOAD,useSingleCallResult}from'../state/multicall/hooks';import{useUserAddedTokens}from'../state/user/hooks';import{isAddress}from'../utils';import{useUnsupportedTokenList}from'./../state/lists/hooks';import{useActiveWeb3React}from'./web3';import{useBytes32TokenContract,useTokenContract}from'./useContract';// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap,includeUserAdded){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var userAddedTokens=useUserAddedTokens();return useMemo(function(){var _tokenMap$chainId;if(!chainId)return{};// reduce to just tokens\nvar mapWithoutUrls=Object.keys((_tokenMap$chainId=tokenMap[chainId])!==null&&_tokenMap$chainId!==void 0?_tokenMap$chainId:{}).reduce(function(newMap,address){newMap[address]=tokenMap[chainId][address].token;return newMap;},{});if(includeUserAdded){return userAddedTokens// reduce into all ALL_TOKENS filtered by the current chain\n.reduce(function(tokenMap,token){tokenMap[token.address]=token;return tokenMap;},// must make a copy because reduce modifies the map, and we do not\n// want to make a copy in every iteration\n_objectSpread({},mapWithoutUrls));}return mapWithoutUrls;},[chainId,userAddedTokens,tokenMap,includeUserAdded]);}export function useAllTokens(){var allTokens=useCombinedActiveList();return useTokensFromMap(allTokens,true);}export function useUnsupportedTokens(){var unsupportedTokensMap=useUnsupportedTokenList();return useTokensFromMap(unsupportedTokensMap,false);}export function useSearchInactiveTokenLists(search){var minResults=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;var lists=useAllLists();var inactiveUrls=useInactiveListUrls();var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;var activeTokens=useAllTokens();return useMemo(function(){if(!search||search.trim().length===0)return[];var tokenFilter=createTokenFilterFunction(search);var result=[];var addressSet={};var _iterator=_createForOfIteratorHelper(inactiveUrls),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var url=_step.value;var list=lists[url].current;if(!list)continue;var _iterator2=_createForOfIteratorHelper(list.tokens),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var tokenInfo=_step2.value;if(tokenInfo.chainId===chainId&&tokenFilter(tokenInfo)){var wrapped=new WrappedTokenInfo(tokenInfo,list);if(!(wrapped.address in activeTokens)&&!addressSet[wrapped.address]){addressSet[wrapped.address]=true;result.push(wrapped);if(result.length>=minResults)return result;}}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return result;},[activeTokens,chainId,inactiveUrls,lists,minResults,search]);}export function useIsTokenActive(token){var activeTokens=useAllTokens();if(!activeTokens||!token){return false;}return!!activeTokens[token.address];}// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency){var userAddedTokens=useUserAddedTokens();if(!currency){return false;}return!!userAddedTokens.find(function(token){return currency.equals(token);});}// parse a name or symbol from a token response\nvar BYTES32_REGEX=/^0x[a-fA-F0-9]{64}$/;function parseStringOrBytes32(str,bytes32,defaultValue){return str&&str.length>0?str:// need to check for proper bytes string and valid terminator\nbytes32&&BYTES32_REGEX.test(bytes32)&&arrayify(bytes32)[31]===0?parseBytes32String(bytes32):defaultValue;}// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress){var _useActiveWeb3React3=useActiveWeb3React(),chainId=_useActiveWeb3React3.chainId;var tokens=useAllTokens();var address=isAddress(tokenAddress);var tokenContract=useTokenContract(address?address:undefined,false);var tokenContractBytes32=useBytes32TokenContract(address?address:undefined,false);var token=address?tokens[address]:undefined;var tokenName=useSingleCallResult(token?undefined:tokenContract,'name',undefined,NEVER_RELOAD);var tokenNameBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'name',undefined,NEVER_RELOAD);var symbol=useSingleCallResult(token?undefined:tokenContract,'symbol',undefined,NEVER_RELOAD);var symbolBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'symbol',undefined,NEVER_RELOAD);var decimals=useSingleCallResult(token?undefined:tokenContract,'decimals',undefined,NEVER_RELOAD);return useMemo(function(){if(token)return token;if(!chainId||!address)return undefined;if(decimals.loading||symbol.loading||tokenName.loading)return null;if(decimals.result){var _symbol$result,_symbolBytes32$result,_tokenName$result,_tokenNameBytes32$res;return new Token(chainId,address,decimals.result[0],parseStringOrBytes32((_symbol$result=symbol.result)===null||_symbol$result===void 0?void 0:_symbol$result[0],(_symbolBytes32$result=symbolBytes32.result)===null||_symbolBytes32$result===void 0?void 0:_symbolBytes32$result[0],'UNKNOWN'),parseStringOrBytes32((_tokenName$result=tokenName.result)===null||_tokenName$result===void 0?void 0:_tokenName$result[0],(_tokenNameBytes32$res=tokenNameBytes32.result)===null||_tokenNameBytes32$res===void 0?void 0:_tokenNameBytes32$res[0],'Unknown Token'));}return undefined;},[address,chainId,decimals.loading,decimals.result,symbol.loading,symbol.result,symbolBytes32.result,token,tokenName.loading,tokenName.result,tokenNameBytes32.result]);}export function useCurrency(currencyId){var _weth$address;var _useActiveWeb3React4=useActiveWeb3React(),chainId=_useActiveWeb3React4.chainId;var isETH=(currencyId===null||currencyId===void 0?void 0:currencyId.toUpperCase())==='ETH';var token=useToken(isETH?undefined:currencyId);var extendedEther=useMemo(function(){return chainId?ExtendedEther.onChain(chainId):undefined;},[chainId]);var weth=chainId?WETH9_EXTENDED[chainId]:undefined;if((weth===null||weth===void 0?void 0:(_weth$address=weth.address)===null||_weth$address===void 0?void 0:_weth$address.toLowerCase())===(currencyId===null||currencyId===void 0?void 0:currencyId.toLowerCase()))return weth;return isETH?extendedEther:token;}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/Tokens.ts"],"names":["parseBytes32String","Token","arrayify","useMemo","createTokenFilterFunction","ExtendedEther","WETH9_EXTENDED","useAllLists","useCombinedActiveList","useInactiveListUrls","WrappedTokenInfo","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useUnsupportedTokenList","useActiveWeb3React","useBytes32TokenContract","useTokenContract","useTokensFromMap","tokenMap","includeUserAdded","chainId","userAddedTokens","mapWithoutUrls","Object","keys","reduce","newMap","address","token","useAllTokens","allTokens","useUnsupportedTokens","unsupportedTokensMap","useSearchInactiveTokenLists","search","minResults","lists","inactiveUrls","activeTokens","trim","length","tokenFilter","result","addressSet","url","list","current","tokens","tokenInfo","wrapped","push","useIsTokenActive","useIsUserAddedToken","currency","find","equals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","useToken","tokenAddress","tokenContract","undefined","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","loading","useCurrency","currencyId","isETH","toUpperCase","extendedEther","onChain","weth","toLowerCase"],"mappings":"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","sourcesContent":["import { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, Token } from '@uniswap/sdk-core'\nimport { arrayify } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { createTokenFilterFunction } from '../components/SearchModal/filtering'\nimport { ExtendedEther, WETH9_EXTENDED } from '../constants/tokens'\nimport { useAllLists, useCombinedActiveList, useInactiveListUrls } from '../state/lists/hooks'\nimport { WrappedTokenInfo } from '../state/lists/wrappedTokenInfo'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport { useUserAddedTokens } from '../state/user/hooks'\nimport { isAddress } from '../utils'\nimport { TokenAddressMap, useUnsupportedTokenList } from './../state/lists/hooks'\n\nimport { useActiveWeb3React } from './web3'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId] ?? {}).reduce<{ [address: string]: Token }>(\n      (newMap, address) => {\n        newMap[address] = tokenMap[chainId][address].token\n        return newMap\n      },\n      {}\n    )\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap, token) => {\n              tokenMap[token.address] = token\n              return tokenMap\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls }\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useSearchInactiveTokenLists(search: string | undefined, minResults = 10): WrappedTokenInfo[] {\n  const lists = useAllLists()\n  const inactiveUrls = useInactiveListUrls()\n  const { chainId } = useActiveWeb3React()\n  const activeTokens = useAllTokens()\n  return useMemo(() => {\n    if (!search || search.trim().length === 0) return []\n    const tokenFilter = createTokenFilterFunction(search)\n    const result: WrappedTokenInfo[] = []\n    const addressSet: { [address: string]: true } = {}\n    for (const url of inactiveUrls) {\n      const list = lists[url].current\n      if (!list) continue\n      for (const tokenInfo of list.tokens) {\n        if (tokenInfo.chainId === chainId && tokenFilter(tokenInfo)) {\n          const wrapped = new WrappedTokenInfo(tokenInfo, list)\n          if (!(wrapped.address in activeTokens) && !addressSet[wrapped.address]) {\n            addressSet[wrapped.address] = true\n            result.push(wrapped)\n            if (result.length >= minResults) return result\n          }\n        }\n      }\n    }\n    return result\n  }, [activeTokens, chainId, inactiveUrls, lists, minResults, search])\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currency.equals(token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address ? address : undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address ? address : undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const { chainId } = useActiveWeb3React()\n  const isETH = currencyId?.toUpperCase() === 'ETH'\n  const token = useToken(isETH ? undefined : currencyId)\n  const extendedEther = useMemo(() => (chainId ? ExtendedEther.onChain(chainId) : undefined), [chainId])\n  const weth = chainId ? WETH9_EXTENDED[chainId] : undefined\n  if (weth?.address?.toLowerCase() === currencyId?.toLowerCase()) return weth\n  return isETH ? extendedEther : token\n}\n"]},"metadata":{},"sourceType":"module"}