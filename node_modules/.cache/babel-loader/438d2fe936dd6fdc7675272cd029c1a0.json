{"ast":null,"code":"import{ThemeContext as _ThemeContext}from\"styled-components\";import _styled from\"styled-components\";import{useContext}from'react';import{AlertCircle,CheckCircle}from'react-feather';import{useActiveWeb3React}from'../../hooks/web3';import{TYPE}from'../../theme';import{ExternalLink}from'../../theme/components';import{ExplorerDataType,getExplorerLink}from'../../utils/getExplorerLink';import{AutoColumn}from'../Column';import{AutoRow}from'../Row';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RowNoFlex=_styled(AutoRow).withConfig({componentId:\"sc-13d9pmm-0\"})([\"flex-wrap:nowrap;\"]);export default function TransactionPopup(_ref){var hash=_ref.hash,success=_ref.success,summary=_ref.summary;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var theme=useContext(_ThemeContext);return/*#__PURE__*/_jsxs(RowNoFlex,{children:[/*#__PURE__*/_jsx(\"div\",{style:{paddingRight:16},children:success?/*#__PURE__*/_jsx(CheckCircle,{color:theme.green1,size:24}):/*#__PURE__*/_jsx(AlertCircle,{color:theme.red1,size:24})}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"8px\",children:[/*#__PURE__*/_jsx(TYPE.body,{fontWeight:500,children:summary!==null&&summary!==void 0?summary:'Hash: '+hash.slice(0,8)+'...'+hash.slice(58,65)}),chainId&&/*#__PURE__*/_jsx(ExternalLink,{href:getExplorerLink(chainId,hash,ExplorerDataType.TRANSACTION),children:\"View on Explorer\"})]})]});}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/components/Popups/TransactionPopup.tsx"],"names":["useContext","AlertCircle","CheckCircle","useActiveWeb3React","TYPE","ExternalLink","ExplorerDataType","getExplorerLink","AutoColumn","AutoRow","RowNoFlex","styled","TransactionPopup","hash","success","summary","chainId","theme","ThemeContext","paddingRight","green1","red1","slice","TRANSACTION"],"mappings":"oGAAA,OAASA,UAAT,KAA2B,OAA3B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,eAAzC,CAEA,OAASC,kBAAT,KAAmC,kBAAnC,CACA,OAASC,IAAT,KAAqB,aAArB,CACA,OAASC,YAAT,KAA6B,wBAA7B,CACA,OAASC,gBAAT,CAA2BC,eAA3B,KAAkD,6BAAlD,CACA,OAASC,UAAT,KAA2B,WAA3B,CACA,OAASC,OAAT,KAAwB,QAAxB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGC,OAAM,CAACF,OAAD,CAAT,gEAAf,CAIA,cAAe,SAASG,CAAAA,gBAAT,MAQZ,IAPDC,CAAAA,IAOC,MAPDA,IAOC,CANDC,OAMC,MANDA,OAMC,CALDC,OAKC,MALDA,OAKC,CACD,wBAAoBZ,kBAAkB,EAAtC,CAAQa,OAAR,qBAAQA,OAAR,CAEA,GAAMC,CAAAA,KAAK,CAAGjB,UAAU,CAACkB,aAAD,CAAxB,CAEA,mBACE,MAAC,SAAD,yBACE,YAAK,KAAK,CAAE,CAAEC,YAAY,CAAE,EAAhB,CAAZ,UACGL,OAAO,cAAG,KAAC,WAAD,EAAa,KAAK,CAAEG,KAAK,CAACG,MAA1B,CAAkC,IAAI,CAAE,EAAxC,EAAH,cAAoD,KAAC,WAAD,EAAa,KAAK,CAAEH,KAAK,CAACI,IAA1B,CAAgC,IAAI,CAAE,EAAtC,EAD9D,EADF,cAIE,MAAC,UAAD,EAAY,GAAG,CAAC,KAAhB,wBACE,KAAC,IAAD,CAAM,IAAN,EAAW,UAAU,CAAE,GAAvB,UAA6BN,OAA7B,SAA6BA,OAA7B,UAA6BA,OAA7B,CAAwC,SAAWF,IAAI,CAACS,KAAL,CAAW,CAAX,CAAc,CAAd,CAAX,CAA8B,KAA9B,CAAsCT,IAAI,CAACS,KAAL,CAAW,EAAX,CAAe,EAAf,CAA9E,EADF,CAEGN,OAAO,eACN,KAAC,YAAD,EAAc,IAAI,CAAET,eAAe,CAACS,OAAD,CAAUH,IAAV,CAAgBP,gBAAgB,CAACiB,WAAjC,CAAnC,8BAHJ,GAJF,GADF,CAeD","sourcesContent":["import { useContext } from 'react'\nimport { AlertCircle, CheckCircle } from 'react-feather'\nimport styled, { ThemeContext } from 'styled-components/macro'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { TYPE } from '../../theme'\nimport { ExternalLink } from '../../theme/components'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary,\n}: {\n  hash: string\n  success?: boolean\n  summary?: string\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? <CheckCircle color={theme.green1} size={24} /> : <AlertCircle color={theme.red1} size={24} />}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <TYPE.body fontWeight={500}>{summary ?? 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}</TYPE.body>\n        {chainId && (\n          <ExternalLink href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}>\n            View on Explorer\n          </ExternalLink>\n        )}\n      </AutoColumn>\n    </RowNoFlex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}