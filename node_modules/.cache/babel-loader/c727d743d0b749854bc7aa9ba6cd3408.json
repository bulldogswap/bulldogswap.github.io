{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafeAppProvider = void 0;\n\nvar events_1 = require(\"events\");\n\nvar utils_1 = require(\"./utils\"); // The API is based on Ethereum JavaScript API Provider Standard. Link: https://eips.ethereum.org/EIPS/eip-1193\n\n\nvar SafeAppProvider = /*#__PURE__*/function () {\n  function SafeAppProvider(safe, sdk) {\n    _classCallCheck(this, SafeAppProvider);\n\n    this.submittedTxs = new Map();\n    this.events = new events_1.EventEmitter();\n    this.safe = safe;\n    this.sdk = sdk;\n  }\n\n  _createClass(SafeAppProvider, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.events.emit('connect', {\n                  chainId: this.chainId\n                });\n                return _context.abrupt(\"return\");\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\");\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }, {\n    key: \"once\",\n    value: function once(event, listener) {\n      this.events.once(event, listener);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      this.events.off(event, listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(event, listener) {\n      this.events.removeListener(event, listener);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return this.safe.chainId;\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_request) {\n        var method, _request$params, params, tx, resp, block, txHash, _resp, _txHash, _resp2;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                method = _request.method, _request$params = _request.params, params = _request$params === void 0 ? [] : _request$params;\n                _context3.t0 = method;\n                _context3.next = _context3.t0 === 'eth_accounts' ? 4 : _context3.t0 === 'net_version' ? 5 : _context3.t0 === 'eth_chainId' ? 5 : _context3.t0 === 'eth_sendTransaction' ? 6 : _context3.t0 === 'eth_blockNumber' ? 12 : _context3.t0 === 'eth_getBalance' ? 16 : _context3.t0 === 'eth_getCode' ? 17 : _context3.t0 === 'eth_getStorageAt' ? 18 : _context3.t0 === 'eth_getBlockByNumber' ? 19 : _context3.t0 === 'eth_getBlockByHash' ? 20 : _context3.t0 === 'eth_getTransactionByHash' ? 21 : _context3.t0 === 'eth_getTransactionReceipt' ? 34 : _context3.t0 === 'eth_estimateGas' ? 45 : _context3.t0 === 'eth_call' ? 46 : _context3.t0 === 'eth_getLogs' ? 47 : 48;\n                break;\n\n              case 4:\n                return _context3.abrupt(\"return\", [this.safe.safeAddress]);\n\n              case 5:\n                return _context3.abrupt(\"return\", \"0x\".concat(this.chainId.toString(16)));\n\n              case 6:\n                tx = Object.assign({\n                  value: '0',\n                  data: '0x'\n                }, params[0]);\n                _context3.next = 9;\n                return this.sdk.txs.send({\n                  txs: [tx]\n                });\n\n              case 9:\n                resp = _context3.sent;\n                // Store fake transaction\n                this.submittedTxs.set(resp.safeTxHash, {\n                  from: this.safe.safeAddress,\n                  hash: resp.safeTxHash,\n                  gas: 0,\n                  gasPrice: '0x00',\n                  nonce: 0,\n                  input: tx.data,\n                  value: tx.value,\n                  to: tx.to,\n                  blockHash: null,\n                  blockNumber: null,\n                  transactionIndex: null\n                });\n                return _context3.abrupt(\"return\", resp.safeTxHash);\n\n              case 12:\n                _context3.next = 14;\n                return this.sdk.eth.getBlockByNumber(['latest']);\n\n              case 14:\n                block = _context3.sent;\n                return _context3.abrupt(\"return\", block.number);\n\n              case 16:\n                return _context3.abrupt(\"return\", this.sdk.eth.getBalance([utils_1.getLowerCase(params[0]), params[1]]));\n\n              case 17:\n                return _context3.abrupt(\"return\", this.sdk.eth.getCode([utils_1.getLowerCase(params[0]), params[1]]));\n\n              case 18:\n                return _context3.abrupt(\"return\", this.sdk.eth.getStorageAt([utils_1.getLowerCase(params[0]), params[1], params[2]]));\n\n              case 19:\n                return _context3.abrupt(\"return\", this.sdk.eth.getBlockByNumber([params[0], params[1]]));\n\n              case 20:\n                return _context3.abrupt(\"return\", this.sdk.eth.getBlockByHash([params[0], params[1]]));\n\n              case 21:\n                txHash = params[0];\n                _context3.prev = 22;\n                _context3.next = 25;\n                return this.sdk.txs.getBySafeTxHash(txHash);\n\n              case 25:\n                _resp = _context3.sent;\n                txHash = _resp.txHash || txHash;\n                _context3.next = 31;\n                break;\n\n              case 29:\n                _context3.prev = 29;\n                _context3.t1 = _context3[\"catch\"](22);\n\n              case 31:\n                if (!this.submittedTxs.has(txHash)) {\n                  _context3.next = 33;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.submittedTxs.get(txHash));\n\n              case 33:\n                return _context3.abrupt(\"return\", this.sdk.eth.getTransactionByHash([txHash]).then(function (tx) {\n                  // We set the tx hash to the one requested, as some provider assert this\n                  if (tx) {\n                    tx.hash = params[0];\n                  }\n\n                  return tx;\n                }));\n\n              case 34:\n                _txHash = params[0];\n                _context3.prev = 35;\n                _context3.next = 38;\n                return this.sdk.txs.getBySafeTxHash(_txHash);\n\n              case 38:\n                _resp2 = _context3.sent;\n                _txHash = _resp2.txHash || _txHash;\n                _context3.next = 44;\n                break;\n\n              case 42:\n                _context3.prev = 42;\n                _context3.t2 = _context3[\"catch\"](35);\n\n              case 44:\n                return _context3.abrupt(\"return\", this.sdk.eth.getTransactionReceipt([_txHash]).then(function (tx) {\n                  // We set the tx hash to the one requested, as some provider assert this\n                  if (tx) {\n                    tx.transactionHash = params[0];\n                  }\n\n                  return tx;\n                }));\n\n              case 45:\n                return _context3.abrupt(\"return\", 0);\n\n              case 46:\n                return _context3.abrupt(\"return\", this.sdk.eth.call([params[0], params[1]]));\n\n              case 47:\n                return _context3.abrupt(\"return\", this.sdk.eth.getPastLogs([params[0]]));\n\n              case 48:\n                throw Error(\"\\\"\".concat(_request.method, \"\\\" not implemented\"));\n\n              case 49:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[22, 29], [35, 42]]);\n      }));\n\n      function request(_x) {\n        return _request2.apply(this, arguments);\n      }\n\n      return request;\n    }() // this method is needed for ethers v4\n    // https://github.com/ethers-io/ethers.js/blob/427e16826eb15d52d25c4f01027f8db22b74b76c/src.ts/providers/web3-provider.ts#L41-L55\n\n  }, {\n    key: \"send\",\n    value: function send(request, callback) {\n      if (!request) callback('Undefined request');\n      this.request(request).then(function (result) {\n        return callback(null, {\n          jsonrpc: '2.0',\n          id: request.id,\n          result: result\n        });\n      }).catch(function (error) {\n        return callback(error, null);\n      });\n    }\n  }]);\n\n  return SafeAppProvider;\n}();\n\nexports.SafeAppProvider = SafeAppProvider;","map":{"version":3,"sources":["../src/provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeAppProvider = void 0;\nconst events_1 = require(\"events\");\nconst utils_1 = require(\"./utils\");\n// The API is based on Ethereum JavaScript API Provider Standard. Link: https://eips.ethereum.org/EIPS/eip-1193\nclass SafeAppProvider {\n    constructor(safe, sdk) {\n        this.submittedTxs = new Map();\n        this.events = new events_1.EventEmitter();\n        this.safe = safe;\n        this.sdk = sdk;\n    }\n    async connect() {\n        this.events.emit('connect', { chainId: this.chainId });\n        return;\n    }\n    async disconnect() {\n        return;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    get chainId() {\n        return this.safe.chainId;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async request(request) {\n        const { method, params = [] } = request;\n        switch (method) {\n            case 'eth_accounts':\n                return [this.safe.safeAddress];\n            case 'net_version':\n            case 'eth_chainId':\n                return `0x${this.chainId.toString(16)}`;\n            case 'eth_sendTransaction':\n                const tx = Object.assign({ value: '0', data: '0x' }, params[0]);\n                const resp = await this.sdk.txs.send({\n                    txs: [tx],\n                });\n                // Store fake transaction\n                this.submittedTxs.set(resp.safeTxHash, {\n                    from: this.safe.safeAddress,\n                    hash: resp.safeTxHash,\n                    gas: 0,\n                    gasPrice: '0x00',\n                    nonce: 0,\n                    input: tx.data,\n                    value: tx.value,\n                    to: tx.to,\n                    blockHash: null,\n                    blockNumber: null,\n                    transactionIndex: null,\n                });\n                return resp.safeTxHash;\n            case 'eth_blockNumber':\n                const block = await this.sdk.eth.getBlockByNumber(['latest']);\n                return block.number;\n            case 'eth_getBalance':\n                return this.sdk.eth.getBalance([utils_1.getLowerCase(params[0]), params[1]]);\n            case 'eth_getCode':\n                return this.sdk.eth.getCode([utils_1.getLowerCase(params[0]), params[1]]);\n            case 'eth_getStorageAt':\n                return this.sdk.eth.getStorageAt([utils_1.getLowerCase(params[0]), params[1], params[2]]);\n            case 'eth_getBlockByNumber':\n                return this.sdk.eth.getBlockByNumber([params[0], params[1]]);\n            case 'eth_getBlockByHash':\n                return this.sdk.eth.getBlockByHash([params[0], params[1]]);\n            case 'eth_getTransactionByHash':\n                let txHash = params[0];\n                try {\n                    const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n                    txHash = resp.txHash || txHash;\n                }\n                catch (e) { }\n                // Use fake transaction if we don't have a real tx hash\n                if (this.submittedTxs.has(txHash)) {\n                    return this.submittedTxs.get(txHash);\n                }\n                return this.sdk.eth.getTransactionByHash([txHash]).then((tx) => {\n                    // We set the tx hash to the one requested, as some provider assert this\n                    if (tx) {\n                        tx.hash = params[0];\n                    }\n                    return tx;\n                });\n            case 'eth_getTransactionReceipt': {\n                let txHash = params[0];\n                try {\n                    const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n                    txHash = resp.txHash || txHash;\n                }\n                catch (e) { }\n                return this.sdk.eth.getTransactionReceipt([txHash]).then((tx) => {\n                    // We set the tx hash to the one requested, as some provider assert this\n                    if (tx) {\n                        tx.transactionHash = params[0];\n                    }\n                    return tx;\n                });\n            }\n            case 'eth_estimateGas': {\n                return 0;\n            }\n            case 'eth_call': {\n                return this.sdk.eth.call([params[0], params[1]]);\n            }\n            case 'eth_getLogs':\n                return this.sdk.eth.getPastLogs([params[0]]);\n            default:\n                throw Error(`\"${request.method}\" not implemented`);\n        }\n    }\n    // this method is needed for ethers v4\n    // https://github.com/ethers-io/ethers.js/blob/427e16826eb15d52d25c4f01027f8db22b74b76c/src.ts/providers/web3-provider.ts#L41-L55\n    send(request, callback) {\n        if (!request)\n            callback('Undefined request');\n        this.request(request)\n            .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n            .catch((error) => callback(error, null));\n    }\n}\nexports.SafeAppProvider = SafeAppProvider;\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"script"}