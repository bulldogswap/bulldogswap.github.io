{"ast":null,"code":"import _objectSpread from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import ReactGA from'react-ga';import{stringify}from'qs';import useParsedQueryString from'hooks/useParsedQueryString';import{useLocation}from'react-router-dom';import{useActiveLocale}from'./useActiveLocale';import{useMemo}from'react';export function useLocationLinkProps(locale){var location=useLocation();var qs=useParsedQueryString();var activeLocale=useActiveLocale();return useMemo(function(){return!locale?{}:{to:_objectSpread(_objectSpread({},location),{},{search:stringify(_objectSpread(_objectSpread({},qs),{},{lng:locale}))}),onClick:function onClick(){ReactGA.event({category:'Localization',action:'Switch Locale',label:\"\".concat(activeLocale,\" -> \").concat(locale)});}};},[location,qs,activeLocale,locale]);}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/useLocationLinkProps.ts"],"names":["ReactGA","stringify","useParsedQueryString","useLocation","useActiveLocale","useMemo","useLocationLinkProps","locale","location","qs","activeLocale","to","search","lng","onClick","event","category","action","label"],"mappings":"uLAAA,MAAOA,CAAAA,OAAP,KAAoB,UAApB,CACA,OAASC,SAAT,KAA0B,IAA1B,CACA,MAAOC,CAAAA,oBAAP,KAAiC,4BAAjC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAGA,OAASC,eAAT,KAAgC,mBAAhC,CACA,OAASC,OAAT,KAAwB,OAAxB,CAEA,MAAO,SAASC,CAAAA,oBAAT,CAA8BC,MAA9B,CAGL,CACA,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,EAAE,CAAGP,oBAAoB,EAA/B,CACA,GAAMQ,CAAAA,YAAY,CAAGN,eAAe,EAApC,CAEA,MAAOC,CAAAA,OAAO,CACZ,iBACE,CAACE,MAAD,CACI,EADJ,CAEI,CACEI,EAAE,gCACGH,QADH,MAEAI,MAAM,CAAEX,SAAS,gCAAMQ,EAAN,MAAUI,GAAG,CAAEN,MAAf,GAFjB,EADJ,CAKEO,OAAO,CAAE,kBAAM,CACbd,OAAO,CAACe,KAAR,CAAc,CACZC,QAAQ,CAAE,cADE,CAEZC,MAAM,CAAE,eAFI,CAGZC,KAAK,WAAKR,YAAL,gBAAwBH,MAAxB,CAHO,CAAd,EAKD,CAXH,CAHN,EADY,CAiBZ,CAACC,QAAD,CAAWC,EAAX,CAAeC,YAAf,CAA6BH,MAA7B,CAjBY,CAAd,CAmBD","sourcesContent":["import ReactGA from 'react-ga'\nimport { stringify } from 'qs'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useLocation } from 'react-router-dom'\nimport { LocationDescriptor } from 'history'\nimport { SupportedLocale } from 'constants/locales'\nimport { useActiveLocale } from './useActiveLocale'\nimport { useMemo } from 'react'\n\nexport function useLocationLinkProps(locale: SupportedLocale | null): {\n  to?: LocationDescriptor\n  onClick?: () => void\n} {\n  const location = useLocation()\n  const qs = useParsedQueryString()\n  const activeLocale = useActiveLocale()\n\n  return useMemo(\n    () =>\n      !locale\n        ? {}\n        : {\n            to: {\n              ...location,\n              search: stringify({ ...qs, lng: locale }),\n            },\n            onClick: () => {\n              ReactGA.event({\n                category: 'Localization',\n                action: 'Switch Locale',\n                label: `${activeLocale} -> ${locale}`,\n              })\n            },\n          },\n    [location, qs, activeLocale, locale]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}