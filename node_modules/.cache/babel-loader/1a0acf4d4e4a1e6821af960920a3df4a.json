{"ast":null,"code":"import _objectSpread from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createReducer}from'@reduxjs/toolkit';import{Field,resetMintState,setFullRange,typeInput,typeStartPriceInput,typeLeftRangeInput,typeRightRangeInput}from'./actions';var initialState={independentField:Field.CURRENCY_A,typedValue:'',startPriceTypedValue:'',leftRangeTypedValue:'',rightRangeTypedValue:''};export default createReducer(initialState,function(builder){return builder.addCase(resetMintState,function(){return initialState;}).addCase(setFullRange,function(state){return _objectSpread(_objectSpread({},state),{},{leftRangeTypedValue:true,rightRangeTypedValue:true});}).addCase(typeStartPriceInput,function(state,_ref){var typedValue=_ref.payload.typedValue;return _objectSpread(_objectSpread({},state),{},{startPriceTypedValue:typedValue});}).addCase(typeLeftRangeInput,function(state,_ref2){var typedValue=_ref2.payload.typedValue;return _objectSpread(_objectSpread({},state),{},{leftRangeTypedValue:typedValue});}).addCase(typeRightRangeInput,function(state,_ref3){var typedValue=_ref3.payload.typedValue;return _objectSpread(_objectSpread({},state),{},{rightRangeTypedValue:typedValue});}).addCase(typeInput,function(state,_ref4){var _ref4$payload=_ref4.payload,field=_ref4$payload.field,typedValue=_ref4$payload.typedValue,noLiquidity=_ref4$payload.noLiquidity;if(noLiquidity){// they're typing into the field they've last typed in\nif(field===state.independentField){return _objectSpread(_objectSpread({},state),{},{independentField:field,typedValue:typedValue});}// they're typing into a new field, store the other value\nelse{return _objectSpread(_objectSpread({},state),{},{independentField:field,typedValue:typedValue});}}else{return _objectSpread(_objectSpread({},state),{},{independentField:field,typedValue:typedValue});}});});","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/state/mint/v3/reducer.ts"],"names":["createReducer","Field","resetMintState","setFullRange","typeInput","typeStartPriceInput","typeLeftRangeInput","typeRightRangeInput","initialState","independentField","CURRENCY_A","typedValue","startPriceTypedValue","leftRangeTypedValue","rightRangeTypedValue","builder","addCase","state","payload","field","noLiquidity"],"mappings":"uLAAA,OAASA,aAAT,KAA8B,kBAA9B,CACA,OACEC,KADF,CAEEC,cAFF,CAGEC,YAHF,CAIEC,SAJF,CAKEC,mBALF,CAMEC,kBANF,CAOEC,mBAPF,KAQO,WARP,CAoBA,GAAMC,CAAAA,YAAuB,CAAG,CAC9BC,gBAAgB,CAAER,KAAK,CAACS,UADM,CAE9BC,UAAU,CAAE,EAFkB,CAG9BC,oBAAoB,CAAE,EAHQ,CAI9BC,mBAAmB,CAAE,EAJS,CAK9BC,oBAAoB,CAAE,EALQ,CAAhC,CAQA,cAAed,CAAAA,aAAa,CAAYQ,YAAZ,CAA0B,SAACO,OAAD,QACpDA,CAAAA,OAAO,CACJC,OADH,CACWd,cADX,CAC2B,iBAAMM,CAAAA,YAAN,EAD3B,EAEGQ,OAFH,CAEWb,YAFX,CAEyB,SAACc,KAAD,CAAW,CAChC,sCACKA,KADL,MAEEJ,mBAAmB,CAAE,IAFvB,CAGEC,oBAAoB,CAAE,IAHxB,GAKD,CARH,EASGE,OATH,CASWX,mBATX,CASgC,SAACY,KAAD,MAAwC,IAAnBN,CAAAA,UAAmB,MAA9BO,OAA8B,CAAnBP,UAAmB,CACpE,sCACKM,KADL,MAEEL,oBAAoB,CAAED,UAFxB,GAID,CAdH,EAeGK,OAfH,CAeWV,kBAfX,CAe+B,SAACW,KAAD,OAAwC,IAAnBN,CAAAA,UAAmB,OAA9BO,OAA8B,CAAnBP,UAAmB,CACnE,sCACKM,KADL,MAEEJ,mBAAmB,CAAEF,UAFvB,GAID,CApBH,EAqBGK,OArBH,CAqBWT,mBArBX,CAqBgC,SAACU,KAAD,OAAwC,IAAnBN,CAAAA,UAAmB,OAA9BO,OAA8B,CAAnBP,UAAmB,CACpE,sCACKM,KADL,MAEEH,oBAAoB,CAAEH,UAFxB,GAID,CA1BH,EA2BGK,OA3BH,CA2BWZ,SA3BX,CA2BsB,SAACa,KAAD,OAA4D,yBAAlDC,OAAkD,CAAvCC,KAAuC,eAAvCA,KAAuC,CAAhCR,UAAgC,eAAhCA,UAAgC,CAApBS,WAAoB,eAApBA,WAAoB,CAC9E,GAAIA,WAAJ,CAAiB,CACf;AACA,GAAID,KAAK,GAAKF,KAAK,CAACR,gBAApB,CAAsC,CACpC,sCACKQ,KADL,MAEER,gBAAgB,CAAEU,KAFpB,CAGER,UAAU,CAAVA,UAHF,GAKD,CACD;AAPA,IAQK,CACH,sCACKM,KADL,MAEER,gBAAgB,CAAEU,KAFpB,CAGER,UAAU,CAAVA,UAHF,GAKD,CACF,CAjBD,IAiBO,CACL,sCACKM,KADL,MAEER,gBAAgB,CAAEU,KAFpB,CAGER,UAAU,CAAVA,UAHF,GAKD,CACF,CApDH,CADoD,EAA1B,CAA5B","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport {\n  Field,\n  resetMintState,\n  setFullRange,\n  typeInput,\n  typeStartPriceInput,\n  typeLeftRangeInput,\n  typeRightRangeInput,\n} from './actions'\n\nexport type FullRange = true\n\ninterface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly startPriceTypedValue: string // for the case when there's no liquidity\n  readonly leftRangeTypedValue: string | FullRange\n  readonly rightRangeTypedValue: string | FullRange\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  startPriceTypedValue: '',\n  leftRangeTypedValue: '',\n  rightRangeTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(setFullRange, (state) => {\n      return {\n        ...state,\n        leftRangeTypedValue: true,\n        rightRangeTypedValue: true,\n      }\n    })\n    .addCase(typeStartPriceInput, (state, { payload: { typedValue } }) => {\n      return {\n        ...state,\n        startPriceTypedValue: typedValue,\n      }\n    })\n    .addCase(typeLeftRangeInput, (state, { payload: { typedValue } }) => {\n      return {\n        ...state,\n        leftRangeTypedValue: typedValue,\n      }\n    })\n    .addCase(typeRightRangeInput, (state, { payload: { typedValue } }) => {\n      return {\n        ...state,\n        rightRangeTypedValue: typedValue,\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n        else {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n      } else {\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n        }\n      }\n    })\n)\n"]},"metadata":{},"sourceType":"module"}