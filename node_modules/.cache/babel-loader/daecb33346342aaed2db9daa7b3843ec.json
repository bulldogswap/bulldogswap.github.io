{"ast":null,"code":"import _toConsumableArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import flatMap from'lodash.flatmap';import{useMemo}from'react';import{ADDITIONAL_BASES,BASES_TO_CHECK_TRADES_AGAINST,CUSTOM_BASES}from'../constants/routing';import{useActiveWeb3React}from'./web3';export function useAllCurrencyCombinations(currencyA,currencyB){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var _ref=chainId?[currencyA===null||currencyA===void 0?void 0:currencyA.wrapped,currencyB===null||currencyB===void 0?void 0:currencyB.wrapped]:[undefined,undefined],_ref2=_slicedToArray(_ref,2),tokenA=_ref2[0],tokenB=_ref2[1];var bases=useMemo(function(){var _BASES_TO_CHECK_TRADE,_ADDITIONAL_BASES$cha,_ADDITIONAL_BASES$cha2,_ADDITIONAL_BASES$cha3,_ADDITIONAL_BASES$cha4;if(!chainId)return[];var common=(_BASES_TO_CHECK_TRADE=BASES_TO_CHECK_TRADES_AGAINST[chainId])!==null&&_BASES_TO_CHECK_TRADE!==void 0?_BASES_TO_CHECK_TRADE:[];var additionalA=tokenA?(_ADDITIONAL_BASES$cha=(_ADDITIONAL_BASES$cha2=ADDITIONAL_BASES[chainId])===null||_ADDITIONAL_BASES$cha2===void 0?void 0:_ADDITIONAL_BASES$cha2[tokenA.address])!==null&&_ADDITIONAL_BASES$cha!==void 0?_ADDITIONAL_BASES$cha:[]:[];var additionalB=tokenB?(_ADDITIONAL_BASES$cha3=(_ADDITIONAL_BASES$cha4=ADDITIONAL_BASES[chainId])===null||_ADDITIONAL_BASES$cha4===void 0?void 0:_ADDITIONAL_BASES$cha4[tokenB.address])!==null&&_ADDITIONAL_BASES$cha3!==void 0?_ADDITIONAL_BASES$cha3:[]:[];return[].concat(_toConsumableArray(common),_toConsumableArray(additionalA),_toConsumableArray(additionalB));},[chainId,tokenA,tokenB]);var basePairs=useMemo(function(){return flatMap(bases,function(base){return bases.map(function(otherBase){return[base,otherBase];});});},[bases]);return useMemo(function(){return tokenA&&tokenB?[// the direct pair\n[tokenA,tokenB]].concat(_toConsumableArray(bases.map(function(base){return[tokenA,base];})),_toConsumableArray(bases.map(function(base){return[tokenB,base];})),_toConsumableArray(basePairs)).filter(function(tokens){return Boolean(tokens[0]&&tokens[1]);}).filter(function(_ref3){var _ref4=_slicedToArray(_ref3,2),t0=_ref4[0],t1=_ref4[1];return t0.address!==t1.address;}).filter(function(_ref5){var _ref6=_slicedToArray(_ref5,2),tokenA=_ref6[0],tokenB=_ref6[1];if(!chainId)return true;var customBases=CUSTOM_BASES[chainId];var customBasesA=customBases===null||customBases===void 0?void 0:customBases[tokenA.address];var customBasesB=customBases===null||customBases===void 0?void 0:customBases[tokenB.address];if(!customBasesA&&!customBasesB)return true;if(customBasesA&&!customBasesA.find(function(base){return tokenB.equals(base);}))return false;if(customBasesB&&!customBasesB.find(function(base){return tokenA.equals(base);}))return false;return true;}):[];},[tokenA,tokenB,bases,basePairs,chainId]);}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/hooks/useAllCurrencyCombinations.ts"],"names":["flatMap","useMemo","ADDITIONAL_BASES","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","useActiveWeb3React","useAllCurrencyCombinations","currencyA","currencyB","chainId","wrapped","undefined","tokenA","tokenB","bases","common","additionalA","address","additionalB","basePairs","base","map","otherBase","filter","tokens","Boolean","t0","t1","customBases","customBasesA","customBasesB","find","equals"],"mappings":"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","sourcesContent":["import { Currency, Token } from '@uniswap/sdk-core'\nimport flatMap from 'lodash.flatmap'\nimport { useMemo } from 'react'\nimport { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from '../constants/routing'\nimport { useActiveWeb3React } from './web3'\n\nexport function useAllCurrencyCombinations(currencyA?: Currency, currencyB?: Currency): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId ? [currencyA?.wrapped, currencyB?.wrapped] : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases]\n  )\n\n  return useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA, tokenB]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}