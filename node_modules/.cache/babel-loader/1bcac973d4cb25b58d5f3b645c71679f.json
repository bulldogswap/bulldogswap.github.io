{"ast":null,"code":"import{useCallback,useMemo}from'react';import{usePoolActiveLiquidity}from'hooks/usePoolTickData';export function useDensityChartData(_ref){var currencyA=_ref.currencyA,currencyB=_ref.currencyB,feeAmount=_ref.feeAmount;var _usePoolActiveLiquidi=usePoolActiveLiquidity(currencyA,currencyB,feeAmount),isLoading=_usePoolActiveLiquidi.isLoading,isUninitialized=_usePoolActiveLiquidi.isUninitialized,isError=_usePoolActiveLiquidi.isError,error=_usePoolActiveLiquidi.error,data=_usePoolActiveLiquidi.data;var formatData=useCallback(function(){if(!(data===null||data===void 0?void 0:data.length)){return undefined;}var newData=[];for(var i=0;i<data.length;i++){var t=data[i];var chartEntry={activeLiquidity:parseFloat(t.liquidityActive.toString()),price0:parseFloat(t.price0)};if(chartEntry.activeLiquidity>0){newData.push(chartEntry);}}return newData;},[data]);return useMemo(function(){return{isLoading:isLoading,isUninitialized:isUninitialized,isError:isError,error:error,formattedData:!isLoading&&!isUninitialized?formatData():undefined};},[isLoading,isUninitialized,isError,error,formatData]);}","map":{"version":3,"sources":["/Users/nakanoteppei/Documents/Jupiter/Codes/bulldogswap.github.io/src/components/LiquidityChartRangeInput/hooks.ts"],"names":["useCallback","useMemo","usePoolActiveLiquidity","useDensityChartData","currencyA","currencyB","feeAmount","isLoading","isUninitialized","isError","error","data","formatData","length","undefined","newData","i","t","chartEntry","activeLiquidity","parseFloat","liquidityActive","toString","price0","push","formattedData"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,OAAtB,KAAqC,OAArC,CAGA,OAASC,sBAAT,KAAuC,uBAAvC,CASA,MAAO,SAASC,CAAAA,mBAAT,MAQJ,IAPDC,CAAAA,SAOC,MAPDA,SAOC,CANDC,SAMC,MANDA,SAMC,CALDC,SAKC,MALDA,SAKC,CACD,0BAA6DJ,sBAAsB,CAACE,SAAD,CAAYC,SAAZ,CAAuBC,SAAvB,CAAnF,CAAQC,SAAR,uBAAQA,SAAR,CAAmBC,eAAnB,uBAAmBA,eAAnB,CAAoCC,OAApC,uBAAoCA,OAApC,CAA6CC,KAA7C,uBAA6CA,KAA7C,CAAoDC,IAApD,uBAAoDA,IAApD,CAEA,GAAMC,CAAAA,UAAU,CAAGZ,WAAW,CAAC,UAAM,CACnC,GAAI,EAACW,IAAD,SAACA,IAAD,iBAACA,IAAI,CAAEE,MAAP,CAAJ,CAAmB,CACjB,MAAOC,CAAAA,SAAP,CACD,CAED,GAAMC,CAAAA,OAAqB,CAAG,EAA9B,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,IAAI,CAACE,MAAzB,CAAiCG,CAAC,EAAlC,CAAsC,CACpC,GAAMC,CAAAA,CAAgB,CAAGN,IAAI,CAACK,CAAD,CAA7B,CAEA,GAAME,CAAAA,UAAU,CAAG,CACjBC,eAAe,CAAEC,UAAU,CAACH,CAAC,CAACI,eAAF,CAAkBC,QAAlB,EAAD,CADV,CAEjBC,MAAM,CAAEH,UAAU,CAACH,CAAC,CAACM,MAAH,CAFD,CAAnB,CAKA,GAAIL,UAAU,CAACC,eAAX,CAA6B,CAAjC,CAAoC,CAClCJ,OAAO,CAACS,IAAR,CAAaN,UAAb,EACD,CACF,CAED,MAAOH,CAAAA,OAAP,CACD,CArB6B,CAqB3B,CAACJ,IAAD,CArB2B,CAA9B,CAuBA,MAAOV,CAAAA,OAAO,CAAC,UAAM,CACnB,MAAO,CACLM,SAAS,CAATA,SADK,CAELC,eAAe,CAAfA,eAFK,CAGLC,OAAO,CAAPA,OAHK,CAILC,KAAK,CAALA,KAJK,CAKLe,aAAa,CAAE,CAAClB,SAAD,EAAc,CAACC,eAAf,CAAiCI,UAAU,EAA3C,CAAgDE,SAL1D,CAAP,CAOD,CARa,CAQX,CAACP,SAAD,CAAYC,eAAZ,CAA6BC,OAA7B,CAAsCC,KAAtC,CAA6CE,UAA7C,CARW,CAAd,CASD","sourcesContent":["import { useCallback, useMemo } from 'react'\nimport { Currency } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { usePoolActiveLiquidity } from 'hooks/usePoolTickData'\nimport { ChartEntry } from './types'\nimport JSBI from 'jsbi'\n\nexport interface TickProcessed {\n  liquidityActive: JSBI\n  price0: string\n}\n\nexport function useDensityChartData({\n  currencyA,\n  currencyB,\n  feeAmount,\n}: {\n  currencyA: Currency | undefined\n  currencyB: Currency | undefined\n  feeAmount: FeeAmount | undefined\n}) {\n  const { isLoading, isUninitialized, isError, error, data } = usePoolActiveLiquidity(currencyA, currencyB, feeAmount)\n\n  const formatData = useCallback(() => {\n    if (!data?.length) {\n      return undefined\n    }\n\n    const newData: ChartEntry[] = []\n\n    for (let i = 0; i < data.length; i++) {\n      const t: TickProcessed = data[i]\n\n      const chartEntry = {\n        activeLiquidity: parseFloat(t.liquidityActive.toString()),\n        price0: parseFloat(t.price0),\n      }\n\n      if (chartEntry.activeLiquidity > 0) {\n        newData.push(chartEntry)\n      }\n    }\n\n    return newData\n  }, [data])\n\n  return useMemo(() => {\n    return {\n      isLoading,\n      isUninitialized,\n      isError,\n      error,\n      formattedData: !isLoading && !isUninitialized ? formatData() : undefined,\n    }\n  }, [isLoading, isUninitialized, isError, error, formatData])\n}\n"]},"metadata":{},"sourceType":"module"}